digraph {
	compound = "true"
	newrank = "true"
	subgraph "root" {
		"[root] aws_appautoscaling_policy.scale_down (expand)" [label = "aws_appautoscaling_policy.scale_down", shape = "box"]
		"[root] aws_appautoscaling_policy.scale_up (expand)" [label = "aws_appautoscaling_policy.scale_up", shape = "box"]
		"[root] aws_appautoscaling_target.this (expand)" [label = "aws_appautoscaling_target.this", shape = "box"]
		"[root] aws_cloudfront_distribution.this (expand)" [label = "aws_cloudfront_distribution.this", shape = "box"]
		"[root] aws_cloudwatch_log_group.wordpress (expand)" [label = "aws_cloudwatch_log_group.wordpress", shape = "box"]
		"[root] aws_cloudwatch_metric_alarm.cpu_utilization_high (expand)" [label = "aws_cloudwatch_metric_alarm.cpu_utilization_high", shape = "box"]
		"[root] aws_cloudwatch_metric_alarm.cpu_utilization_low (expand)" [label = "aws_cloudwatch_metric_alarm.cpu_utilization_low", shape = "box"]
		"[root] aws_db_subnet_group.this (expand)" [label = "aws_db_subnet_group.this", shape = "box"]
		"[root] aws_ecs_cluster.this (expand)" [label = "aws_ecs_cluster.this", shape = "box"]
		"[root] aws_ecs_service.this (expand)" [label = "aws_ecs_service.this", shape = "box"]
		"[root] aws_ecs_task_definition.this (expand)" [label = "aws_ecs_task_definition.this", shape = "box"]
		"[root] aws_efs_file_system.this (expand)" [label = "aws_efs_file_system.this", shape = "box"]
		"[root] aws_efs_mount_target.this (expand)" [label = "aws_efs_mount_target.this", shape = "box"]
		"[root] aws_iam_policy.task_execution_policy (expand)" [label = "aws_iam_policy.task_execution_policy", shape = "box"]
		"[root] aws_iam_policy.task_policy (expand)" [label = "aws_iam_policy.task_policy", shape = "box"]
		"[root] aws_iam_role.task_execution_role (expand)" [label = "aws_iam_role.task_execution_role", shape = "box"]
		"[root] aws_iam_role.task_role (expand)" [label = "aws_iam_role.task_role", shape = "box"]
		"[root] aws_iam_role_policy_attachment.task_execution_policy_attach (expand)" [label = "aws_iam_role_policy_attachment.task_execution_policy_attach", shape = "box"]
		"[root] aws_iam_role_policy_attachment.task_policy_attach (expand)" [label = "aws_iam_role_policy_attachment.task_policy_attach", shape = "box"]
		"[root] aws_lb_listener_rule.wordpress (expand)" [label = "aws_lb_listener_rule.wordpress", shape = "box"]
		"[root] aws_lb_target_group.this (expand)" [label = "aws_lb_target_group.this", shape = "box"]
		"[root] aws_rds_cluster.this (expand)" [label = "aws_rds_cluster.this", shape = "box"]
		"[root] aws_route53_record.ipv4 (expand)" [label = "aws_route53_record.ipv4", shape = "box"]
		"[root] aws_route53_record.ipv6 (expand)" [label = "aws_route53_record.ipv6", shape = "box"]
		"[root] aws_route53_record.wordpress (expand)" [label = "aws_route53_record.wordpress", shape = "box"]
		"[root] aws_security_group.alb (expand)" [label = "aws_security_group.alb", shape = "box"]
		"[root] aws_security_group.db (expand)" [label = "aws_security_group.db", shape = "box"]
		"[root] aws_security_group.efs (expand)" [label = "aws_security_group.efs", shape = "box"]
		"[root] aws_security_group.wordpress (expand)" [label = "aws_security_group.wordpress", shape = "box"]
		"[root] aws_ssm_parameter.db_master_password (expand)" [label = "aws_ssm_parameter.db_master_password", shape = "box"]
		"[root] aws_ssm_parameter.db_master_user (expand)" [label = "aws_ssm_parameter.db_master_user", shape = "box"]
		"[root] data.aws_availability_zones.this (expand)" [label = "data.aws_availability_zones.this", shape = "box"]
		"[root] data.aws_caller_identity.current (expand)" [label = "data.aws_caller_identity.current", shape = "box"]
		"[root] data.aws_region.current (expand)" [label = "data.aws_region.current", shape = "box"]
		"[root] data.aws_route53_zone.this (expand)" [label = "data.aws_route53_zone.this", shape = "box"]
		"[root] module.acm.aws_acm_certificate.this (expand)" [label = "module.acm.aws_acm_certificate.this", shape = "box"]
		"[root] module.acm.aws_acm_certificate_validation.this (expand)" [label = "module.acm.aws_acm_certificate_validation.this", shape = "box"]
		"[root] module.acm.aws_route53_record.validation (expand)" [label = "module.acm.aws_route53_record.validation", shape = "box"]
		"[root] module.acm_alb.aws_acm_certificate.this (expand)" [label = "module.acm_alb.aws_acm_certificate.this", shape = "box"]
		"[root] module.acm_alb.aws_acm_certificate_validation.this (expand)" [label = "module.acm_alb.aws_acm_certificate_validation.this", shape = "box"]
		"[root] module.acm_alb.aws_route53_record.validation (expand)" [label = "module.acm_alb.aws_route53_record.validation", shape = "box"]
		"[root] module.alb.aws_lb.this (expand)" [label = "module.alb.aws_lb.this", shape = "box"]
		"[root] module.alb.aws_lb_listener.frontend_http_tcp (expand)" [label = "module.alb.aws_lb_listener.frontend_http_tcp", shape = "box"]
		"[root] module.alb.aws_lb_listener.frontend_https (expand)" [label = "module.alb.aws_lb_listener.frontend_https", shape = "box"]
		"[root] module.alb.aws_lb_listener_certificate.https_listener (expand)" [label = "module.alb.aws_lb_listener_certificate.https_listener", shape = "box"]
		"[root] module.alb.aws_lb_listener_rule.https_listener_rule (expand)" [label = "module.alb.aws_lb_listener_rule.https_listener_rule", shape = "box"]
		"[root] module.alb.aws_lb_target_group.main (expand)" [label = "module.alb.aws_lb_target_group.main", shape = "box"]
		"[root] module.alb.aws_lb_target_group_attachment.this (expand)" [label = "module.alb.aws_lb_target_group_attachment.this", shape = "box"]
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" [label = "module.vpc.aws_cloudwatch_log_group.flow_log", shape = "box"]
		"[root] module.vpc.aws_customer_gateway.this (expand)" [label = "module.vpc.aws_customer_gateway.this", shape = "box"]
		"[root] module.vpc.aws_db_subnet_group.database (expand)" [label = "module.vpc.aws_db_subnet_group.database", shape = "box"]
		"[root] module.vpc.aws_default_network_acl.this (expand)" [label = "module.vpc.aws_default_network_acl.this", shape = "box"]
		"[root] module.vpc.aws_default_route_table.default (expand)" [label = "module.vpc.aws_default_route_table.default", shape = "box"]
		"[root] module.vpc.aws_default_security_group.this (expand)" [label = "module.vpc.aws_default_security_group.this", shape = "box"]
		"[root] module.vpc.aws_default_vpc.this (expand)" [label = "module.vpc.aws_default_vpc.this", shape = "box"]
		"[root] module.vpc.aws_egress_only_internet_gateway.this (expand)" [label = "module.vpc.aws_egress_only_internet_gateway.this", shape = "box"]
		"[root] module.vpc.aws_eip.nat (expand)" [label = "module.vpc.aws_eip.nat", shape = "box"]
		"[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)" [label = "module.vpc.aws_elasticache_subnet_group.elasticache", shape = "box"]
		"[root] module.vpc.aws_flow_log.this (expand)" [label = "module.vpc.aws_flow_log.this", shape = "box"]
		"[root] module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch (expand)" [label = "module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch", shape = "box"]
		"[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)" [label = "module.vpc.aws_iam_role.vpc_flow_log_cloudwatch", shape = "box"]
		"[root] module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch (expand)" [label = "module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch", shape = "box"]
		"[root] module.vpc.aws_internet_gateway.this (expand)" [label = "module.vpc.aws_internet_gateway.this", shape = "box"]
		"[root] module.vpc.aws_nat_gateway.this (expand)" [label = "module.vpc.aws_nat_gateway.this", shape = "box"]
		"[root] module.vpc.aws_network_acl.database (expand)" [label = "module.vpc.aws_network_acl.database", shape = "box"]
		"[root] module.vpc.aws_network_acl.elasticache (expand)" [label = "module.vpc.aws_network_acl.elasticache", shape = "box"]
		"[root] module.vpc.aws_network_acl.intra (expand)" [label = "module.vpc.aws_network_acl.intra", shape = "box"]
		"[root] module.vpc.aws_network_acl.outpost (expand)" [label = "module.vpc.aws_network_acl.outpost", shape = "box"]
		"[root] module.vpc.aws_network_acl.private (expand)" [label = "module.vpc.aws_network_acl.private", shape = "box"]
		"[root] module.vpc.aws_network_acl.public (expand)" [label = "module.vpc.aws_network_acl.public", shape = "box"]
		"[root] module.vpc.aws_network_acl.redshift (expand)" [label = "module.vpc.aws_network_acl.redshift", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.database_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.database_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.database_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.database_outbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.elasticache_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.elasticache_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.elasticache_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.elasticache_outbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.intra_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.intra_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.intra_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.intra_outbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.outpost_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.outpost_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.outpost_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.outpost_outbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.private_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.private_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.private_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.private_outbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.public_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.public_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.public_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.public_outbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.redshift_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.redshift_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.redshift_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.redshift_outbound", shape = "box"]
		"[root] module.vpc.aws_redshift_subnet_group.redshift (expand)" [label = "module.vpc.aws_redshift_subnet_group.redshift", shape = "box"]
		"[root] module.vpc.aws_route.database_dns64_nat_gateway (expand)" [label = "module.vpc.aws_route.database_dns64_nat_gateway", shape = "box"]
		"[root] module.vpc.aws_route.database_internet_gateway (expand)" [label = "module.vpc.aws_route.database_internet_gateway", shape = "box"]
		"[root] module.vpc.aws_route.database_ipv6_egress (expand)" [label = "module.vpc.aws_route.database_ipv6_egress", shape = "box"]
		"[root] module.vpc.aws_route.database_nat_gateway (expand)" [label = "module.vpc.aws_route.database_nat_gateway", shape = "box"]
		"[root] module.vpc.aws_route.private_dns64_nat_gateway (expand)" [label = "module.vpc.aws_route.private_dns64_nat_gateway", shape = "box"]
		"[root] module.vpc.aws_route.private_ipv6_egress (expand)" [label = "module.vpc.aws_route.private_ipv6_egress", shape = "box"]
		"[root] module.vpc.aws_route.private_nat_gateway (expand)" [label = "module.vpc.aws_route.private_nat_gateway", shape = "box"]
		"[root] module.vpc.aws_route.public_internet_gateway (expand)" [label = "module.vpc.aws_route.public_internet_gateway", shape = "box"]
		"[root] module.vpc.aws_route.public_internet_gateway_ipv6 (expand)" [label = "module.vpc.aws_route.public_internet_gateway_ipv6", shape = "box"]
		"[root] module.vpc.aws_route_table.database (expand)" [label = "module.vpc.aws_route_table.database", shape = "box"]
		"[root] module.vpc.aws_route_table.elasticache (expand)" [label = "module.vpc.aws_route_table.elasticache", shape = "box"]
		"[root] module.vpc.aws_route_table.intra (expand)" [label = "module.vpc.aws_route_table.intra", shape = "box"]
		"[root] module.vpc.aws_route_table.private (expand)" [label = "module.vpc.aws_route_table.private", shape = "box"]
		"[root] module.vpc.aws_route_table.public (expand)" [label = "module.vpc.aws_route_table.public", shape = "box"]
		"[root] module.vpc.aws_route_table.redshift (expand)" [label = "module.vpc.aws_route_table.redshift", shape = "box"]
		"[root] module.vpc.aws_route_table_association.database (expand)" [label = "module.vpc.aws_route_table_association.database", shape = "box"]
		"[root] module.vpc.aws_route_table_association.elasticache (expand)" [label = "module.vpc.aws_route_table_association.elasticache", shape = "box"]
		"[root] module.vpc.aws_route_table_association.intra (expand)" [label = "module.vpc.aws_route_table_association.intra", shape = "box"]
		"[root] module.vpc.aws_route_table_association.outpost (expand)" [label = "module.vpc.aws_route_table_association.outpost", shape = "box"]
		"[root] module.vpc.aws_route_table_association.private (expand)" [label = "module.vpc.aws_route_table_association.private", shape = "box"]
		"[root] module.vpc.aws_route_table_association.public (expand)" [label = "module.vpc.aws_route_table_association.public", shape = "box"]
		"[root] module.vpc.aws_route_table_association.redshift (expand)" [label = "module.vpc.aws_route_table_association.redshift", shape = "box"]
		"[root] module.vpc.aws_route_table_association.redshift_public (expand)" [label = "module.vpc.aws_route_table_association.redshift_public", shape = "box"]
		"[root] module.vpc.aws_subnet.database (expand)" [label = "module.vpc.aws_subnet.database", shape = "box"]
		"[root] module.vpc.aws_subnet.elasticache (expand)" [label = "module.vpc.aws_subnet.elasticache", shape = "box"]
		"[root] module.vpc.aws_subnet.intra (expand)" [label = "module.vpc.aws_subnet.intra", shape = "box"]
		"[root] module.vpc.aws_subnet.outpost (expand)" [label = "module.vpc.aws_subnet.outpost", shape = "box"]
		"[root] module.vpc.aws_subnet.private (expand)" [label = "module.vpc.aws_subnet.private", shape = "box"]
		"[root] module.vpc.aws_subnet.public (expand)" [label = "module.vpc.aws_subnet.public", shape = "box"]
		"[root] module.vpc.aws_subnet.redshift (expand)" [label = "module.vpc.aws_subnet.redshift", shape = "box"]
		"[root] module.vpc.aws_vpc.this (expand)" [label = "module.vpc.aws_vpc.this", shape = "box"]
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" [label = "module.vpc.aws_vpc_dhcp_options.this", shape = "box"]
		"[root] module.vpc.aws_vpc_dhcp_options_association.this (expand)" [label = "module.vpc.aws_vpc_dhcp_options_association.this", shape = "box"]
		"[root] module.vpc.aws_vpc_ipv4_cidr_block_association.this (expand)" [label = "module.vpc.aws_vpc_ipv4_cidr_block_association.this", shape = "box"]
		"[root] module.vpc.aws_vpn_gateway.this (expand)" [label = "module.vpc.aws_vpn_gateway.this", shape = "box"]
		"[root] module.vpc.aws_vpn_gateway_attachment.this (expand)" [label = "module.vpc.aws_vpn_gateway_attachment.this", shape = "box"]
		"[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)" [label = "module.vpc.aws_vpn_gateway_route_propagation.intra", shape = "box"]
		"[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)" [label = "module.vpc.aws_vpn_gateway_route_propagation.private", shape = "box"]
		"[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)" [label = "module.vpc.aws_vpn_gateway_route_propagation.public", shape = "box"]
		"[root] module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role (expand)" [label = "module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role", shape = "box"]
		"[root] module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch (expand)" [label = "module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch", shape = "box"]
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"]" [label = "provider[\"registry.terraform.io/hashicorp/aws\"]", shape = "diamond"]
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"].us_east_1" [label = "provider[\"registry.terraform.io/hashicorp/aws\"].us_east_1", shape = "diamond"]
		"[root] provider[\"registry.terraform.io/hashicorp/random\"]" [label = "provider[\"registry.terraform.io/hashicorp/random\"]", shape = "diamond"]
		"[root] random_string.snapshot_suffix (expand)" [label = "random_string.snapshot_suffix", shape = "box"]
		"[root] var.cf_price_class" [label = "var.cf_price_class", shape = "note"]
		"[root] var.db_auto_pause" [label = "var.db_auto_pause", shape = "note"]
		"[root] var.db_backup_retention_days" [label = "var.db_backup_retention_days", shape = "note"]
		"[root] var.db_backup_window" [label = "var.db_backup_window", shape = "note"]
		"[root] var.db_engine_version" [label = "var.db_engine_version", shape = "note"]
		"[root] var.db_master_password" [label = "var.db_master_password", shape = "note"]
		"[root] var.db_master_username" [label = "var.db_master_username", shape = "note"]
		"[root] var.db_max_capacity" [label = "var.db_max_capacity", shape = "note"]
		"[root] var.db_min_capacity" [label = "var.db_min_capacity", shape = "note"]
		"[root] var.db_seconds_until_auto_pause" [label = "var.db_seconds_until_auto_pause", shape = "note"]
		"[root] var.desired_count" [label = "var.desired_count", shape = "note"]
		"[root] var.environment" [label = "var.environment", shape = "note"]
		"[root] var.error_ttl" [label = "var.error_ttl", shape = "note"]
		"[root] var.log_retention_in_days" [label = "var.log_retention_in_days", shape = "note"]
		"[root] var.max_task" [label = "var.max_task", shape = "note"]
		"[root] var.min_task" [label = "var.min_task", shape = "note"]
		"[root] var.prefix" [label = "var.prefix", shape = "note"]
		"[root] var.private_subnet_cidrs" [label = "var.private_subnet_cidrs", shape = "note"]
		"[root] var.public_alb_domain" [label = "var.public_alb_domain", shape = "note"]
		"[root] var.public_subnet_cidrs" [label = "var.public_subnet_cidrs", shape = "note"]
		"[root] var.scaling_down_adjustment" [label = "var.scaling_down_adjustment", shape = "note"]
		"[root] var.scaling_down_cooldown" [label = "var.scaling_down_cooldown", shape = "note"]
		"[root] var.scaling_up_adjustment" [label = "var.scaling_up_adjustment", shape = "note"]
		"[root] var.scaling_up_cooldown" [label = "var.scaling_up_cooldown", shape = "note"]
		"[root] var.site_domain" [label = "var.site_domain", shape = "note"]
		"[root] var.tags" [label = "var.tags", shape = "note"]
		"[root] var.task_cpu" [label = "var.task_cpu", shape = "note"]
		"[root] var.task_cpu_high_threshold" [label = "var.task_cpu_high_threshold", shape = "note"]
		"[root] var.task_cpu_low_threshold" [label = "var.task_cpu_low_threshold", shape = "note"]
		"[root] var.task_memory" [label = "var.task_memory", shape = "note"]
		"[root] var.vpc_cidr" [label = "var.vpc_cidr", shape = "note"]
		"[root] aws_appautoscaling_policy.scale_down (expand)" -> "[root] aws_appautoscaling_target.this (expand)"
		"[root] aws_appautoscaling_policy.scale_down (expand)" -> "[root] var.scaling_down_adjustment"
		"[root] aws_appautoscaling_policy.scale_down (expand)" -> "[root] var.scaling_down_cooldown"
		"[root] aws_appautoscaling_policy.scale_up (expand)" -> "[root] aws_appautoscaling_target.this (expand)"
		"[root] aws_appautoscaling_policy.scale_up (expand)" -> "[root] var.scaling_up_adjustment"
		"[root] aws_appautoscaling_policy.scale_up (expand)" -> "[root] var.scaling_up_cooldown"
		"[root] aws_appautoscaling_target.this (expand)" -> "[root] aws_ecs_service.this (expand)"
		"[root] aws_appautoscaling_target.this (expand)" -> "[root] var.max_task"
		"[root] aws_appautoscaling_target.this (expand)" -> "[root] var.min_task"
		"[root] aws_cloudfront_distribution.this (expand)" -> "[root] aws_ecs_service.this (expand)"
		"[root] aws_cloudfront_distribution.this (expand)" -> "[root] module.acm.output.this_acm_certificate_arn (expand)"
		"[root] aws_cloudfront_distribution.this (expand)" -> "[root] var.cf_price_class"
		"[root] aws_cloudfront_distribution.this (expand)" -> "[root] var.error_ttl"
		"[root] aws_cloudfront_distribution.this (expand)" -> "[root] var.public_alb_domain"
		"[root] aws_cloudwatch_log_group.wordpress (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] aws_cloudwatch_log_group.wordpress (expand)" -> "[root] var.environment"
		"[root] aws_cloudwatch_log_group.wordpress (expand)" -> "[root] var.log_retention_in_days"
		"[root] aws_cloudwatch_log_group.wordpress (expand)" -> "[root] var.prefix"
		"[root] aws_cloudwatch_log_group.wordpress (expand)" -> "[root] var.tags"
		"[root] aws_cloudwatch_metric_alarm.cpu_utilization_high (expand)" -> "[root] aws_appautoscaling_policy.scale_up (expand)"
		"[root] aws_cloudwatch_metric_alarm.cpu_utilization_high (expand)" -> "[root] var.task_cpu_high_threshold"
		"[root] aws_cloudwatch_metric_alarm.cpu_utilization_low (expand)" -> "[root] aws_appautoscaling_policy.scale_down (expand)"
		"[root] aws_cloudwatch_metric_alarm.cpu_utilization_low (expand)" -> "[root] var.task_cpu_low_threshold"
		"[root] aws_db_subnet_group.this (expand)" -> "[root] module.vpc.output.private_subnets (expand)"
		"[root] aws_ecs_cluster.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] aws_ecs_cluster.this (expand)" -> "[root] var.environment"
		"[root] aws_ecs_cluster.this (expand)" -> "[root] var.prefix"
		"[root] aws_ecs_service.this (expand)" -> "[root] aws_ecs_cluster.this (expand)"
		"[root] aws_ecs_service.this (expand)" -> "[root] aws_ecs_task_definition.this (expand)"
		"[root] aws_ecs_service.this (expand)" -> "[root] aws_lb_target_group.this (expand)"
		"[root] aws_ecs_service.this (expand)" -> "[root] aws_security_group.alb (expand)"
		"[root] aws_ecs_service.this (expand)" -> "[root] aws_security_group.efs (expand)"
		"[root] aws_ecs_service.this (expand)" -> "[root] var.desired_count"
		"[root] aws_ecs_task_definition.this (expand)" -> "[root] aws_cloudwatch_log_group.wordpress (expand)"
		"[root] aws_ecs_task_definition.this (expand)" -> "[root] aws_efs_file_system.this (expand)"
		"[root] aws_ecs_task_definition.this (expand)" -> "[root] aws_iam_role.task_execution_role (expand)"
		"[root] aws_ecs_task_definition.this (expand)" -> "[root] aws_iam_role.task_role (expand)"
		"[root] aws_ecs_task_definition.this (expand)" -> "[root] aws_rds_cluster.this (expand)"
		"[root] aws_ecs_task_definition.this (expand)" -> "[root] aws_ssm_parameter.db_master_password (expand)"
		"[root] aws_ecs_task_definition.this (expand)" -> "[root] aws_ssm_parameter.db_master_user (expand)"
		"[root] aws_ecs_task_definition.this (expand)" -> "[root] data.aws_region.current (expand)"
		"[root] aws_ecs_task_definition.this (expand)" -> "[root] var.task_cpu"
		"[root] aws_ecs_task_definition.this (expand)" -> "[root] var.task_memory"
		"[root] aws_efs_file_system.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] aws_efs_file_system.this (expand)" -> "[root] var.environment"
		"[root] aws_efs_file_system.this (expand)" -> "[root] var.prefix"
		"[root] aws_efs_file_system.this (expand)" -> "[root] var.tags"
		"[root] aws_efs_mount_target.this (expand)" -> "[root] aws_efs_file_system.this (expand)"
		"[root] aws_efs_mount_target.this (expand)" -> "[root] aws_security_group.efs (expand)"
		"[root] aws_efs_mount_target.this (expand)" -> "[root] module.vpc.output.private_subnets (expand)"
		"[root] aws_iam_policy.task_execution_policy (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] aws_iam_policy.task_policy (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] aws_iam_role.task_execution_role (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] aws_iam_role.task_execution_role (expand)" -> "[root] var.environment"
		"[root] aws_iam_role.task_execution_role (expand)" -> "[root] var.prefix"
		"[root] aws_iam_role.task_execution_role (expand)" -> "[root] var.tags"
		"[root] aws_iam_role.task_role (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] aws_iam_role.task_role (expand)" -> "[root] var.environment"
		"[root] aws_iam_role.task_role (expand)" -> "[root] var.prefix"
		"[root] aws_iam_role.task_role (expand)" -> "[root] var.tags"
		"[root] aws_iam_role_policy_attachment.task_execution_policy_attach (expand)" -> "[root] aws_iam_policy.task_execution_policy (expand)"
		"[root] aws_iam_role_policy_attachment.task_execution_policy_attach (expand)" -> "[root] aws_iam_role.task_execution_role (expand)"
		"[root] aws_iam_role_policy_attachment.task_policy_attach (expand)" -> "[root] aws_iam_policy.task_policy (expand)"
		"[root] aws_iam_role_policy_attachment.task_policy_attach (expand)" -> "[root] aws_iam_role.task_role (expand)"
		"[root] aws_lb_listener_rule.wordpress (expand)" -> "[root] aws_lb_target_group.this (expand)"
		"[root] aws_lb_listener_rule.wordpress (expand)" -> "[root] module.alb.output.https_listener_arns (expand)"
		"[root] aws_lb_listener_rule.wordpress (expand)" -> "[root] var.site_domain"
		"[root] aws_lb_target_group.this (expand)" -> "[root] module.vpc.output.vpc_id (expand)"
		"[root] aws_rds_cluster.this (expand)" -> "[root] aws_db_subnet_group.this (expand)"
		"[root] aws_rds_cluster.this (expand)" -> "[root] aws_security_group.db (expand)"
		"[root] aws_rds_cluster.this (expand)" -> "[root] random_string.snapshot_suffix (expand)"
		"[root] aws_rds_cluster.this (expand)" -> "[root] var.db_auto_pause"
		"[root] aws_rds_cluster.this (expand)" -> "[root] var.db_backup_retention_days"
		"[root] aws_rds_cluster.this (expand)" -> "[root] var.db_backup_window"
		"[root] aws_rds_cluster.this (expand)" -> "[root] var.db_engine_version"
		"[root] aws_rds_cluster.this (expand)" -> "[root] var.db_master_password"
		"[root] aws_rds_cluster.this (expand)" -> "[root] var.db_master_username"
		"[root] aws_rds_cluster.this (expand)" -> "[root] var.db_max_capacity"
		"[root] aws_rds_cluster.this (expand)" -> "[root] var.db_min_capacity"
		"[root] aws_rds_cluster.this (expand)" -> "[root] var.db_seconds_until_auto_pause"
		"[root] aws_route53_record.ipv4 (expand)" -> "[root] aws_cloudfront_distribution.this (expand)"
		"[root] aws_route53_record.ipv6 (expand)" -> "[root] aws_cloudfront_distribution.this (expand)"
		"[root] aws_route53_record.wordpress (expand)" -> "[root] data.aws_route53_zone.this (expand)"
		"[root] aws_route53_record.wordpress (expand)" -> "[root] module.alb.output.this_lb_dns_name (expand)"
		"[root] aws_route53_record.wordpress (expand)" -> "[root] module.alb.output.this_lb_zone_id (expand)"
		"[root] aws_route53_record.wordpress (expand)" -> "[root] var.public_alb_domain"
		"[root] aws_security_group.alb (expand)" -> "[root] module.vpc.output.vpc_id (expand)"
		"[root] aws_security_group.db (expand)" -> "[root] module.vpc.output.vpc_id (expand)"
		"[root] aws_security_group.efs (expand)" -> "[root] module.vpc.output.vpc_id (expand)"
		"[root] aws_security_group.wordpress (expand)" -> "[root] aws_security_group.alb (expand)"
		"[root] aws_security_group.wordpress (expand)" -> "[root] aws_security_group.efs (expand)"
		"[root] aws_ssm_parameter.db_master_password (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] aws_ssm_parameter.db_master_password (expand)" -> "[root] var.db_master_password"
		"[root] aws_ssm_parameter.db_master_password (expand)" -> "[root] var.environment"
		"[root] aws_ssm_parameter.db_master_password (expand)" -> "[root] var.prefix"
		"[root] aws_ssm_parameter.db_master_password (expand)" -> "[root] var.tags"
		"[root] aws_ssm_parameter.db_master_user (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] aws_ssm_parameter.db_master_user (expand)" -> "[root] var.db_master_username"
		"[root] aws_ssm_parameter.db_master_user (expand)" -> "[root] var.environment"
		"[root] aws_ssm_parameter.db_master_user (expand)" -> "[root] var.prefix"
		"[root] aws_ssm_parameter.db_master_user (expand)" -> "[root] var.tags"
		"[root] data.aws_availability_zones.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] data.aws_caller_identity.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] data.aws_region.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] data.aws_route53_zone.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.acm (close)" -> "[root] module.acm.output.distinct_domain_names (expand)"
		"[root] module.acm (close)" -> "[root] module.acm.output.this_acm_certificate_arn (expand)"
		"[root] module.acm (close)" -> "[root] module.acm.output.this_acm_certificate_domain_validation_options (expand)"
		"[root] module.acm (close)" -> "[root] module.acm.output.this_acm_certificate_validation_emails (expand)"
		"[root] module.acm (close)" -> "[root] module.acm.output.validation_domains (expand)"
		"[root] module.acm (close)" -> "[root] module.acm.output.validation_route53_record_fqdns (expand)"
		"[root] module.acm.aws_acm_certificate.this (expand)" -> "[root] module.acm.var.certificate_transparency_logging_preference (expand)"
		"[root] module.acm.aws_acm_certificate.this (expand)" -> "[root] module.acm.var.create_certificate (expand)"
		"[root] module.acm.aws_acm_certificate.this (expand)" -> "[root] module.acm.var.domain_name (expand)"
		"[root] module.acm.aws_acm_certificate.this (expand)" -> "[root] module.acm.var.subject_alternative_names (expand)"
		"[root] module.acm.aws_acm_certificate.this (expand)" -> "[root] module.acm.var.tags (expand)"
		"[root] module.acm.aws_acm_certificate.this (expand)" -> "[root] module.acm.var.validation_method (expand)"
		"[root] module.acm.aws_acm_certificate.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"].us_east_1"
		"[root] module.acm.aws_acm_certificate_validation.this (expand)" -> "[root] module.acm.aws_route53_record.validation (expand)"
		"[root] module.acm.aws_acm_certificate_validation.this (expand)" -> "[root] module.acm.var.wait_for_validation (expand)"
		"[root] module.acm.aws_route53_record.validation (expand)" -> "[root] module.acm.local.validation_domains (expand)"
		"[root] module.acm.aws_route53_record.validation (expand)" -> "[root] module.acm.var.dns_ttl (expand)"
		"[root] module.acm.aws_route53_record.validation (expand)" -> "[root] module.acm.var.validate_certificate (expand)"
		"[root] module.acm.aws_route53_record.validation (expand)" -> "[root] module.acm.var.validation_allow_overwrite_records (expand)"
		"[root] module.acm.aws_route53_record.validation (expand)" -> "[root] module.acm.var.zone_id (expand)"
		"[root] module.acm.local.distinct_domain_names (expand)" -> "[root] module.acm.var.domain_name (expand)"
		"[root] module.acm.local.distinct_domain_names (expand)" -> "[root] module.acm.var.subject_alternative_names (expand)"
		"[root] module.acm.local.validation_domains (expand)" -> "[root] module.acm.aws_acm_certificate.this (expand)"
		"[root] module.acm.local.validation_domains (expand)" -> "[root] module.acm.local.distinct_domain_names (expand)"
		"[root] module.acm.output.distinct_domain_names (expand)" -> "[root] module.acm.local.distinct_domain_names (expand)"
		"[root] module.acm.output.this_acm_certificate_arn (expand)" -> "[root] module.acm.aws_acm_certificate_validation.this (expand)"
		"[root] module.acm.output.this_acm_certificate_domain_validation_options (expand)" -> "[root] module.acm.aws_acm_certificate.this (expand)"
		"[root] module.acm.output.this_acm_certificate_validation_emails (expand)" -> "[root] module.acm.aws_acm_certificate.this (expand)"
		"[root] module.acm.output.validation_domains (expand)" -> "[root] module.acm.local.validation_domains (expand)"
		"[root] module.acm.output.validation_route53_record_fqdns (expand)" -> "[root] module.acm.aws_route53_record.validation (expand)"
		"[root] module.acm.var.certificate_transparency_logging_preference (expand)" -> "[root] module.acm (expand)"
		"[root] module.acm.var.create_certificate (expand)" -> "[root] module.acm (expand)"
		"[root] module.acm.var.dns_ttl (expand)" -> "[root] module.acm (expand)"
		"[root] module.acm.var.domain_name (expand)" -> "[root] module.acm (expand)"
		"[root] module.acm.var.domain_name (expand)" -> "[root] var.site_domain"
		"[root] module.acm.var.subject_alternative_names (expand)" -> "[root] module.acm (expand)"
		"[root] module.acm.var.tags (expand)" -> "[root] module.acm (expand)"
		"[root] module.acm.var.tags (expand)" -> "[root] var.tags"
		"[root] module.acm.var.validate_certificate (expand)" -> "[root] module.acm (expand)"
		"[root] module.acm.var.validation_allow_overwrite_records (expand)" -> "[root] module.acm (expand)"
		"[root] module.acm.var.validation_method (expand)" -> "[root] module.acm (expand)"
		"[root] module.acm.var.wait_for_validation (expand)" -> "[root] module.acm (expand)"
		"[root] module.acm.var.zone_id (expand)" -> "[root] data.aws_route53_zone.this (expand)"
		"[root] module.acm.var.zone_id (expand)" -> "[root] module.acm (expand)"
		"[root] module.acm_alb (close)" -> "[root] module.acm_alb.output.distinct_domain_names (expand)"
		"[root] module.acm_alb (close)" -> "[root] module.acm_alb.output.this_acm_certificate_arn (expand)"
		"[root] module.acm_alb (close)" -> "[root] module.acm_alb.output.this_acm_certificate_domain_validation_options (expand)"
		"[root] module.acm_alb (close)" -> "[root] module.acm_alb.output.this_acm_certificate_validation_emails (expand)"
		"[root] module.acm_alb (close)" -> "[root] module.acm_alb.output.validation_domains (expand)"
		"[root] module.acm_alb (close)" -> "[root] module.acm_alb.output.validation_route53_record_fqdns (expand)"
		"[root] module.acm_alb.aws_acm_certificate.this (expand)" -> "[root] module.acm_alb.var.certificate_transparency_logging_preference (expand)"
		"[root] module.acm_alb.aws_acm_certificate.this (expand)" -> "[root] module.acm_alb.var.create_certificate (expand)"
		"[root] module.acm_alb.aws_acm_certificate.this (expand)" -> "[root] module.acm_alb.var.domain_name (expand)"
		"[root] module.acm_alb.aws_acm_certificate.this (expand)" -> "[root] module.acm_alb.var.subject_alternative_names (expand)"
		"[root] module.acm_alb.aws_acm_certificate.this (expand)" -> "[root] module.acm_alb.var.tags (expand)"
		"[root] module.acm_alb.aws_acm_certificate.this (expand)" -> "[root] module.acm_alb.var.validation_method (expand)"
		"[root] module.acm_alb.aws_acm_certificate.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.acm_alb.aws_acm_certificate_validation.this (expand)" -> "[root] module.acm_alb.aws_route53_record.validation (expand)"
		"[root] module.acm_alb.aws_acm_certificate_validation.this (expand)" -> "[root] module.acm_alb.var.wait_for_validation (expand)"
		"[root] module.acm_alb.aws_route53_record.validation (expand)" -> "[root] module.acm_alb.local.validation_domains (expand)"
		"[root] module.acm_alb.aws_route53_record.validation (expand)" -> "[root] module.acm_alb.var.dns_ttl (expand)"
		"[root] module.acm_alb.aws_route53_record.validation (expand)" -> "[root] module.acm_alb.var.validate_certificate (expand)"
		"[root] module.acm_alb.aws_route53_record.validation (expand)" -> "[root] module.acm_alb.var.validation_allow_overwrite_records (expand)"
		"[root] module.acm_alb.aws_route53_record.validation (expand)" -> "[root] module.acm_alb.var.zone_id (expand)"
		"[root] module.acm_alb.local.distinct_domain_names (expand)" -> "[root] module.acm_alb.var.domain_name (expand)"
		"[root] module.acm_alb.local.distinct_domain_names (expand)" -> "[root] module.acm_alb.var.subject_alternative_names (expand)"
		"[root] module.acm_alb.local.validation_domains (expand)" -> "[root] module.acm_alb.aws_acm_certificate.this (expand)"
		"[root] module.acm_alb.local.validation_domains (expand)" -> "[root] module.acm_alb.local.distinct_domain_names (expand)"
		"[root] module.acm_alb.output.distinct_domain_names (expand)" -> "[root] module.acm_alb.local.distinct_domain_names (expand)"
		"[root] module.acm_alb.output.this_acm_certificate_arn (expand)" -> "[root] module.acm_alb.aws_acm_certificate_validation.this (expand)"
		"[root] module.acm_alb.output.this_acm_certificate_domain_validation_options (expand)" -> "[root] module.acm_alb.aws_acm_certificate.this (expand)"
		"[root] module.acm_alb.output.this_acm_certificate_validation_emails (expand)" -> "[root] module.acm_alb.aws_acm_certificate.this (expand)"
		"[root] module.acm_alb.output.validation_domains (expand)" -> "[root] module.acm_alb.local.validation_domains (expand)"
		"[root] module.acm_alb.output.validation_route53_record_fqdns (expand)" -> "[root] module.acm_alb.aws_route53_record.validation (expand)"
		"[root] module.acm_alb.var.certificate_transparency_logging_preference (expand)" -> "[root] module.acm_alb (expand)"
		"[root] module.acm_alb.var.create_certificate (expand)" -> "[root] module.acm_alb (expand)"
		"[root] module.acm_alb.var.dns_ttl (expand)" -> "[root] module.acm_alb (expand)"
		"[root] module.acm_alb.var.domain_name (expand)" -> "[root] module.acm_alb (expand)"
		"[root] module.acm_alb.var.domain_name (expand)" -> "[root] var.public_alb_domain"
		"[root] module.acm_alb.var.subject_alternative_names (expand)" -> "[root] module.acm_alb (expand)"
		"[root] module.acm_alb.var.tags (expand)" -> "[root] module.acm_alb (expand)"
		"[root] module.acm_alb.var.tags (expand)" -> "[root] var.tags"
		"[root] module.acm_alb.var.validate_certificate (expand)" -> "[root] module.acm_alb (expand)"
		"[root] module.acm_alb.var.validation_allow_overwrite_records (expand)" -> "[root] module.acm_alb (expand)"
		"[root] module.acm_alb.var.validation_method (expand)" -> "[root] module.acm_alb (expand)"
		"[root] module.acm_alb.var.wait_for_validation (expand)" -> "[root] module.acm_alb (expand)"
		"[root] module.acm_alb.var.zone_id (expand)" -> "[root] data.aws_route53_zone.this (expand)"
		"[root] module.acm_alb.var.zone_id (expand)" -> "[root] module.acm_alb (expand)"
		"[root] module.alb (close)" -> "[root] module.alb.aws_lb_listener_certificate.https_listener (expand)"
		"[root] module.alb (close)" -> "[root] module.alb.aws_lb_listener_rule.https_listener_rule (expand)"
		"[root] module.alb (close)" -> "[root] module.alb.output.http_tcp_listener_arns (expand)"
		"[root] module.alb (close)" -> "[root] module.alb.output.http_tcp_listener_ids (expand)"
		"[root] module.alb (close)" -> "[root] module.alb.output.https_listener_arns (expand)"
		"[root] module.alb (close)" -> "[root] module.alb.output.https_listener_ids (expand)"
		"[root] module.alb (close)" -> "[root] module.alb.output.target_group_arn_suffixes (expand)"
		"[root] module.alb (close)" -> "[root] module.alb.output.target_group_arns (expand)"
		"[root] module.alb (close)" -> "[root] module.alb.output.target_group_attachments (expand)"
		"[root] module.alb (close)" -> "[root] module.alb.output.target_group_names (expand)"
		"[root] module.alb (close)" -> "[root] module.alb.output.this_lb_arn (expand)"
		"[root] module.alb (close)" -> "[root] module.alb.output.this_lb_arn_suffix (expand)"
		"[root] module.alb (close)" -> "[root] module.alb.output.this_lb_dns_name (expand)"
		"[root] module.alb (close)" -> "[root] module.alb.output.this_lb_id (expand)"
		"[root] module.alb (close)" -> "[root] module.alb.output.this_lb_zone_id (expand)"
		"[root] module.alb.aws_lb.this (expand)" -> "[root] module.alb.var.access_logs (expand)"
		"[root] module.alb.aws_lb.this (expand)" -> "[root] module.alb.var.create_lb (expand)"
		"[root] module.alb.aws_lb.this (expand)" -> "[root] module.alb.var.drop_invalid_header_fields (expand)"
		"[root] module.alb.aws_lb.this (expand)" -> "[root] module.alb.var.enable_cross_zone_load_balancing (expand)"
		"[root] module.alb.aws_lb.this (expand)" -> "[root] module.alb.var.enable_deletion_protection (expand)"
		"[root] module.alb.aws_lb.this (expand)" -> "[root] module.alb.var.enable_http2 (expand)"
		"[root] module.alb.aws_lb.this (expand)" -> "[root] module.alb.var.idle_timeout (expand)"
		"[root] module.alb.aws_lb.this (expand)" -> "[root] module.alb.var.internal (expand)"
		"[root] module.alb.aws_lb.this (expand)" -> "[root] module.alb.var.ip_address_type (expand)"
		"[root] module.alb.aws_lb.this (expand)" -> "[root] module.alb.var.lb_tags (expand)"
		"[root] module.alb.aws_lb.this (expand)" -> "[root] module.alb.var.load_balancer_create_timeout (expand)"
		"[root] module.alb.aws_lb.this (expand)" -> "[root] module.alb.var.load_balancer_delete_timeout (expand)"
		"[root] module.alb.aws_lb.this (expand)" -> "[root] module.alb.var.load_balancer_type (expand)"
		"[root] module.alb.aws_lb.this (expand)" -> "[root] module.alb.var.load_balancer_update_timeout (expand)"
		"[root] module.alb.aws_lb.this (expand)" -> "[root] module.alb.var.name (expand)"
		"[root] module.alb.aws_lb.this (expand)" -> "[root] module.alb.var.name_prefix (expand)"
		"[root] module.alb.aws_lb.this (expand)" -> "[root] module.alb.var.security_groups (expand)"
		"[root] module.alb.aws_lb.this (expand)" -> "[root] module.alb.var.subnet_mapping (expand)"
		"[root] module.alb.aws_lb.this (expand)" -> "[root] module.alb.var.subnets (expand)"
		"[root] module.alb.aws_lb.this (expand)" -> "[root] module.alb.var.tags (expand)"
		"[root] module.alb.aws_lb_listener.frontend_http_tcp (expand)" -> "[root] module.alb.aws_lb_target_group.main (expand)"
		"[root] module.alb.aws_lb_listener.frontend_http_tcp (expand)" -> "[root] module.alb.var.http_tcp_listeners (expand)"
		"[root] module.alb.aws_lb_listener.frontend_https (expand)" -> "[root] module.alb.aws_lb_target_group.main (expand)"
		"[root] module.alb.aws_lb_listener.frontend_https (expand)" -> "[root] module.alb.var.https_listeners (expand)"
		"[root] module.alb.aws_lb_listener.frontend_https (expand)" -> "[root] module.alb.var.listener_ssl_policy_default (expand)"
		"[root] module.alb.aws_lb_listener_certificate.https_listener (expand)" -> "[root] module.alb.aws_lb_listener.frontend_https (expand)"
		"[root] module.alb.aws_lb_listener_certificate.https_listener (expand)" -> "[root] module.alb.var.extra_ssl_certs (expand)"
		"[root] module.alb.aws_lb_listener_rule.https_listener_rule (expand)" -> "[root] module.alb.aws_lb_listener.frontend_https (expand)"
		"[root] module.alb.aws_lb_listener_rule.https_listener_rule (expand)" -> "[root] module.alb.var.https_listener_rules (expand)"
		"[root] module.alb.aws_lb_target_group.main (expand)" -> "[root] module.alb.aws_lb.this (expand)"
		"[root] module.alb.aws_lb_target_group.main (expand)" -> "[root] module.alb.var.target_group_tags (expand)"
		"[root] module.alb.aws_lb_target_group.main (expand)" -> "[root] module.alb.var.target_groups (expand)"
		"[root] module.alb.aws_lb_target_group.main (expand)" -> "[root] module.alb.var.vpc_id (expand)"
		"[root] module.alb.aws_lb_target_group_attachment.this (expand)" -> "[root] module.alb.aws_lb_target_group.main (expand)"
		"[root] module.alb.aws_lb_target_group_attachment.this (expand)" -> "[root] module.alb.local.target_group_attachments (expand)"
		"[root] module.alb.local.target_group_attachments (expand)" -> "[root] module.alb.var.target_groups (expand)"
		"[root] module.alb.output.http_tcp_listener_arns (expand)" -> "[root] module.alb.aws_lb_listener.frontend_http_tcp (expand)"
		"[root] module.alb.output.http_tcp_listener_ids (expand)" -> "[root] module.alb.aws_lb_listener.frontend_http_tcp (expand)"
		"[root] module.alb.output.https_listener_arns (expand)" -> "[root] module.alb.aws_lb_listener.frontend_https (expand)"
		"[root] module.alb.output.https_listener_ids (expand)" -> "[root] module.alb.aws_lb_listener.frontend_https (expand)"
		"[root] module.alb.output.target_group_arn_suffixes (expand)" -> "[root] module.alb.aws_lb_target_group.main (expand)"
		"[root] module.alb.output.target_group_arns (expand)" -> "[root] module.alb.aws_lb_target_group.main (expand)"
		"[root] module.alb.output.target_group_attachments (expand)" -> "[root] module.alb.aws_lb_target_group_attachment.this (expand)"
		"[root] module.alb.output.target_group_names (expand)" -> "[root] module.alb.aws_lb_target_group.main (expand)"
		"[root] module.alb.output.this_lb_arn (expand)" -> "[root] module.alb.aws_lb.this (expand)"
		"[root] module.alb.output.this_lb_arn_suffix (expand)" -> "[root] module.alb.aws_lb.this (expand)"
		"[root] module.alb.output.this_lb_dns_name (expand)" -> "[root] module.alb.aws_lb.this (expand)"
		"[root] module.alb.output.this_lb_id (expand)" -> "[root] module.alb.aws_lb.this (expand)"
		"[root] module.alb.output.this_lb_zone_id (expand)" -> "[root] module.alb.aws_lb.this (expand)"
		"[root] module.alb.var.access_logs (expand)" -> "[root] module.alb (expand)"
		"[root] module.alb.var.create_lb (expand)" -> "[root] module.alb (expand)"
		"[root] module.alb.var.drop_invalid_header_fields (expand)" -> "[root] module.alb (expand)"
		"[root] module.alb.var.enable_cross_zone_load_balancing (expand)" -> "[root] module.alb (expand)"
		"[root] module.alb.var.enable_deletion_protection (expand)" -> "[root] module.alb (expand)"
		"[root] module.alb.var.enable_http2 (expand)" -> "[root] module.alb (expand)"
		"[root] module.alb.var.extra_ssl_certs (expand)" -> "[root] module.alb (expand)"
		"[root] module.alb.var.http_tcp_listeners (expand)" -> "[root] module.alb (expand)"
		"[root] module.alb.var.https_listener_rules (expand)" -> "[root] module.alb (expand)"
		"[root] module.alb.var.https_listeners (expand)" -> "[root] module.acm_alb.output.this_acm_certificate_arn (expand)"
		"[root] module.alb.var.https_listeners (expand)" -> "[root] module.alb (expand)"
		"[root] module.alb.var.idle_timeout (expand)" -> "[root] module.alb (expand)"
		"[root] module.alb.var.internal (expand)" -> "[root] module.alb (expand)"
		"[root] module.alb.var.ip_address_type (expand)" -> "[root] module.alb (expand)"
		"[root] module.alb.var.lb_tags (expand)" -> "[root] module.alb (expand)"
		"[root] module.alb.var.listener_ssl_policy_default (expand)" -> "[root] module.alb (expand)"
		"[root] module.alb.var.load_balancer_create_timeout (expand)" -> "[root] module.alb (expand)"
		"[root] module.alb.var.load_balancer_delete_timeout (expand)" -> "[root] module.alb (expand)"
		"[root] module.alb.var.load_balancer_type (expand)" -> "[root] module.alb (expand)"
		"[root] module.alb.var.load_balancer_update_timeout (expand)" -> "[root] module.alb (expand)"
		"[root] module.alb.var.name (expand)" -> "[root] module.alb (expand)"
		"[root] module.alb.var.name (expand)" -> "[root] var.environment"
		"[root] module.alb.var.name (expand)" -> "[root] var.prefix"
		"[root] module.alb.var.name_prefix (expand)" -> "[root] module.alb (expand)"
		"[root] module.alb.var.security_groups (expand)" -> "[root] aws_security_group.alb (expand)"
		"[root] module.alb.var.security_groups (expand)" -> "[root] module.alb (expand)"
		"[root] module.alb.var.subnet_mapping (expand)" -> "[root] module.alb (expand)"
		"[root] module.alb.var.subnets (expand)" -> "[root] module.alb (expand)"
		"[root] module.alb.var.subnets (expand)" -> "[root] module.vpc.output.public_subnets (expand)"
		"[root] module.alb.var.tags (expand)" -> "[root] module.alb (expand)"
		"[root] module.alb.var.tags (expand)" -> "[root] var.tags"
		"[root] module.alb.var.target_group_tags (expand)" -> "[root] module.alb (expand)"
		"[root] module.alb.var.target_groups (expand)" -> "[root] module.alb (expand)"
		"[root] module.alb.var.target_groups (expand)" -> "[root] var.environment"
		"[root] module.alb.var.target_groups (expand)" -> "[root] var.prefix"
		"[root] module.alb.var.vpc_id (expand)" -> "[root] module.alb (expand)"
		"[root] module.alb.var.vpc_id (expand)" -> "[root] module.vpc.output.vpc_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_default_network_acl.this (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_default_route_table.default (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_default_security_group.this (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.database_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.database_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.elasticache_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.elasticache_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.intra_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.intra_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.outpost_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.outpost_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.private_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.private_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.public_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.public_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.redshift_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.redshift_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_route.database_dns64_nat_gateway (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_route.private_dns64_nat_gateway (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_route_table_association.outpost (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_vpc_dhcp_options_association.this (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.azs (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.cgw_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.cgw_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_internet_gateway_route_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_ipv6_egress_route_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_nat_gateway_route_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_route_table_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_subnet_group (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_subnet_group_name (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_route_table_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_security_group_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_cidr_block (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_default_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_default_route_table_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_default_security_group_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_enable_dns_hostnames (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_enable_dns_support (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_instance_tenancy (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_main_route_table_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.dhcp_options_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.egress_only_internet_gateway_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_route_table_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_subnet_group (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_subnet_group_name (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.igw_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.igw_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_route_table_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.name (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.nat_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.nat_public_ips (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.natgw_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.outpost_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.outpost_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.outpost_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.outpost_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.outpost_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.outpost_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_ipv6_egress_route_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_nat_gateway_route_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_route_table_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_internet_gateway_ipv6_route_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_internet_gateway_route_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_route_table_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_public_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_route_table_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_subnet_group (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.this_customer_gateway (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vgw_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vgw_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_cidr_block (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_enable_dns_hostnames (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_enable_dns_support (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_flow_log_cloudwatch_iam_role_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_flow_log_destination_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_flow_log_destination_type (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_flow_log_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_instance_tenancy (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_ipv6_association_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_ipv6_cidr_block (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_main_route_table_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_owner_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_secondary_cidr_blocks (expand)"
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" -> "[root] module.vpc.local.create_flow_log_cloudwatch_log_group (expand)"
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" -> "[root] module.vpc.local.flow_log_cloudwatch_log_group_name_suffix (expand)"
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" -> "[root] module.vpc.var.flow_log_cloudwatch_log_group_kms_key_id (expand)"
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" -> "[root] module.vpc.var.flow_log_cloudwatch_log_group_name_prefix (expand)"
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" -> "[root] module.vpc.var.flow_log_cloudwatch_log_group_retention_in_days (expand)"
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" -> "[root] module.vpc.var.flow_log_cloudwatch_log_group_skip_destroy (expand)"
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" -> "[root] module.vpc.var.vpc_flow_log_tags (expand)"
		"[root] module.vpc.aws_customer_gateway.this (expand)" -> "[root] module.vpc.var.customer_gateway_tags (expand)"
		"[root] module.vpc.aws_customer_gateway.this (expand)" -> "[root] module.vpc.var.customer_gateways (expand)"
		"[root] module.vpc.aws_customer_gateway.this (expand)" -> "[root] module.vpc.var.name (expand)"
		"[root] module.vpc.aws_customer_gateway.this (expand)" -> "[root] module.vpc.var.tags (expand)"
		"[root] module.vpc.aws_customer_gateway.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.aws_db_subnet_group.database (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.aws_db_subnet_group.database (expand)" -> "[root] module.vpc.var.create_database_subnet_group (expand)"
		"[root] module.vpc.aws_db_subnet_group.database (expand)" -> "[root] module.vpc.var.database_subnet_group_name (expand)"
		"[root] module.vpc.aws_db_subnet_group.database (expand)" -> "[root] module.vpc.var.database_subnet_group_tags (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.var.default_network_acl_egress (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.var.default_network_acl_ingress (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.var.default_network_acl_name (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.var.default_network_acl_tags (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.var.manage_default_network_acl (expand)"
		"[root] module.vpc.aws_default_route_table.default (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.aws_default_route_table.default (expand)" -> "[root] module.vpc.var.default_route_table_name (expand)"
		"[root] module.vpc.aws_default_route_table.default (expand)" -> "[root] module.vpc.var.default_route_table_propagating_vgws (expand)"
		"[root] module.vpc.aws_default_route_table.default (expand)" -> "[root] module.vpc.var.default_route_table_routes (expand)"
		"[root] module.vpc.aws_default_route_table.default (expand)" -> "[root] module.vpc.var.default_route_table_tags (expand)"
		"[root] module.vpc.aws_default_route_table.default (expand)" -> "[root] module.vpc.var.manage_default_route_table (expand)"
		"[root] module.vpc.aws_default_security_group.this (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.aws_default_security_group.this (expand)" -> "[root] module.vpc.var.default_security_group_egress (expand)"
		"[root] module.vpc.aws_default_security_group.this (expand)" -> "[root] module.vpc.var.default_security_group_ingress (expand)"
		"[root] module.vpc.aws_default_security_group.this (expand)" -> "[root] module.vpc.var.default_security_group_name (expand)"
		"[root] module.vpc.aws_default_security_group.this (expand)" -> "[root] module.vpc.var.default_security_group_tags (expand)"
		"[root] module.vpc.aws_default_security_group.this (expand)" -> "[root] module.vpc.var.manage_default_security_group (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] module.vpc.var.default_vpc_enable_dns_hostnames (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] module.vpc.var.default_vpc_enable_dns_support (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] module.vpc.var.default_vpc_name (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] module.vpc.var.default_vpc_tags (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] module.vpc.var.manage_default_vpc (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] module.vpc.var.tags (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.aws_egress_only_internet_gateway.this (expand)" -> "[root] module.vpc.local.max_subnet_length (expand)"
		"[root] module.vpc.aws_egress_only_internet_gateway.this (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_egress_only_internet_gateway.this (expand)" -> "[root] module.vpc.var.create_egress_only_igw (expand)"
		"[root] module.vpc.aws_egress_only_internet_gateway.this (expand)" -> "[root] module.vpc.var.igw_tags (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] module.vpc.aws_internet_gateway.this (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] module.vpc.local.nat_gateway_count (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] module.vpc.var.enable_nat_gateway (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] module.vpc.var.nat_eip_tags (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] module.vpc.var.reuse_nat_ips (expand)"
		"[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)" -> "[root] module.vpc.var.create_elasticache_subnet_group (expand)"
		"[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_group_name (expand)"
		"[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_group_tags (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.local.flow_log_destination_arn (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.local.flow_log_iam_role_arn (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.var.flow_log_file_format (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.var.flow_log_hive_compatible_partitions (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.var.flow_log_log_format (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.var.flow_log_max_aggregation_interval (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.var.flow_log_per_hour_partition (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.var.flow_log_traffic_type (expand)"
		"[root] module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch (expand)"
		"[root] module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.var.tags (expand)"
		"[root] module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.var.vpc_flow_log_tags (expand)"
		"[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role (expand)"
		"[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.var.tags (expand)"
		"[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.var.vpc_flow_log_permissions_boundary (expand)"
		"[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.var.vpc_flow_log_tags (expand)"
		"[root] module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch (expand)"
		"[root] module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)"
		"[root] module.vpc.aws_internet_gateway.this (expand)" -> "[root] module.vpc.local.create_public_subnets (expand)"
		"[root] module.vpc.aws_internet_gateway.this (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_internet_gateway.this (expand)" -> "[root] module.vpc.var.create_igw (expand)"
		"[root] module.vpc.aws_internet_gateway.this (expand)" -> "[root] module.vpc.var.igw_tags (expand)"
		"[root] module.vpc.aws_nat_gateway.this (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.aws_nat_gateway.this (expand)" -> "[root] module.vpc.local.nat_gateway_ips (expand)"
		"[root] module.vpc.aws_nat_gateway.this (expand)" -> "[root] module.vpc.var.nat_gateway_tags (expand)"
		"[root] module.vpc.aws_network_acl.database (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.aws_network_acl.database (expand)" -> "[root] module.vpc.local.create_database_network_acl (expand)"
		"[root] module.vpc.aws_network_acl.database (expand)" -> "[root] module.vpc.var.database_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl.elasticache (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.aws_network_acl.elasticache (expand)" -> "[root] module.vpc.local.create_elasticache_network_acl (expand)"
		"[root] module.vpc.aws_network_acl.elasticache (expand)" -> "[root] module.vpc.var.elasticache_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl.intra (expand)" -> "[root] module.vpc.aws_subnet.intra (expand)"
		"[root] module.vpc.aws_network_acl.intra (expand)" -> "[root] module.vpc.local.create_intra_network_acl (expand)"
		"[root] module.vpc.aws_network_acl.intra (expand)" -> "[root] module.vpc.var.intra_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl.outpost (expand)" -> "[root] module.vpc.aws_subnet.outpost (expand)"
		"[root] module.vpc.aws_network_acl.outpost (expand)" -> "[root] module.vpc.local.create_outpost_network_acl (expand)"
		"[root] module.vpc.aws_network_acl.outpost (expand)" -> "[root] module.vpc.var.outpost_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl.private (expand)" -> "[root] module.vpc.aws_subnet.private (expand)"
		"[root] module.vpc.aws_network_acl.private (expand)" -> "[root] module.vpc.local.create_private_network_acl (expand)"
		"[root] module.vpc.aws_network_acl.private (expand)" -> "[root] module.vpc.var.private_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl.public (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.aws_network_acl.public (expand)" -> "[root] module.vpc.var.public_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl.public (expand)" -> "[root] module.vpc.var.public_dedicated_network_acl (expand)"
		"[root] module.vpc.aws_network_acl.redshift (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.aws_network_acl.redshift (expand)" -> "[root] module.vpc.local.create_redshift_network_acl (expand)"
		"[root] module.vpc.aws_network_acl.redshift (expand)" -> "[root] module.vpc.var.redshift_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl_rule.database_inbound (expand)" -> "[root] module.vpc.aws_network_acl.database (expand)"
		"[root] module.vpc.aws_network_acl_rule.database_inbound (expand)" -> "[root] module.vpc.var.database_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.database_outbound (expand)" -> "[root] module.vpc.aws_network_acl.database (expand)"
		"[root] module.vpc.aws_network_acl_rule.database_outbound (expand)" -> "[root] module.vpc.var.database_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.elasticache_inbound (expand)" -> "[root] module.vpc.aws_network_acl.elasticache (expand)"
		"[root] module.vpc.aws_network_acl_rule.elasticache_inbound (expand)" -> "[root] module.vpc.var.elasticache_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.elasticache_outbound (expand)" -> "[root] module.vpc.aws_network_acl.elasticache (expand)"
		"[root] module.vpc.aws_network_acl_rule.elasticache_outbound (expand)" -> "[root] module.vpc.var.elasticache_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.intra_inbound (expand)" -> "[root] module.vpc.aws_network_acl.intra (expand)"
		"[root] module.vpc.aws_network_acl_rule.intra_inbound (expand)" -> "[root] module.vpc.var.intra_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.intra_outbound (expand)" -> "[root] module.vpc.aws_network_acl.intra (expand)"
		"[root] module.vpc.aws_network_acl_rule.intra_outbound (expand)" -> "[root] module.vpc.var.intra_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.outpost_inbound (expand)" -> "[root] module.vpc.aws_network_acl.outpost (expand)"
		"[root] module.vpc.aws_network_acl_rule.outpost_inbound (expand)" -> "[root] module.vpc.var.outpost_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.outpost_outbound (expand)" -> "[root] module.vpc.aws_network_acl.outpost (expand)"
		"[root] module.vpc.aws_network_acl_rule.outpost_outbound (expand)" -> "[root] module.vpc.var.outpost_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.private_inbound (expand)" -> "[root] module.vpc.aws_network_acl.private (expand)"
		"[root] module.vpc.aws_network_acl_rule.private_inbound (expand)" -> "[root] module.vpc.var.private_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.private_outbound (expand)" -> "[root] module.vpc.aws_network_acl.private (expand)"
		"[root] module.vpc.aws_network_acl_rule.private_outbound (expand)" -> "[root] module.vpc.var.private_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.public_inbound (expand)" -> "[root] module.vpc.aws_network_acl.public (expand)"
		"[root] module.vpc.aws_network_acl_rule.public_inbound (expand)" -> "[root] module.vpc.var.public_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.public_outbound (expand)" -> "[root] module.vpc.aws_network_acl.public (expand)"
		"[root] module.vpc.aws_network_acl_rule.public_outbound (expand)" -> "[root] module.vpc.var.public_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.redshift_inbound (expand)" -> "[root] module.vpc.aws_network_acl.redshift (expand)"
		"[root] module.vpc.aws_network_acl_rule.redshift_inbound (expand)" -> "[root] module.vpc.var.redshift_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.redshift_outbound (expand)" -> "[root] module.vpc.aws_network_acl.redshift (expand)"
		"[root] module.vpc.aws_network_acl_rule.redshift_outbound (expand)" -> "[root] module.vpc.var.redshift_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_redshift_subnet_group.redshift (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.aws_redshift_subnet_group.redshift (expand)" -> "[root] module.vpc.var.create_redshift_subnet_group (expand)"
		"[root] module.vpc.aws_redshift_subnet_group.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_group_name (expand)"
		"[root] module.vpc.aws_redshift_subnet_group.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_group_tags (expand)"
		"[root] module.vpc.aws_route.database_dns64_nat_gateway (expand)" -> "[root] module.vpc.aws_nat_gateway.this (expand)"
		"[root] module.vpc.aws_route.database_dns64_nat_gateway (expand)" -> "[root] module.vpc.aws_route_table.database (expand)"
		"[root] module.vpc.aws_route.database_dns64_nat_gateway (expand)" -> "[root] module.vpc.var.create_database_nat_gateway_route (expand)"
		"[root] module.vpc.aws_route.database_dns64_nat_gateway (expand)" -> "[root] module.vpc.var.private_subnet_enable_dns64 (expand)"
		"[root] module.vpc.aws_route.database_internet_gateway (expand)" -> "[root] module.vpc.aws_internet_gateway.this (expand)"
		"[root] module.vpc.aws_route.database_internet_gateway (expand)" -> "[root] module.vpc.aws_route_table.database (expand)"
		"[root] module.vpc.aws_route.database_internet_gateway (expand)" -> "[root] module.vpc.var.create_database_nat_gateway_route (expand)"
		"[root] module.vpc.aws_route.database_ipv6_egress (expand)" -> "[root] module.vpc.aws_egress_only_internet_gateway.this (expand)"
		"[root] module.vpc.aws_route.database_ipv6_egress (expand)" -> "[root] module.vpc.aws_route_table.database (expand)"
		"[root] module.vpc.aws_route.database_nat_gateway (expand)" -> "[root] module.vpc.aws_nat_gateway.this (expand)"
		"[root] module.vpc.aws_route.database_nat_gateway (expand)" -> "[root] module.vpc.aws_route_table.database (expand)"
		"[root] module.vpc.aws_route.database_nat_gateway (expand)" -> "[root] module.vpc.var.create_database_nat_gateway_route (expand)"
		"[root] module.vpc.aws_route.private_dns64_nat_gateway (expand)" -> "[root] module.vpc.aws_nat_gateway.this (expand)"
		"[root] module.vpc.aws_route.private_dns64_nat_gateway (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route.private_dns64_nat_gateway (expand)" -> "[root] module.vpc.var.private_subnet_enable_dns64 (expand)"
		"[root] module.vpc.aws_route.private_ipv6_egress (expand)" -> "[root] module.vpc.aws_egress_only_internet_gateway.this (expand)"
		"[root] module.vpc.aws_route.private_ipv6_egress (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route.private_nat_gateway (expand)" -> "[root] module.vpc.aws_nat_gateway.this (expand)"
		"[root] module.vpc.aws_route.private_nat_gateway (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route.private_nat_gateway (expand)" -> "[root] module.vpc.var.nat_gateway_destination_cidr_block (expand)"
		"[root] module.vpc.aws_route.public_internet_gateway (expand)" -> "[root] module.vpc.aws_internet_gateway.this (expand)"
		"[root] module.vpc.aws_route.public_internet_gateway (expand)" -> "[root] module.vpc.aws_route_table.public (expand)"
		"[root] module.vpc.aws_route.public_internet_gateway_ipv6 (expand)" -> "[root] module.vpc.aws_internet_gateway.this (expand)"
		"[root] module.vpc.aws_route.public_internet_gateway_ipv6 (expand)" -> "[root] module.vpc.aws_route_table.public (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.local.create_database_route_table (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.var.create_database_internet_gateway_route (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.var.database_route_table_tags (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.var.database_subnet_suffix (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.var.single_nat_gateway (expand)"
		"[root] module.vpc.aws_route_table.elasticache (expand)" -> "[root] module.vpc.local.create_elasticache_route_table (expand)"
		"[root] module.vpc.aws_route_table.elasticache (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_route_table.elasticache (expand)" -> "[root] module.vpc.var.elasticache_route_table_tags (expand)"
		"[root] module.vpc.aws_route_table.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_suffix (expand)"
		"[root] module.vpc.aws_route_table.intra (expand)" -> "[root] module.vpc.local.create_intra_subnets (expand)"
		"[root] module.vpc.aws_route_table.intra (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_route_table.intra (expand)" -> "[root] module.vpc.var.intra_route_table_tags (expand)"
		"[root] module.vpc.aws_route_table.intra (expand)" -> "[root] module.vpc.var.intra_subnet_suffix (expand)"
		"[root] module.vpc.aws_route_table.private (expand)" -> "[root] module.vpc.local.create_private_subnets (expand)"
		"[root] module.vpc.aws_route_table.private (expand)" -> "[root] module.vpc.local.nat_gateway_count (expand)"
		"[root] module.vpc.aws_route_table.private (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_route_table.private (expand)" -> "[root] module.vpc.var.private_route_table_tags (expand)"
		"[root] module.vpc.aws_route_table.private (expand)" -> "[root] module.vpc.var.private_subnet_suffix (expand)"
		"[root] module.vpc.aws_route_table.public (expand)" -> "[root] module.vpc.local.create_public_subnets (expand)"
		"[root] module.vpc.aws_route_table.public (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_route_table.public (expand)" -> "[root] module.vpc.var.public_route_table_tags (expand)"
		"[root] module.vpc.aws_route_table.public (expand)" -> "[root] module.vpc.var.public_subnet_suffix (expand)"
		"[root] module.vpc.aws_route_table.redshift (expand)" -> "[root] module.vpc.local.create_redshift_route_table (expand)"
		"[root] module.vpc.aws_route_table.redshift (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_route_table.redshift (expand)" -> "[root] module.vpc.var.redshift_route_table_tags (expand)"
		"[root] module.vpc.aws_route_table.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_suffix (expand)"
		"[root] module.vpc.aws_route_table_association.database (expand)" -> "[root] module.vpc.aws_route_table.database (expand)"
		"[root] module.vpc.aws_route_table_association.database (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route_table_association.database (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.aws_route_table_association.elasticache (expand)" -> "[root] module.vpc.aws_route_table.elasticache (expand)"
		"[root] module.vpc.aws_route_table_association.elasticache (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route_table_association.elasticache (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.aws_route_table_association.intra (expand)" -> "[root] module.vpc.aws_route_table.intra (expand)"
		"[root] module.vpc.aws_route_table_association.intra (expand)" -> "[root] module.vpc.aws_subnet.intra (expand)"
		"[root] module.vpc.aws_route_table_association.outpost (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route_table_association.outpost (expand)" -> "[root] module.vpc.aws_subnet.outpost (expand)"
		"[root] module.vpc.aws_route_table_association.private (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route_table_association.private (expand)" -> "[root] module.vpc.aws_subnet.private (expand)"
		"[root] module.vpc.aws_route_table_association.public (expand)" -> "[root] module.vpc.aws_route_table.public (expand)"
		"[root] module.vpc.aws_route_table_association.public (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.aws_route_table_association.redshift (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route_table_association.redshift (expand)" -> "[root] module.vpc.aws_route_table.redshift (expand)"
		"[root] module.vpc.aws_route_table_association.redshift (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.aws_route_table_association.redshift (expand)" -> "[root] module.vpc.var.enable_public_redshift (expand)"
		"[root] module.vpc.aws_route_table_association.redshift_public (expand)" -> "[root] module.vpc.aws_route_table.public (expand)"
		"[root] module.vpc.aws_route_table_association.redshift_public (expand)" -> "[root] module.vpc.aws_route_table.redshift (expand)"
		"[root] module.vpc.aws_route_table_association.redshift_public (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.aws_route_table_association.redshift_public (expand)" -> "[root] module.vpc.var.enable_public_redshift (expand)"
		"[root] module.vpc.aws_route_table_association.redshift_public (expand)" -> "[root] module.vpc.var.single_nat_gateway (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.local.create_database_subnets (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.database_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.database_subnet_enable_dns64 (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.database_subnet_enable_resource_name_dns_a_record_on_launch (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.database_subnet_enable_resource_name_dns_aaaa_record_on_launch (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.database_subnet_ipv6_native (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.database_subnet_names (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.database_subnet_private_dns_hostname_type_on_launch (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.database_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.database_subnet_tags (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.local.create_elasticache_subnets (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_enable_dns64 (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_enable_resource_name_dns_a_record_on_launch (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_ipv6_native (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_names (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_private_dns_hostname_type_on_launch (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_tags (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.local.create_intra_subnets (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.intra_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.intra_subnet_enable_dns64 (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.intra_subnet_enable_resource_name_dns_a_record_on_launch (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.intra_subnet_enable_resource_name_dns_aaaa_record_on_launch (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.intra_subnet_ipv6_native (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.intra_subnet_names (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.intra_subnet_private_dns_hostname_type_on_launch (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.intra_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.intra_subnet_tags (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.local.create_outpost_subnets (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.customer_owned_ipv4_pool (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.map_customer_owned_ip_on_launch (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_arn (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_az (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_subnet_enable_dns64 (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_subnet_enable_resource_name_dns_a_record_on_launch (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_subnet_ipv6_native (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_subnet_names (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_subnet_private_dns_hostname_type_on_launch (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_subnet_tags (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.local.create_private_subnets (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnet_enable_dns64 (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnet_enable_resource_name_dns_a_record_on_launch (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnet_enable_resource_name_dns_aaaa_record_on_launch (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnet_ipv6_native (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnet_names (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnet_private_dns_hostname_type_on_launch (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnet_tags (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnet_tags_per_az (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.local.create_public_subnets (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.map_public_ip_on_launch (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.one_nat_gateway_per_az (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnet_enable_dns64 (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnet_enable_resource_name_dns_a_record_on_launch (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnet_enable_resource_name_dns_aaaa_record_on_launch (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnet_ipv6_native (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnet_names (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnet_private_dns_hostname_type_on_launch (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnet_tags (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnet_tags_per_az (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.local.create_redshift_subnets (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_enable_dns64 (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_enable_resource_name_dns_a_record_on_launch (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_ipv6_native (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_names (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_private_dns_hostname_type_on_launch (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_tags (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.local.create_vpc (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.cidr (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.enable_dns_hostnames (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.enable_dns_support (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.enable_ipv6 (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.enable_network_address_usage_metrics (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.instance_tenancy (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.ipv4_ipam_pool_id (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.ipv4_netmask_length (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.ipv6_cidr (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.ipv6_cidr_block_network_border_group (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.ipv6_ipam_pool_id (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.ipv6_netmask_length (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.name (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.tags (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.use_ipam_pool (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.vpc_tags (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.local.create_vpc (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.dhcp_options_domain_name (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.dhcp_options_domain_name_servers (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.dhcp_options_netbios_name_servers (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.dhcp_options_netbios_node_type (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.dhcp_options_ntp_servers (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.dhcp_options_tags (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.enable_dhcp_options (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.name (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.tags (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.aws_vpc_dhcp_options_association.this (expand)" -> "[root] module.vpc.aws_vpc_dhcp_options.this (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options_association.this (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_vpc_ipv4_cidr_block_association.this (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.aws_vpc_ipv4_cidr_block_association.this (expand)" -> "[root] module.vpc.var.secondary_cidr_blocks (expand)"
		"[root] module.vpc.aws_vpn_gateway.this (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_vpn_gateway.this (expand)" -> "[root] module.vpc.var.amazon_side_asn (expand)"
		"[root] module.vpc.aws_vpn_gateway.this (expand)" -> "[root] module.vpc.var.enable_vpn_gateway (expand)"
		"[root] module.vpc.aws_vpn_gateway.this (expand)" -> "[root] module.vpc.var.vpn_gateway_az (expand)"
		"[root] module.vpc.aws_vpn_gateway.this (expand)" -> "[root] module.vpc.var.vpn_gateway_tags (expand)"
		"[root] module.vpc.aws_vpn_gateway_attachment.this (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_vpn_gateway_attachment.this (expand)" -> "[root] module.vpc.var.vpn_gateway_id (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)" -> "[root] module.vpc.aws_route_table.intra (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)" -> "[root] module.vpc.aws_vpn_gateway.this (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)" -> "[root] module.vpc.aws_vpn_gateway_attachment.this (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)" -> "[root] module.vpc.var.propagate_intra_route_tables_vgw (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)" -> "[root] module.vpc.aws_vpn_gateway.this (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)" -> "[root] module.vpc.aws_vpn_gateway_attachment.this (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)" -> "[root] module.vpc.var.propagate_private_route_tables_vgw (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)" -> "[root] module.vpc.aws_route_table.public (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)" -> "[root] module.vpc.aws_vpn_gateway.this (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)" -> "[root] module.vpc.aws_vpn_gateway_attachment.this (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)" -> "[root] module.vpc.var.propagate_public_route_tables_vgw (expand)"
		"[root] module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role (expand)" -> "[root] module.vpc.local.create_flow_log_cloudwatch_iam_role (expand)"
		"[root] module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.local.create_flow_log_cloudwatch_iam_role (expand)"
		"[root] module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.local.create_database_network_acl (expand)" -> "[root] module.vpc.local.create_database_subnets (expand)"
		"[root] module.vpc.local.create_database_network_acl (expand)" -> "[root] module.vpc.var.database_dedicated_network_acl (expand)"
		"[root] module.vpc.local.create_database_route_table (expand)" -> "[root] module.vpc.local.create_database_subnets (expand)"
		"[root] module.vpc.local.create_database_route_table (expand)" -> "[root] module.vpc.var.create_database_subnet_route_table (expand)"
		"[root] module.vpc.local.create_database_subnets (expand)" -> "[root] module.vpc.local.create_vpc (expand)"
		"[root] module.vpc.local.create_database_subnets (expand)" -> "[root] module.vpc.local.len_database_subnets (expand)"
		"[root] module.vpc.local.create_elasticache_network_acl (expand)" -> "[root] module.vpc.local.create_elasticache_subnets (expand)"
		"[root] module.vpc.local.create_elasticache_network_acl (expand)" -> "[root] module.vpc.var.elasticache_dedicated_network_acl (expand)"
		"[root] module.vpc.local.create_elasticache_route_table (expand)" -> "[root] module.vpc.local.create_elasticache_subnets (expand)"
		"[root] module.vpc.local.create_elasticache_route_table (expand)" -> "[root] module.vpc.var.create_elasticache_subnet_route_table (expand)"
		"[root] module.vpc.local.create_elasticache_subnets (expand)" -> "[root] module.vpc.local.create_vpc (expand)"
		"[root] module.vpc.local.create_elasticache_subnets (expand)" -> "[root] module.vpc.local.len_elasticache_subnets (expand)"
		"[root] module.vpc.local.create_flow_log_cloudwatch_iam_role (expand)" -> "[root] module.vpc.local.enable_flow_log (expand)"
		"[root] module.vpc.local.create_flow_log_cloudwatch_iam_role (expand)" -> "[root] module.vpc.var.create_flow_log_cloudwatch_iam_role (expand)"
		"[root] module.vpc.local.create_flow_log_cloudwatch_iam_role (expand)" -> "[root] module.vpc.var.flow_log_destination_type (expand)"
		"[root] module.vpc.local.create_flow_log_cloudwatch_log_group (expand)" -> "[root] module.vpc.local.enable_flow_log (expand)"
		"[root] module.vpc.local.create_flow_log_cloudwatch_log_group (expand)" -> "[root] module.vpc.var.create_flow_log_cloudwatch_log_group (expand)"
		"[root] module.vpc.local.create_flow_log_cloudwatch_log_group (expand)" -> "[root] module.vpc.var.flow_log_destination_type (expand)"
		"[root] module.vpc.local.create_intra_network_acl (expand)" -> "[root] module.vpc.local.create_intra_subnets (expand)"
		"[root] module.vpc.local.create_intra_network_acl (expand)" -> "[root] module.vpc.var.intra_dedicated_network_acl (expand)"
		"[root] module.vpc.local.create_intra_subnets (expand)" -> "[root] module.vpc.local.create_vpc (expand)"
		"[root] module.vpc.local.create_intra_subnets (expand)" -> "[root] module.vpc.local.len_intra_subnets (expand)"
		"[root] module.vpc.local.create_outpost_network_acl (expand)" -> "[root] module.vpc.local.create_outpost_subnets (expand)"
		"[root] module.vpc.local.create_outpost_network_acl (expand)" -> "[root] module.vpc.var.outpost_dedicated_network_acl (expand)"
		"[root] module.vpc.local.create_outpost_subnets (expand)" -> "[root] module.vpc.local.create_vpc (expand)"
		"[root] module.vpc.local.create_outpost_subnets (expand)" -> "[root] module.vpc.local.len_outpost_subnets (expand)"
		"[root] module.vpc.local.create_private_network_acl (expand)" -> "[root] module.vpc.local.create_private_subnets (expand)"
		"[root] module.vpc.local.create_private_network_acl (expand)" -> "[root] module.vpc.var.private_dedicated_network_acl (expand)"
		"[root] module.vpc.local.create_private_subnets (expand)" -> "[root] module.vpc.local.create_vpc (expand)"
		"[root] module.vpc.local.create_private_subnets (expand)" -> "[root] module.vpc.local.len_private_subnets (expand)"
		"[root] module.vpc.local.create_public_subnets (expand)" -> "[root] module.vpc.local.create_vpc (expand)"
		"[root] module.vpc.local.create_public_subnets (expand)" -> "[root] module.vpc.local.len_public_subnets (expand)"
		"[root] module.vpc.local.create_redshift_network_acl (expand)" -> "[root] module.vpc.local.create_redshift_subnets (expand)"
		"[root] module.vpc.local.create_redshift_network_acl (expand)" -> "[root] module.vpc.var.redshift_dedicated_network_acl (expand)"
		"[root] module.vpc.local.create_redshift_route_table (expand)" -> "[root] module.vpc.local.create_redshift_subnets (expand)"
		"[root] module.vpc.local.create_redshift_route_table (expand)" -> "[root] module.vpc.var.create_redshift_subnet_route_table (expand)"
		"[root] module.vpc.local.create_redshift_subnets (expand)" -> "[root] module.vpc.local.create_vpc (expand)"
		"[root] module.vpc.local.create_redshift_subnets (expand)" -> "[root] module.vpc.local.len_redshift_subnets (expand)"
		"[root] module.vpc.local.create_vpc (expand)" -> "[root] module.vpc.var.create_vpc (expand)"
		"[root] module.vpc.local.create_vpc (expand)" -> "[root] module.vpc.var.putin_khuylo (expand)"
		"[root] module.vpc.local.enable_flow_log (expand)" -> "[root] module.vpc.var.create_vpc (expand)"
		"[root] module.vpc.local.enable_flow_log (expand)" -> "[root] module.vpc.var.enable_flow_log (expand)"
		"[root] module.vpc.local.flow_log_cloudwatch_log_group_name_suffix (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.local.flow_log_cloudwatch_log_group_name_suffix (expand)" -> "[root] module.vpc.var.flow_log_cloudwatch_log_group_name_suffix (expand)"
		"[root] module.vpc.local.flow_log_destination_arn (expand)" -> "[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)"
		"[root] module.vpc.local.flow_log_destination_arn (expand)" -> "[root] module.vpc.var.flow_log_destination_arn (expand)"
		"[root] module.vpc.local.flow_log_iam_role_arn (expand)" -> "[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)"
		"[root] module.vpc.local.flow_log_iam_role_arn (expand)" -> "[root] module.vpc.var.flow_log_cloudwatch_iam_role_arn (expand)"
		"[root] module.vpc.local.len_database_subnets (expand)" -> "[root] module.vpc.var.database_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.local.len_database_subnets (expand)" -> "[root] module.vpc.var.database_subnets (expand)"
		"[root] module.vpc.local.len_elasticache_subnets (expand)" -> "[root] module.vpc.var.elasticache_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.local.len_elasticache_subnets (expand)" -> "[root] module.vpc.var.elasticache_subnets (expand)"
		"[root] module.vpc.local.len_intra_subnets (expand)" -> "[root] module.vpc.var.intra_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.local.len_intra_subnets (expand)" -> "[root] module.vpc.var.intra_subnets (expand)"
		"[root] module.vpc.local.len_outpost_subnets (expand)" -> "[root] module.vpc.var.outpost_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.local.len_outpost_subnets (expand)" -> "[root] module.vpc.var.outpost_subnets (expand)"
		"[root] module.vpc.local.len_private_subnets (expand)" -> "[root] module.vpc.var.private_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.local.len_private_subnets (expand)" -> "[root] module.vpc.var.private_subnets (expand)"
		"[root] module.vpc.local.len_public_subnets (expand)" -> "[root] module.vpc.var.public_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.local.len_public_subnets (expand)" -> "[root] module.vpc.var.public_subnets (expand)"
		"[root] module.vpc.local.len_redshift_subnets (expand)" -> "[root] module.vpc.var.redshift_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.local.len_redshift_subnets (expand)" -> "[root] module.vpc.var.redshift_subnets (expand)"
		"[root] module.vpc.local.max_subnet_length (expand)" -> "[root] module.vpc.local.len_database_subnets (expand)"
		"[root] module.vpc.local.max_subnet_length (expand)" -> "[root] module.vpc.local.len_elasticache_subnets (expand)"
		"[root] module.vpc.local.max_subnet_length (expand)" -> "[root] module.vpc.local.len_private_subnets (expand)"
		"[root] module.vpc.local.max_subnet_length (expand)" -> "[root] module.vpc.local.len_public_subnets (expand)"
		"[root] module.vpc.local.max_subnet_length (expand)" -> "[root] module.vpc.local.len_redshift_subnets (expand)"
		"[root] module.vpc.local.nat_gateway_count (expand)" -> "[root] module.vpc.local.max_subnet_length (expand)"
		"[root] module.vpc.local.nat_gateway_count (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.local.nat_gateway_count (expand)" -> "[root] module.vpc.var.one_nat_gateway_per_az (expand)"
		"[root] module.vpc.local.nat_gateway_count (expand)" -> "[root] module.vpc.var.single_nat_gateway (expand)"
		"[root] module.vpc.local.nat_gateway_ips (expand)" -> "[root] module.vpc.aws_eip.nat (expand)"
		"[root] module.vpc.local.nat_gateway_ips (expand)" -> "[root] module.vpc.var.external_nat_ip_ids (expand)"
		"[root] module.vpc.local.private_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.local.public_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.public (expand)"
		"[root] module.vpc.local.redshift_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.redshift (expand)"
		"[root] module.vpc.local.vpc_id (expand)" -> "[root] module.vpc.aws_vpc_ipv4_cidr_block_association.this (expand)"
		"[root] module.vpc.output.azs (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.output.cgw_arns (expand)" -> "[root] module.vpc.aws_customer_gateway.this (expand)"
		"[root] module.vpc.output.cgw_ids (expand)" -> "[root] module.vpc.aws_customer_gateway.this (expand)"
		"[root] module.vpc.output.database_internet_gateway_route_id (expand)" -> "[root] module.vpc.aws_route.database_internet_gateway (expand)"
		"[root] module.vpc.output.database_ipv6_egress_route_id (expand)" -> "[root] module.vpc.aws_route.database_ipv6_egress (expand)"
		"[root] module.vpc.output.database_nat_gateway_route_ids (expand)" -> "[root] module.vpc.aws_route.database_nat_gateway (expand)"
		"[root] module.vpc.output.database_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.database (expand)"
		"[root] module.vpc.output.database_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.database (expand)"
		"[root] module.vpc.output.database_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.database (expand)"
		"[root] module.vpc.output.database_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.database (expand)"
		"[root] module.vpc.output.database_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.output.database_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.output.database_subnet_group (expand)" -> "[root] module.vpc.aws_db_subnet_group.database (expand)"
		"[root] module.vpc.output.database_subnet_group_name (expand)" -> "[root] module.vpc.aws_db_subnet_group.database (expand)"
		"[root] module.vpc.output.database_subnets (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.output.database_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.output.database_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.output.default_network_acl_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.default_route_table_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.default_security_group_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_arn (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_cidr_block (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_default_network_acl_id (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_default_route_table_id (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_default_security_group_id (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_enable_dns_hostnames (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_enable_dns_support (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_id (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_instance_tenancy (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_main_route_table_id (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.dhcp_options_id (expand)" -> "[root] module.vpc.aws_vpc_dhcp_options.this (expand)"
		"[root] module.vpc.output.egress_only_internet_gateway_id (expand)" -> "[root] module.vpc.aws_egress_only_internet_gateway.this (expand)"
		"[root] module.vpc.output.elasticache_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.elasticache (expand)"
		"[root] module.vpc.output.elasticache_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.elasticache (expand)"
		"[root] module.vpc.output.elasticache_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.elasticache (expand)"
		"[root] module.vpc.output.elasticache_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.elasticache (expand)"
		"[root] module.vpc.output.elasticache_route_table_ids (expand)" -> "[root] module.vpc.local.private_route_table_ids (expand)"
		"[root] module.vpc.output.elasticache_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.output.elasticache_subnet_group (expand)" -> "[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)"
		"[root] module.vpc.output.elasticache_subnet_group_name (expand)" -> "[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)"
		"[root] module.vpc.output.elasticache_subnets (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.output.elasticache_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.output.elasticache_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.output.igw_arn (expand)" -> "[root] module.vpc.aws_internet_gateway.this (expand)"
		"[root] module.vpc.output.igw_id (expand)" -> "[root] module.vpc.aws_internet_gateway.this (expand)"
		"[root] module.vpc.output.intra_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.intra (expand)"
		"[root] module.vpc.output.intra_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.intra (expand)"
		"[root] module.vpc.output.intra_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.intra (expand)"
		"[root] module.vpc.output.intra_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.intra (expand)"
		"[root] module.vpc.output.intra_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.intra (expand)"
		"[root] module.vpc.output.intra_subnets (expand)" -> "[root] module.vpc.aws_subnet.intra (expand)"
		"[root] module.vpc.output.intra_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.intra (expand)"
		"[root] module.vpc.output.intra_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.intra (expand)"
		"[root] module.vpc.output.name (expand)" -> "[root] module.vpc.var.name (expand)"
		"[root] module.vpc.output.nat_ids (expand)" -> "[root] module.vpc.aws_eip.nat (expand)"
		"[root] module.vpc.output.nat_public_ips (expand)" -> "[root] module.vpc.aws_eip.nat (expand)"
		"[root] module.vpc.output.nat_public_ips (expand)" -> "[root] module.vpc.var.external_nat_ips (expand)"
		"[root] module.vpc.output.natgw_ids (expand)" -> "[root] module.vpc.aws_nat_gateway.this (expand)"
		"[root] module.vpc.output.outpost_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.outpost (expand)"
		"[root] module.vpc.output.outpost_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.outpost (expand)"
		"[root] module.vpc.output.outpost_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.outpost (expand)"
		"[root] module.vpc.output.outpost_subnets (expand)" -> "[root] module.vpc.aws_subnet.outpost (expand)"
		"[root] module.vpc.output.outpost_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.outpost (expand)"
		"[root] module.vpc.output.outpost_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.outpost (expand)"
		"[root] module.vpc.output.private_ipv6_egress_route_ids (expand)" -> "[root] module.vpc.aws_route.private_ipv6_egress (expand)"
		"[root] module.vpc.output.private_nat_gateway_route_ids (expand)" -> "[root] module.vpc.aws_route.private_nat_gateway (expand)"
		"[root] module.vpc.output.private_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.private (expand)"
		"[root] module.vpc.output.private_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.private (expand)"
		"[root] module.vpc.output.private_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.private (expand)"
		"[root] module.vpc.output.private_route_table_ids (expand)" -> "[root] module.vpc.local.private_route_table_ids (expand)"
		"[root] module.vpc.output.private_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.private (expand)"
		"[root] module.vpc.output.private_subnets (expand)" -> "[root] module.vpc.aws_subnet.private (expand)"
		"[root] module.vpc.output.private_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.private (expand)"
		"[root] module.vpc.output.private_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.private (expand)"
		"[root] module.vpc.output.public_internet_gateway_ipv6_route_id (expand)" -> "[root] module.vpc.aws_route.public_internet_gateway_ipv6 (expand)"
		"[root] module.vpc.output.public_internet_gateway_route_id (expand)" -> "[root] module.vpc.aws_route.public_internet_gateway (expand)"
		"[root] module.vpc.output.public_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.public (expand)"
		"[root] module.vpc.output.public_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.public (expand)"
		"[root] module.vpc.output.public_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.public (expand)"
		"[root] module.vpc.output.public_route_table_ids (expand)" -> "[root] module.vpc.local.public_route_table_ids (expand)"
		"[root] module.vpc.output.public_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.output.public_subnets (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.output.public_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.output.public_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.output.redshift_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.redshift (expand)"
		"[root] module.vpc.output.redshift_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.redshift (expand)"
		"[root] module.vpc.output.redshift_public_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.redshift_public (expand)"
		"[root] module.vpc.output.redshift_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.redshift (expand)"
		"[root] module.vpc.output.redshift_route_table_ids (expand)" -> "[root] module.vpc.local.private_route_table_ids (expand)"
		"[root] module.vpc.output.redshift_route_table_ids (expand)" -> "[root] module.vpc.local.public_route_table_ids (expand)"
		"[root] module.vpc.output.redshift_route_table_ids (expand)" -> "[root] module.vpc.local.redshift_route_table_ids (expand)"
		"[root] module.vpc.output.redshift_route_table_ids (expand)" -> "[root] module.vpc.var.enable_public_redshift (expand)"
		"[root] module.vpc.output.redshift_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.output.redshift_subnet_group (expand)" -> "[root] module.vpc.aws_redshift_subnet_group.redshift (expand)"
		"[root] module.vpc.output.redshift_subnets (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.output.redshift_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.output.redshift_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.output.this_customer_gateway (expand)" -> "[root] module.vpc.aws_customer_gateway.this (expand)"
		"[root] module.vpc.output.vgw_arn (expand)" -> "[root] module.vpc.aws_vpn_gateway.this (expand)"
		"[root] module.vpc.output.vgw_id (expand)" -> "[root] module.vpc.aws_vpn_gateway.this (expand)"
		"[root] module.vpc.output.vgw_id (expand)" -> "[root] module.vpc.aws_vpn_gateway_attachment.this (expand)"
		"[root] module.vpc.output.vpc_arn (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_cidr_block (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_enable_dns_hostnames (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_enable_dns_support (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_flow_log_cloudwatch_iam_role_arn (expand)" -> "[root] module.vpc.local.flow_log_iam_role_arn (expand)"
		"[root] module.vpc.output.vpc_flow_log_destination_arn (expand)" -> "[root] module.vpc.local.flow_log_destination_arn (expand)"
		"[root] module.vpc.output.vpc_flow_log_destination_type (expand)" -> "[root] module.vpc.var.flow_log_destination_type (expand)"
		"[root] module.vpc.output.vpc_flow_log_id (expand)" -> "[root] module.vpc.aws_flow_log.this (expand)"
		"[root] module.vpc.output.vpc_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_instance_tenancy (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_ipv6_association_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_ipv6_cidr_block (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_main_route_table_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_owner_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_secondary_cidr_blocks (expand)" -> "[root] module.vpc.aws_vpc_ipv4_cidr_block_association.this (expand)"
		"[root] module.vpc.var.amazon_side_asn (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.azs (expand)" -> "[root] data.aws_availability_zones.this (expand)"
		"[root] module.vpc.var.azs (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.cidr (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.cidr (expand)" -> "[root] var.vpc_cidr"
		"[root] module.vpc.var.create_database_internet_gateway_route (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_database_nat_gateway_route (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_database_subnet_group (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_database_subnet_route_table (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_egress_only_igw (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_elasticache_subnet_group (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_elasticache_subnet_route_table (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_flow_log_cloudwatch_iam_role (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_flow_log_cloudwatch_log_group (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_igw (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_redshift_subnet_group (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_redshift_subnet_route_table (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_vpc (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.customer_gateway_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.customer_gateways (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.customer_owned_ipv4_pool (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_enable_dns64 (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_enable_resource_name_dns_a_record_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_enable_resource_name_dns_aaaa_record_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_group_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_group_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_ipv6_native (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_names (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_private_dns_hostname_type_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_network_acl_egress (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_network_acl_ingress (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_network_acl_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_network_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_route_table_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_route_table_propagating_vgws (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_route_table_routes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_security_group_egress (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_security_group_ingress (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_security_group_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_security_group_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_vpc_enable_dns_hostnames (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_vpc_enable_dns_support (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_vpc_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_vpc_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.dhcp_options_domain_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.dhcp_options_domain_name_servers (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.dhcp_options_netbios_name_servers (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.dhcp_options_netbios_node_type (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.dhcp_options_ntp_servers (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.dhcp_options_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_enable_dns64 (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_enable_resource_name_dns_a_record_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_group_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_group_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_ipv6_native (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_names (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_private_dns_hostname_type_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_dhcp_options (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_dns_hostnames (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_dns_support (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_flow_log (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_ipv6 (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_nat_gateway (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_network_address_usage_metrics (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_public_redshift (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_vpn_gateway (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.external_nat_ip_ids (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.external_nat_ips (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_cloudwatch_iam_role_arn (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_cloudwatch_log_group_kms_key_id (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_cloudwatch_log_group_name_prefix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_cloudwatch_log_group_name_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_cloudwatch_log_group_retention_in_days (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_cloudwatch_log_group_skip_destroy (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_destination_arn (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_destination_type (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_file_format (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_hive_compatible_partitions (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_log_format (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_max_aggregation_interval (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_per_hour_partition (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_traffic_type (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.igw_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.instance_tenancy (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnet_enable_dns64 (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnet_enable_resource_name_dns_a_record_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnet_enable_resource_name_dns_aaaa_record_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnet_ipv6_native (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnet_names (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnet_private_dns_hostname_type_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.ipv4_ipam_pool_id (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.ipv4_netmask_length (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.ipv6_cidr (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.ipv6_cidr_block_network_border_group (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.ipv6_ipam_pool_id (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.ipv6_netmask_length (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.manage_default_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.manage_default_route_table (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.manage_default_security_group (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.manage_default_vpc (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.map_customer_owned_ip_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.map_public_ip_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.name (expand)" -> "[root] var.environment"
		"[root] module.vpc.var.name (expand)" -> "[root] var.prefix"
		"[root] module.vpc.var.nat_eip_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.nat_gateway_destination_cidr_block (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.nat_gateway_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.one_nat_gateway_per_az (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_arn (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_az (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnet_enable_dns64 (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnet_enable_resource_name_dns_a_record_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnet_ipv6_native (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnet_names (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnet_private_dns_hostname_type_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnet_enable_dns64 (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnet_enable_resource_name_dns_a_record_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnet_enable_resource_name_dns_aaaa_record_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnet_ipv6_native (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnet_names (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnet_private_dns_hostname_type_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnet_tags_per_az (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnets (expand)" -> "[root] var.private_subnet_cidrs"
		"[root] module.vpc.var.propagate_intra_route_tables_vgw (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.propagate_private_route_tables_vgw (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.propagate_public_route_tables_vgw (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_enable_dns64 (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_enable_resource_name_dns_a_record_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_enable_resource_name_dns_aaaa_record_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_ipv6_native (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_names (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_private_dns_hostname_type_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_tags_per_az (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnets (expand)" -> "[root] var.public_subnet_cidrs"
		"[root] module.vpc.var.putin_khuylo (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_enable_dns64 (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_enable_resource_name_dns_a_record_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_group_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_group_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_ipv6_native (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_names (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_private_dns_hostname_type_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.reuse_nat_ips (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.secondary_cidr_blocks (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.single_nat_gateway (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.tags (expand)" -> "[root] var.tags"
		"[root] module.vpc.var.use_ipam_pool (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpc_flow_log_permissions_boundary (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpc_flow_log_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpc_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpn_gateway_az (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpn_gateway_id (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpn_gateway_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_cloudwatch_metric_alarm.cpu_utilization_high (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_cloudwatch_metric_alarm.cpu_utilization_low (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_efs_mount_target.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_iam_role_policy_attachment.task_execution_policy_attach (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_iam_role_policy_attachment.task_policy_attach (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_lb_listener_rule.wordpress (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_route53_record.ipv4 (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_route53_record.ipv6 (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_route53_record.wordpress (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_security_group.wordpress (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] data.aws_caller_identity.current (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.alb.aws_lb_listener.frontend_http_tcp (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.alb.aws_lb_listener_certificate.https_listener (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.alb.aws_lb_listener_rule.https_listener_rule (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.alb.aws_lb_target_group_attachment.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_customer_gateway.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_db_subnet_group.database (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_default_network_acl.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_default_route_table.default (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_default_security_group.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_flow_log.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.database_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.database_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.elasticache_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.elasticache_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.intra_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.intra_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.outpost_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.outpost_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.private_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.private_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.public_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.public_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.redshift_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.redshift_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_redshift_subnet_group.redshift (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.database_dns64_nat_gateway (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.database_internet_gateway (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.database_ipv6_egress (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.database_nat_gateway (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.private_dns64_nat_gateway (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.private_ipv6_egress (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.private_nat_gateway (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.public_internet_gateway (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.public_internet_gateway_ipv6 (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.database (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.elasticache (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.intra (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.outpost (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.private (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.public (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.redshift (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.redshift_public (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_vpc_dhcp_options_association.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"].us_east_1 (close)" -> "[root] module.acm.aws_acm_certificate_validation.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/random\"] (close)" -> "[root] random_string.snapshot_suffix (expand)"
		"[root] random_string.snapshot_suffix (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/random\"]"
		"[root] root" -> "[root] module.acm (close)"
		"[root] root" -> "[root] module.acm_alb (close)"
		"[root] root" -> "[root] module.alb (close)"
		"[root] root" -> "[root] module.vpc (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"].us_east_1 (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/random\"] (close)"
	}
}

