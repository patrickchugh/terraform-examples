{
    "format_version": "1.2",
    "terraform_version": "1.5.6",
    "variables": {
        "cf_price_class": {
            "value": "PriceClass_100"
        },
        "db_auto_pause": {
            "value": true
        },
        "db_backup_retention_days": {
            "value": "1"
        },
        "db_backup_window": {
            "value": "07:00-09:00"
        },
        "db_engine_version": {
            "value": "5.6.10a"
        },
        "db_master_password": {
            "value": "password"
        },
        "db_master_username": {
            "value": "user"
        },
        "db_max_capacity": {
            "value": "1"
        },
        "db_min_capacity": {
            "value": "1"
        },
        "db_seconds_until_auto_pause": {
            "value": 300
        },
        "desired_count": {
            "value": "1"
        },
        "environment": {
            "value": "dev"
        },
        "error_ttl": {
            "value": "30"
        },
        "log_retention_in_days": {
            "value": "1"
        },
        "max_task": {
            "value": "2"
        },
        "min_task": {
            "value": "1"
        },
        "prefix": {
            "value": "wordpress"
        },
        "private_subnet_cidrs": {
            "value": [
                "10.0.100.0/24",
                "10.0.101.0/24",
                "10.0.102.0/24"
            ]
        },
        "public_alb_domain": {
            "value": "example.com"
        },
        "public_subnet_cidrs": {
            "value": [
                "10.0.0.0/24",
                "10.0.1.0/24",
                "10.0.2.0/24"
            ]
        },
        "scaling_down_adjustment": {
            "value": "-1"
        },
        "scaling_down_cooldown": {
            "value": "300"
        },
        "scaling_up_adjustment": {
            "value": "1"
        },
        "scaling_up_cooldown": {
            "value": "60"
        },
        "site_domain": {
            "value": "example.com"
        },
        "tags": {
            "value": {}
        },
        "task_cpu": {
            "value": 1024
        },
        "task_cpu_high_threshold": {
            "value": "75"
        },
        "task_cpu_low_threshold": {
            "value": "30"
        },
        "task_memory": {
            "value": 2048
        },
        "vpc_cidr": {
            "value": "10.0.0.0/16"
        }
    },
    "planned_values": {
        "root_module": {
            "resources": [
                {
                    "address": "aws_appautoscaling_policy.scale_down",
                    "mode": "managed",
                    "type": "aws_appautoscaling_policy",
                    "name": "scale_down",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                        "name": "wordpress-ecs-scale-down-dev",
                        "policy_type": "StepScaling",
                        "resource_id": "service/wordpress-dev/wordpress-dev",
                        "scalable_dimension": "ecs:service:DesiredCount",
                        "service_namespace": "ecs",
                        "step_scaling_policy_configuration": [
                            {
                                "adjustment_type": "ChangeInCapacity",
                                "cooldown": 300,
                                "metric_aggregation_type": "Average",
                                "min_adjustment_magnitude": null,
                                "step_adjustment": [
                                    {
                                        "metric_interval_lower_bound": "",
                                        "metric_interval_upper_bound": "0",
                                        "scaling_adjustment": -1
                                    }
                                ]
                            }
                        ],
                        "target_tracking_scaling_policy_configuration": []
                    },
                    "sensitive_values": {
                        "alarm_arns": [],
                        "step_scaling_policy_configuration": [
                            {
                                "step_adjustment": [
                                    {}
                                ]
                            }
                        ],
                        "target_tracking_scaling_policy_configuration": []
                    }
                },
                {
                    "address": "aws_appautoscaling_policy.scale_up",
                    "mode": "managed",
                    "type": "aws_appautoscaling_policy",
                    "name": "scale_up",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                        "name": "wordpress-ecs-scale-up-dev",
                        "policy_type": "StepScaling",
                        "resource_id": "service/wordpress-dev/wordpress-dev",
                        "scalable_dimension": "ecs:service:DesiredCount",
                        "service_namespace": "ecs",
                        "step_scaling_policy_configuration": [
                            {
                                "adjustment_type": "ChangeInCapacity",
                                "cooldown": 60,
                                "metric_aggregation_type": "Average",
                                "min_adjustment_magnitude": null,
                                "step_adjustment": [
                                    {
                                        "metric_interval_lower_bound": "0",
                                        "metric_interval_upper_bound": "",
                                        "scaling_adjustment": 1
                                    }
                                ]
                            }
                        ],
                        "target_tracking_scaling_policy_configuration": []
                    },
                    "sensitive_values": {
                        "alarm_arns": [],
                        "step_scaling_policy_configuration": [
                            {
                                "step_adjustment": [
                                    {}
                                ]
                            }
                        ],
                        "target_tracking_scaling_policy_configuration": []
                    }
                },
                {
                    "address": "aws_appautoscaling_target.this",
                    "mode": "managed",
                    "type": "aws_appautoscaling_target",
                    "name": "this",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                        "max_capacity": 2,
                        "min_capacity": 1,
                        "resource_id": "service/wordpress-dev/wordpress-dev",
                        "scalable_dimension": "ecs:service:DesiredCount",
                        "service_namespace": "ecs",
                        "tags": null
                    },
                    "sensitive_values": {
                        "tags_all": {}
                    }
                },
                {
                    "address": "aws_cloudwatch_log_group.wordpress",
                    "mode": "managed",
                    "type": "aws_cloudwatch_log_group",
                    "name": "wordpress",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                        "kms_key_id": null,
                        "name": "/wordpress/dev/fg-task",
                        "retention_in_days": 1,
                        "skip_destroy": false,
                        "tags": null
                    },
                    "sensitive_values": {
                        "tags_all": {}
                    }
                },
                {
                    "address": "aws_cloudwatch_metric_alarm.cpu_utilization_high",
                    "mode": "managed",
                    "type": "aws_cloudwatch_metric_alarm",
                    "name": "cpu_utilization_high",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 1,
                    "values": {
                        "actions_enabled": true,
                        "alarm_description": null,
                        "alarm_name": "wordpress-high-CPU-utilization-ecs-dev",
                        "comparison_operator": "GreaterThanOrEqualToThreshold",
                        "datapoints_to_alarm": null,
                        "dimensions": {
                            "ClusterName": "wordpress-dev",
                            "ServiceName": "wordpress-dev"
                        },
                        "evaluation_periods": 1,
                        "extended_statistic": null,
                        "insufficient_data_actions": null,
                        "metric_name": "CPUUtilization",
                        "metric_query": [],
                        "namespace": "AWS/ECS",
                        "ok_actions": null,
                        "period": 60,
                        "statistic": "Average",
                        "tags": null,
                        "threshold": 75,
                        "threshold_metric_id": null,
                        "treat_missing_data": "missing",
                        "unit": null
                    },
                    "sensitive_values": {
                        "alarm_actions": [],
                        "dimensions": {},
                        "metric_query": [],
                        "tags_all": {}
                    }
                },
                {
                    "address": "aws_cloudwatch_metric_alarm.cpu_utilization_low",
                    "mode": "managed",
                    "type": "aws_cloudwatch_metric_alarm",
                    "name": "cpu_utilization_low",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 1,
                    "values": {
                        "actions_enabled": true,
                        "alarm_description": null,
                        "alarm_name": "wordpress-low-CPU-utilization-ecs-dev",
                        "comparison_operator": "LessThanThreshold",
                        "datapoints_to_alarm": null,
                        "dimensions": {
                            "ClusterName": "wordpress-dev",
                            "ServiceName": "wordpress-dev"
                        },
                        "evaluation_periods": 1,
                        "extended_statistic": null,
                        "insufficient_data_actions": null,
                        "metric_name": "CPUUtilization",
                        "metric_query": [],
                        "namespace": "AWS/ECS",
                        "ok_actions": null,
                        "period": 60,
                        "statistic": "Average",
                        "tags": null,
                        "threshold": 30,
                        "threshold_metric_id": null,
                        "treat_missing_data": "missing",
                        "unit": null
                    },
                    "sensitive_values": {
                        "alarm_actions": [],
                        "dimensions": {},
                        "metric_query": [],
                        "tags_all": {}
                    }
                },
                {
                    "address": "aws_db_subnet_group.this",
                    "mode": "managed",
                    "type": "aws_db_subnet_group",
                    "name": "this",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                        "description": "Managed by Terraform",
                        "name": "wordpress-dev",
                        "tags": null
                    },
                    "sensitive_values": {
                        "subnet_ids": [],
                        "supported_network_types": [],
                        "tags_all": {}
                    }
                },
                {
                    "address": "aws_ecs_cluster.this",
                    "mode": "managed",
                    "type": "aws_ecs_cluster",
                    "name": "this",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                        "configuration": [],
                        "name": "wordpress-dev",
                        "service_connect_defaults": [],
                        "tags": null
                    },
                    "sensitive_values": {
                        "configuration": [],
                        "service_connect_defaults": [],
                        "setting": [],
                        "tags_all": {}
                    }
                },
                {
                    "address": "aws_ecs_service.this",
                    "mode": "managed",
                    "type": "aws_ecs_service",
                    "name": "this",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                        "alarms": [],
                        "capacity_provider_strategy": [],
                        "deployment_circuit_breaker": [],
                        "deployment_controller": [],
                        "deployment_maximum_percent": 200,
                        "deployment_minimum_healthy_percent": 100,
                        "desired_count": 1,
                        "enable_ecs_managed_tags": false,
                        "enable_execute_command": false,
                        "force_new_deployment": null,
                        "health_check_grace_period_seconds": null,
                        "launch_type": "FARGATE",
                        "load_balancer": [
                            {
                                "container_name": "wordpress",
                                "container_port": 80,
                                "elb_name": ""
                            }
                        ],
                        "name": "wordpress-dev",
                        "network_configuration": [
                            {
                                "assign_public_ip": false
                            }
                        ],
                        "ordered_placement_strategy": [],
                        "placement_constraints": [],
                        "platform_version": "1.4.0",
                        "propagate_tags": null,
                        "scheduling_strategy": "REPLICA",
                        "service_connect_configuration": [],
                        "service_registries": [],
                        "tags": null,
                        "timeouts": null,
                        "wait_for_steady_state": false
                    },
                    "sensitive_values": {
                        "alarms": [],
                        "capacity_provider_strategy": [],
                        "deployment_circuit_breaker": [],
                        "deployment_controller": [],
                        "load_balancer": [
                            {}
                        ],
                        "network_configuration": [
                            {
                                "security_groups": [],
                                "subnets": []
                            }
                        ],
                        "ordered_placement_strategy": [],
                        "placement_constraints": [],
                        "service_connect_configuration": [],
                        "service_registries": [],
                        "tags_all": {},
                        "triggers": {}
                    }
                },
                {
                    "address": "aws_ecs_task_definition.this",
                    "mode": "managed",
                    "type": "aws_ecs_task_definition",
                    "name": "this",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 1,
                    "values": {
                        "cpu": "1024",
                        "ephemeral_storage": [],
                        "family": "wordpress-dev",
                        "inference_accelerator": [],
                        "ipc_mode": null,
                        "memory": "2048",
                        "network_mode": "awsvpc",
                        "pid_mode": null,
                        "placement_constraints": [],
                        "proxy_configuration": [],
                        "requires_compatibilities": [
                            "FARGATE"
                        ],
                        "runtime_platform": [],
                        "skip_destroy": false,
                        "tags": null,
                        "volume": [
                            {
                                "docker_volume_configuration": [],
                                "efs_volume_configuration": [
                                    {
                                        "authorization_config": [],
                                        "root_directory": "/",
                                        "transit_encryption": "",
                                        "transit_encryption_port": null
                                    }
                                ],
                                "fsx_windows_file_server_volume_configuration": [],
                                "host_path": "",
                                "name": "efs"
                            }
                        ]
                    },
                    "sensitive_values": {
                        "ephemeral_storage": [],
                        "inference_accelerator": [],
                        "placement_constraints": [],
                        "proxy_configuration": [],
                        "requires_compatibilities": [
                            false
                        ],
                        "runtime_platform": [],
                        "tags_all": {},
                        "volume": [
                            {
                                "docker_volume_configuration": [],
                                "efs_volume_configuration": [
                                    {
                                        "authorization_config": []
                                    }
                                ],
                                "fsx_windows_file_server_volume_configuration": []
                            }
                        ]
                    }
                },
                {
                    "address": "aws_efs_file_system.this",
                    "mode": "managed",
                    "type": "aws_efs_file_system",
                    "name": "this",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                        "creation_token": "wordpress-dev",
                        "lifecycle_policy": [],
                        "provisioned_throughput_in_mibps": null,
                        "tags": null,
                        "throughput_mode": "bursting"
                    },
                    "sensitive_values": {
                        "lifecycle_policy": [],
                        "size_in_bytes": [],
                        "tags_all": {}
                    }
                },
                {
                    "address": "aws_efs_mount_target.this[0]",
                    "mode": "managed",
                    "type": "aws_efs_mount_target",
                    "name": "this",
                    "index": 0,
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                        "timeouts": null
                    },
                    "sensitive_values": {
                        "security_groups": []
                    }
                },
                {
                    "address": "aws_efs_mount_target.this[1]",
                    "mode": "managed",
                    "type": "aws_efs_mount_target",
                    "name": "this",
                    "index": 1,
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                        "timeouts": null
                    },
                    "sensitive_values": {
                        "security_groups": []
                    }
                },
                {
                    "address": "aws_efs_mount_target.this[2]",
                    "mode": "managed",
                    "type": "aws_efs_mount_target",
                    "name": "this",
                    "index": 2,
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                        "timeouts": null
                    },
                    "sensitive_values": {
                        "security_groups": []
                    }
                },
                {
                    "address": "aws_iam_policy.task_execution_policy",
                    "mode": "managed",
                    "type": "aws_iam_policy",
                    "name": "task_execution_policy",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                        "description": null,
                        "path": "/",
                        "policy": "{\"Statement\":[{\"Action\":[\"ecr:GetAuthorizationToken\",\"ecr:BatchCheckLayerAvailability\",\"ecr:GetDownloadUrlForLayer\",\"ecr:BatchGetImage\",\"logs:CreateLogStream\",\"logs:PutLogEvents\",\"ssm:GetParameters\",\"kms:Decrypt\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
                        "tags": null
                    },
                    "sensitive_values": {
                        "tags_all": {}
                    }
                },
                {
                    "address": "aws_iam_policy.task_policy",
                    "mode": "managed",
                    "type": "aws_iam_policy",
                    "name": "task_policy",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                        "description": null,
                        "path": "/",
                        "policy": "{\"Statement\":[{\"Action\":[\"elasticfilesystem:ClientMount\",\"elasticfilesystem:ClientWrite\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
                        "tags": null
                    },
                    "sensitive_values": {
                        "tags_all": {}
                    }
                },
                {
                    "address": "aws_iam_role.task_execution_role",
                    "mode": "managed",
                    "type": "aws_iam_role",
                    "name": "task_execution_role",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                        "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":[\"ecs-tasks.amazonaws.com\"]}}],\"Version\":\"2012-10-17\"}",
                        "description": null,
                        "force_detach_policies": false,
                        "max_session_duration": 3600,
                        "name": "wordpress-task-execution-role-dev",
                        "path": "/",
                        "permissions_boundary": null,
                        "tags": null
                    },
                    "sensitive_values": {
                        "inline_policy": [],
                        "managed_policy_arns": [],
                        "tags_all": {}
                    }
                },
                {
                    "address": "aws_iam_role.task_role",
                    "mode": "managed",
                    "type": "aws_iam_role",
                    "name": "task_role",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                        "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":[\"ecs-tasks.amazonaws.com\"]}}],\"Version\":\"2012-10-17\"}",
                        "description": null,
                        "force_detach_policies": false,
                        "max_session_duration": 3600,
                        "name": "wordpress-task-role-dev",
                        "path": "/",
                        "permissions_boundary": null,
                        "tags": null
                    },
                    "sensitive_values": {
                        "inline_policy": [],
                        "managed_policy_arns": [],
                        "tags_all": {}
                    }
                },
                {
                    "address": "aws_iam_role_policy_attachment.task_execution_policy_attach",
                    "mode": "managed",
                    "type": "aws_iam_role_policy_attachment",
                    "name": "task_execution_policy_attach",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                        "role": "wordpress-task-execution-role-dev"
                    },
                    "sensitive_values": {}
                },
                {
                    "address": "aws_iam_role_policy_attachment.task_policy_attach",
                    "mode": "managed",
                    "type": "aws_iam_role_policy_attachment",
                    "name": "task_policy_attach",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                        "role": "wordpress-task-role-dev"
                    },
                    "sensitive_values": {}
                },
                {
                    "address": "aws_lb_target_group.this",
                    "mode": "managed",
                    "type": "aws_lb_target_group",
                    "name": "this",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                        "connection_termination": false,
                        "deregistration_delay": "300",
                        "health_check": [
                            {
                                "enabled": true,
                                "healthy_threshold": 3,
                                "interval": 30,
                                "matcher": "200,302",
                                "path": "/",
                                "port": "traffic-port",
                                "protocol": "HTTP",
                                "unhealthy_threshold": 3
                            }
                        ],
                        "lambda_multi_value_headers_enabled": false,
                        "name": "wordpress-dev",
                        "name_prefix": null,
                        "port": 80,
                        "protocol": "HTTP",
                        "proxy_protocol_v2": false,
                        "slow_start": 0,
                        "tags": null,
                        "target_type": "ip"
                    },
                    "sensitive_values": {
                        "health_check": [
                            {}
                        ],
                        "stickiness": [],
                        "tags_all": {},
                        "target_failover": []
                    }
                },
                {
                    "address": "aws_rds_cluster.this",
                    "mode": "managed",
                    "type": "aws_rds_cluster",
                    "name": "this",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                        "allow_major_version_upgrade": null,
                        "availability_zones": [
                            "us-east-1a",
                            "us-east-1b",
                            "us-east-1c",
                            "us-east-1d",
                            "us-east-1e",
                            "us-east-1f"
                        ],
                        "backtrack_window": null,
                        "backup_retention_period": 1,
                        "cluster_identifier": "wordpress-dev",
                        "copy_tags_to_snapshot": false,
                        "database_name": "wordpress",
                        "db_cluster_instance_class": null,
                        "db_instance_parameter_group_name": null,
                        "db_subnet_group_name": "wordpress-dev",
                        "deletion_protection": null,
                        "enable_global_write_forwarding": false,
                        "enable_http_endpoint": false,
                        "enabled_cloudwatch_logs_exports": null,
                        "engine": "aurora-mysql",
                        "engine_mode": "serverless",
                        "engine_version": "5.6.10a",
                        "global_cluster_identifier": null,
                        "iam_database_authentication_enabled": null,
                        "iops": null,
                        "manage_master_user_password": null,
                        "master_password": "password",
                        "master_username": "user",
                        "preferred_backup_window": "07:00-09:00",
                        "replication_source_identifier": null,
                        "restore_to_point_in_time": [],
                        "s3_import": [],
                        "scaling_configuration": [
                            {
                                "auto_pause": true,
                                "max_capacity": 1,
                                "min_capacity": 1,
                                "seconds_until_auto_pause": 300,
                                "timeout_action": "RollbackCapacityChange"
                            }
                        ],
                        "serverlessv2_scaling_configuration": [],
                        "skip_final_snapshot": false,
                        "snapshot_identifier": null,
                        "source_region": null,
                        "tags": null,
                        "timeouts": null
                    },
                    "sensitive_values": {
                        "availability_zones": [
                            false,
                            false,
                            false,
                            false,
                            false,
                            false
                        ],
                        "cluster_members": [],
                        "iam_roles": [],
                        "master_user_secret": [],
                        "restore_to_point_in_time": [],
                        "s3_import": [],
                        "scaling_configuration": [
                            {}
                        ],
                        "serverlessv2_scaling_configuration": [],
                        "tags_all": {},
                        "vpc_security_group_ids": []
                    }
                },
                {
                    "address": "aws_security_group.alb",
                    "mode": "managed",
                    "type": "aws_security_group",
                    "name": "alb",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 1,
                    "values": {
                        "description": "Allow HTTPS inbound traffc",
                        "egress": [
                            {
                                "cidr_blocks": [
                                    "0.0.0.0/0"
                                ],
                                "description": "",
                                "from_port": 0,
                                "ipv6_cidr_blocks": [],
                                "prefix_list_ids": [],
                                "protocol": "-1",
                                "security_groups": [],
                                "self": false,
                                "to_port": 0
                            }
                        ],
                        "ingress": [
                            {
                                "cidr_blocks": [
                                    "0.0.0.0/0"
                                ],
                                "description": "",
                                "from_port": 443,
                                "ipv6_cidr_blocks": [],
                                "prefix_list_ids": [],
                                "protocol": "tcp",
                                "security_groups": [],
                                "self": false,
                                "to_port": 443
                            },
                            {
                                "cidr_blocks": [],
                                "description": "",
                                "from_port": 0,
                                "ipv6_cidr_blocks": [],
                                "prefix_list_ids": [],
                                "protocol": "-1",
                                "security_groups": [],
                                "self": true,
                                "to_port": 0
                            }
                        ],
                        "name": "wordpress-alb-dev",
                        "revoke_rules_on_delete": false,
                        "tags": null,
                        "timeouts": null
                    },
                    "sensitive_values": {
                        "egress": [
                            {
                                "cidr_blocks": [
                                    false
                                ],
                                "ipv6_cidr_blocks": [],
                                "prefix_list_ids": [],
                                "security_groups": []
                            }
                        ],
                        "ingress": [
                            {
                                "cidr_blocks": [
                                    false
                                ],
                                "ipv6_cidr_blocks": [],
                                "prefix_list_ids": [],
                                "security_groups": []
                            },
                            {
                                "cidr_blocks": [],
                                "ipv6_cidr_blocks": [],
                                "prefix_list_ids": [],
                                "security_groups": []
                            }
                        ],
                        "tags_all": {}
                    }
                },
                {
                    "address": "aws_security_group.db",
                    "mode": "managed",
                    "type": "aws_security_group",
                    "name": "db",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 1,
                    "values": {
                        "description": "Managed by Terraform",
                        "egress": [
                            {
                                "cidr_blocks": [
                                    "0.0.0.0/0"
                                ],
                                "description": "",
                                "from_port": 0,
                                "ipv6_cidr_blocks": [],
                                "prefix_list_ids": [],
                                "protocol": "-1",
                                "security_groups": [],
                                "self": false,
                                "to_port": 0
                            }
                        ],
                        "ingress": [
                            {
                                "cidr_blocks": [],
                                "description": "",
                                "from_port": 3306,
                                "ipv6_cidr_blocks": [],
                                "prefix_list_ids": [],
                                "protocol": "tcp",
                                "security_groups": [],
                                "self": true,
                                "to_port": 3306
                            }
                        ],
                        "name": "wordpress-db-dev",
                        "revoke_rules_on_delete": false,
                        "tags": null,
                        "timeouts": null
                    },
                    "sensitive_values": {
                        "egress": [
                            {
                                "cidr_blocks": [
                                    false
                                ],
                                "ipv6_cidr_blocks": [],
                                "prefix_list_ids": [],
                                "security_groups": []
                            }
                        ],
                        "ingress": [
                            {
                                "cidr_blocks": [],
                                "ipv6_cidr_blocks": [],
                                "prefix_list_ids": [],
                                "security_groups": []
                            }
                        ],
                        "tags_all": {}
                    }
                },
                {
                    "address": "aws_security_group.efs",
                    "mode": "managed",
                    "type": "aws_security_group",
                    "name": "efs",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 1,
                    "values": {
                        "description": "Allow traffic ffrom self",
                        "egress": [
                            {
                                "cidr_blocks": [
                                    "0.0.0.0/0"
                                ],
                                "description": "",
                                "from_port": 0,
                                "ipv6_cidr_blocks": [],
                                "prefix_list_ids": [],
                                "protocol": "-1",
                                "security_groups": [],
                                "self": false,
                                "to_port": 0
                            }
                        ],
                        "ingress": [
                            {
                                "cidr_blocks": [],
                                "description": "",
                                "from_port": 2049,
                                "ipv6_cidr_blocks": [],
                                "prefix_list_ids": [],
                                "protocol": "tcp",
                                "security_groups": [],
                                "self": true,
                                "to_port": 2049
                            }
                        ],
                        "name": "wordpress-efs-dev",
                        "revoke_rules_on_delete": false,
                        "tags": null,
                        "timeouts": null
                    },
                    "sensitive_values": {
                        "egress": [
                            {
                                "cidr_blocks": [
                                    false
                                ],
                                "ipv6_cidr_blocks": [],
                                "prefix_list_ids": [],
                                "security_groups": []
                            }
                        ],
                        "ingress": [
                            {
                                "cidr_blocks": [],
                                "ipv6_cidr_blocks": [],
                                "prefix_list_ids": [],
                                "security_groups": []
                            }
                        ],
                        "tags_all": {}
                    }
                },
                {
                    "address": "aws_security_group.wordpress",
                    "mode": "managed",
                    "type": "aws_security_group",
                    "name": "wordpress",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 1,
                    "values": {
                        "description": "Fargate wordpress",
                        "egress": [
                            {
                                "cidr_blocks": [
                                    "0.0.0.0/0"
                                ],
                                "description": "",
                                "from_port": 0,
                                "ipv6_cidr_blocks": [],
                                "prefix_list_ids": [],
                                "protocol": "-1",
                                "security_groups": [],
                                "self": false,
                                "to_port": 0
                            }
                        ],
                        "ingress": [
                            {
                                "cidr_blocks": [],
                                "description": "",
                                "from_port": 0,
                                "ipv6_cidr_blocks": [],
                                "prefix_list_ids": [],
                                "protocol": "tcp",
                                "self": false,
                                "to_port": 0
                            }
                        ],
                        "name": "wordpress-wordpress-dev",
                        "revoke_rules_on_delete": false,
                        "tags": null,
                        "timeouts": null
                    },
                    "sensitive_values": {
                        "egress": [
                            {
                                "cidr_blocks": [
                                    false
                                ],
                                "ipv6_cidr_blocks": [],
                                "prefix_list_ids": [],
                                "security_groups": []
                            }
                        ],
                        "ingress": [
                            {
                                "cidr_blocks": [],
                                "ipv6_cidr_blocks": [],
                                "prefix_list_ids": [],
                                "security_groups": []
                            }
                        ],
                        "tags_all": {}
                    }
                },
                {
                    "address": "aws_ssm_parameter.db_master_password",
                    "mode": "managed",
                    "type": "aws_ssm_parameter",
                    "name": "db_master_password",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                        "allowed_pattern": null,
                        "description": null,
                        "name": "/wordpress/dev/db_master_password",
                        "overwrite": null,
                        "tags": null,
                        "type": "SecureString",
                        "value": "password"
                    },
                    "sensitive_values": {
                        "tags_all": {}
                    }
                },
                {
                    "address": "aws_ssm_parameter.db_master_user",
                    "mode": "managed",
                    "type": "aws_ssm_parameter",
                    "name": "db_master_user",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                        "allowed_pattern": null,
                        "description": null,
                        "name": "/wordpress/dev/db_master_user",
                        "overwrite": null,
                        "tags": null,
                        "type": "SecureString",
                        "value": "user"
                    },
                    "sensitive_values": {
                        "tags_all": {}
                    }
                },
                {
                    "address": "random_string.snapshot_suffix",
                    "mode": "managed",
                    "type": "random_string",
                    "name": "snapshot_suffix",
                    "provider_name": "registry.terraform.io/hashicorp/random",
                    "schema_version": 2,
                    "values": {
                        "keepers": null,
                        "length": 8,
                        "lower": true,
                        "min_lower": 0,
                        "min_numeric": 0,
                        "min_special": 0,
                        "min_upper": 0,
                        "number": true,
                        "numeric": true,
                        "override_special": null,
                        "special": false,
                        "upper": true
                    },
                    "sensitive_values": {}
                }
            ],
            "child_modules": [
                {
                    "resources": [
                        {
                            "address": "module.acm.aws_acm_certificate.this[0]",
                            "mode": "managed",
                            "type": "aws_acm_certificate",
                            "name": "this",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "certificate_authority_arn": null,
                                "certificate_body": null,
                                "certificate_chain": null,
                                "domain_name": "example.com",
                                "domain_validation_options": [
                                    {
                                        "domain_name": "example.com"
                                    }
                                ],
                                "early_renewal_duration": null,
                                "options": [
                                    {
                                        "certificate_transparency_logging_preference": "ENABLED"
                                    }
                                ],
                                "private_key": null,
                                "subject_alternative_names": [
                                    "example.com"
                                ],
                                "tags": null,
                                "validation_method": "DNS",
                                "validation_option": []
                            },
                            "sensitive_values": {
                                "domain_validation_options": [
                                    {}
                                ],
                                "options": [
                                    {}
                                ],
                                "renewal_summary": [],
                                "subject_alternative_names": [
                                    false
                                ],
                                "tags_all": {},
                                "validation_emails": [],
                                "validation_option": []
                            }
                        }
                    ],
                    "address": "module.acm"
                },
                {
                    "resources": [
                        {
                            "address": "module.acm_alb.aws_acm_certificate.this[0]",
                            "mode": "managed",
                            "type": "aws_acm_certificate",
                            "name": "this",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "certificate_authority_arn": null,
                                "certificate_body": null,
                                "certificate_chain": null,
                                "domain_name": "example.com",
                                "domain_validation_options": [
                                    {
                                        "domain_name": "example.com"
                                    }
                                ],
                                "early_renewal_duration": null,
                                "options": [
                                    {
                                        "certificate_transparency_logging_preference": "ENABLED"
                                    }
                                ],
                                "private_key": null,
                                "subject_alternative_names": [
                                    "example.com"
                                ],
                                "tags": null,
                                "validation_method": "DNS",
                                "validation_option": []
                            },
                            "sensitive_values": {
                                "domain_validation_options": [
                                    {}
                                ],
                                "options": [
                                    {}
                                ],
                                "renewal_summary": [],
                                "subject_alternative_names": [
                                    false
                                ],
                                "tags_all": {},
                                "validation_emails": [],
                                "validation_option": []
                            }
                        }
                    ],
                    "address": "module.acm_alb"
                },
                {
                    "resources": [
                        {
                            "address": "module.alb.aws_lb.this[0]",
                            "mode": "managed",
                            "type": "aws_lb",
                            "name": "this",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "access_logs": [],
                                "customer_owned_ipv4_pool": null,
                                "desync_mitigation_mode": "defensive",
                                "drop_invalid_header_fields": false,
                                "enable_cross_zone_load_balancing": null,
                                "enable_deletion_protection": false,
                                "enable_http2": true,
                                "enable_tls_version_and_cipher_suite_headers": false,
                                "enable_waf_fail_open": false,
                                "enable_xff_client_port": false,
                                "idle_timeout": 60,
                                "internal": false,
                                "ip_address_type": "ipv4",
                                "load_balancer_type": "application",
                                "name": "wordpress-dev",
                                "name_prefix": null,
                                "preserve_host_header": false,
                                "tags": {
                                    "Name": "wordpress-dev"
                                },
                                "tags_all": {
                                    "Name": "wordpress-dev"
                                },
                                "timeouts": {
                                    "create": "10m",
                                    "delete": "10m",
                                    "update": "10m"
                                },
                                "xff_header_processing_mode": "append"
                            },
                            "sensitive_values": {
                                "access_logs": [],
                                "security_groups": [],
                                "subnet_mapping": [],
                                "subnets": [],
                                "tags": {},
                                "tags_all": {},
                                "timeouts": {}
                            }
                        },
                        {
                            "address": "module.alb.aws_lb_target_group.main[0]",
                            "mode": "managed",
                            "type": "aws_lb_target_group",
                            "name": "main",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "connection_termination": false,
                                "deregistration_delay": "300",
                                "lambda_multi_value_headers_enabled": false,
                                "name": "wordpress-default-dev",
                                "name_prefix": null,
                                "port": 80,
                                "protocol": "HTTP",
                                "proxy_protocol_v2": false,
                                "slow_start": 0,
                                "tags": {
                                    "Name": "wordpress-default-dev"
                                },
                                "tags_all": {
                                    "Name": "wordpress-default-dev"
                                },
                                "target_type": "instance"
                            },
                            "sensitive_values": {
                                "health_check": [],
                                "stickiness": [],
                                "tags": {},
                                "tags_all": {},
                                "target_failover": []
                            }
                        }
                    ],
                    "address": "module.alb"
                },
                {
                    "resources": [
                        {
                            "address": "module.vpc.aws_eip.nat[0]",
                            "mode": "managed",
                            "type": "aws_eip",
                            "name": "nat",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "address": null,
                                "associate_with_private_ip": null,
                                "customer_owned_ipv4_pool": null,
                                "tags": {
                                    "Name": "wordpress-dev-us-east-1a"
                                },
                                "tags_all": {
                                    "Name": "wordpress-dev-us-east-1a"
                                },
                                "timeouts": null,
                                "vpc": true
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_eip.nat[1]",
                            "mode": "managed",
                            "type": "aws_eip",
                            "name": "nat",
                            "index": 1,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "address": null,
                                "associate_with_private_ip": null,
                                "customer_owned_ipv4_pool": null,
                                "tags": {
                                    "Name": "wordpress-dev-us-east-1b"
                                },
                                "tags_all": {
                                    "Name": "wordpress-dev-us-east-1b"
                                },
                                "timeouts": null,
                                "vpc": true
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_eip.nat[2]",
                            "mode": "managed",
                            "type": "aws_eip",
                            "name": "nat",
                            "index": 2,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "address": null,
                                "associate_with_private_ip": null,
                                "customer_owned_ipv4_pool": null,
                                "tags": {
                                    "Name": "wordpress-dev-us-east-1c"
                                },
                                "tags_all": {
                                    "Name": "wordpress-dev-us-east-1c"
                                },
                                "timeouts": null,
                                "vpc": true
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_internet_gateway.this[0]",
                            "mode": "managed",
                            "type": "aws_internet_gateway",
                            "name": "this",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "tags": {
                                    "Name": "wordpress-dev"
                                },
                                "tags_all": {
                                    "Name": "wordpress-dev"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_nat_gateway.this[0]",
                            "mode": "managed",
                            "type": "aws_nat_gateway",
                            "name": "this",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "connectivity_type": "public",
                                "secondary_allocation_ids": null,
                                "tags": {
                                    "Name": "wordpress-dev-us-east-1a"
                                },
                                "tags_all": {
                                    "Name": "wordpress-dev-us-east-1a"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "secondary_private_ip_addresses": [],
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_nat_gateway.this[1]",
                            "mode": "managed",
                            "type": "aws_nat_gateway",
                            "name": "this",
                            "index": 1,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "connectivity_type": "public",
                                "secondary_allocation_ids": null,
                                "tags": {
                                    "Name": "wordpress-dev-us-east-1b"
                                },
                                "tags_all": {
                                    "Name": "wordpress-dev-us-east-1b"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "secondary_private_ip_addresses": [],
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_nat_gateway.this[2]",
                            "mode": "managed",
                            "type": "aws_nat_gateway",
                            "name": "this",
                            "index": 2,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "connectivity_type": "public",
                                "secondary_allocation_ids": null,
                                "tags": {
                                    "Name": "wordpress-dev-us-east-1c"
                                },
                                "tags_all": {
                                    "Name": "wordpress-dev-us-east-1c"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "secondary_private_ip_addresses": [],
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_route.private_nat_gateway[0]",
                            "mode": "managed",
                            "type": "aws_route",
                            "name": "private_nat_gateway",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "carrier_gateway_id": null,
                                "core_network_arn": null,
                                "destination_cidr_block": "0.0.0.0/0",
                                "destination_ipv6_cidr_block": null,
                                "destination_prefix_list_id": null,
                                "egress_only_gateway_id": null,
                                "gateway_id": null,
                                "local_gateway_id": null,
                                "timeouts": {
                                    "create": "5m",
                                    "delete": null,
                                    "update": null
                                },
                                "transit_gateway_id": null,
                                "vpc_endpoint_id": null,
                                "vpc_peering_connection_id": null
                            },
                            "sensitive_values": {
                                "timeouts": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_route.private_nat_gateway[1]",
                            "mode": "managed",
                            "type": "aws_route",
                            "name": "private_nat_gateway",
                            "index": 1,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "carrier_gateway_id": null,
                                "core_network_arn": null,
                                "destination_cidr_block": "0.0.0.0/0",
                                "destination_ipv6_cidr_block": null,
                                "destination_prefix_list_id": null,
                                "egress_only_gateway_id": null,
                                "gateway_id": null,
                                "local_gateway_id": null,
                                "timeouts": {
                                    "create": "5m",
                                    "delete": null,
                                    "update": null
                                },
                                "transit_gateway_id": null,
                                "vpc_endpoint_id": null,
                                "vpc_peering_connection_id": null
                            },
                            "sensitive_values": {
                                "timeouts": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_route.private_nat_gateway[2]",
                            "mode": "managed",
                            "type": "aws_route",
                            "name": "private_nat_gateway",
                            "index": 2,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "carrier_gateway_id": null,
                                "core_network_arn": null,
                                "destination_cidr_block": "0.0.0.0/0",
                                "destination_ipv6_cidr_block": null,
                                "destination_prefix_list_id": null,
                                "egress_only_gateway_id": null,
                                "gateway_id": null,
                                "local_gateway_id": null,
                                "timeouts": {
                                    "create": "5m",
                                    "delete": null,
                                    "update": null
                                },
                                "transit_gateway_id": null,
                                "vpc_endpoint_id": null,
                                "vpc_peering_connection_id": null
                            },
                            "sensitive_values": {
                                "timeouts": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_route.public_internet_gateway[0]",
                            "mode": "managed",
                            "type": "aws_route",
                            "name": "public_internet_gateway",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "carrier_gateway_id": null,
                                "core_network_arn": null,
                                "destination_cidr_block": "0.0.0.0/0",
                                "destination_ipv6_cidr_block": null,
                                "destination_prefix_list_id": null,
                                "egress_only_gateway_id": null,
                                "local_gateway_id": null,
                                "nat_gateway_id": null,
                                "timeouts": {
                                    "create": "5m",
                                    "delete": null,
                                    "update": null
                                },
                                "transit_gateway_id": null,
                                "vpc_endpoint_id": null,
                                "vpc_peering_connection_id": null
                            },
                            "sensitive_values": {
                                "timeouts": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_route_table.private[0]",
                            "mode": "managed",
                            "type": "aws_route_table",
                            "name": "private",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "tags": {
                                    "Name": "wordpress-dev-private-us-east-1a"
                                },
                                "tags_all": {
                                    "Name": "wordpress-dev-private-us-east-1a"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "propagating_vgws": [],
                                "route": [],
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_route_table.private[1]",
                            "mode": "managed",
                            "type": "aws_route_table",
                            "name": "private",
                            "index": 1,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "tags": {
                                    "Name": "wordpress-dev-private-us-east-1b"
                                },
                                "tags_all": {
                                    "Name": "wordpress-dev-private-us-east-1b"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "propagating_vgws": [],
                                "route": [],
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_route_table.private[2]",
                            "mode": "managed",
                            "type": "aws_route_table",
                            "name": "private",
                            "index": 2,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "tags": {
                                    "Name": "wordpress-dev-private-us-east-1c"
                                },
                                "tags_all": {
                                    "Name": "wordpress-dev-private-us-east-1c"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "propagating_vgws": [],
                                "route": [],
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_route_table.public[0]",
                            "mode": "managed",
                            "type": "aws_route_table",
                            "name": "public",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "tags": {
                                    "Name": "wordpress-dev-public"
                                },
                                "tags_all": {
                                    "Name": "wordpress-dev-public"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "propagating_vgws": [],
                                "route": [],
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_route_table_association.private[0]",
                            "mode": "managed",
                            "type": "aws_route_table_association",
                            "name": "private",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "gateway_id": null,
                                "timeouts": null
                            },
                            "sensitive_values": {}
                        },
                        {
                            "address": "module.vpc.aws_route_table_association.private[1]",
                            "mode": "managed",
                            "type": "aws_route_table_association",
                            "name": "private",
                            "index": 1,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "gateway_id": null,
                                "timeouts": null
                            },
                            "sensitive_values": {}
                        },
                        {
                            "address": "module.vpc.aws_route_table_association.private[2]",
                            "mode": "managed",
                            "type": "aws_route_table_association",
                            "name": "private",
                            "index": 2,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "gateway_id": null,
                                "timeouts": null
                            },
                            "sensitive_values": {}
                        },
                        {
                            "address": "module.vpc.aws_route_table_association.public[0]",
                            "mode": "managed",
                            "type": "aws_route_table_association",
                            "name": "public",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "gateway_id": null,
                                "timeouts": null
                            },
                            "sensitive_values": {}
                        },
                        {
                            "address": "module.vpc.aws_route_table_association.public[1]",
                            "mode": "managed",
                            "type": "aws_route_table_association",
                            "name": "public",
                            "index": 1,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "gateway_id": null,
                                "timeouts": null
                            },
                            "sensitive_values": {}
                        },
                        {
                            "address": "module.vpc.aws_route_table_association.public[2]",
                            "mode": "managed",
                            "type": "aws_route_table_association",
                            "name": "public",
                            "index": 2,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "gateway_id": null,
                                "timeouts": null
                            },
                            "sensitive_values": {}
                        },
                        {
                            "address": "module.vpc.aws_subnet.private[0]",
                            "mode": "managed",
                            "type": "aws_subnet",
                            "name": "private",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 1,
                            "values": {
                                "assign_ipv6_address_on_creation": false,
                                "availability_zone": "us-east-1a",
                                "cidr_block": "10.0.100.0/24",
                                "customer_owned_ipv4_pool": null,
                                "enable_dns64": false,
                                "enable_lni_at_device_index": null,
                                "enable_resource_name_dns_a_record_on_launch": false,
                                "enable_resource_name_dns_aaaa_record_on_launch": false,
                                "ipv6_cidr_block": null,
                                "ipv6_native": false,
                                "map_customer_owned_ip_on_launch": null,
                                "map_public_ip_on_launch": false,
                                "outpost_arn": null,
                                "tags": {
                                    "Name": "wordpress-dev-private-us-east-1a"
                                },
                                "tags_all": {
                                    "Name": "wordpress-dev-private-us-east-1a"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_subnet.private[1]",
                            "mode": "managed",
                            "type": "aws_subnet",
                            "name": "private",
                            "index": 1,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 1,
                            "values": {
                                "assign_ipv6_address_on_creation": false,
                                "availability_zone": "us-east-1b",
                                "cidr_block": "10.0.101.0/24",
                                "customer_owned_ipv4_pool": null,
                                "enable_dns64": false,
                                "enable_lni_at_device_index": null,
                                "enable_resource_name_dns_a_record_on_launch": false,
                                "enable_resource_name_dns_aaaa_record_on_launch": false,
                                "ipv6_cidr_block": null,
                                "ipv6_native": false,
                                "map_customer_owned_ip_on_launch": null,
                                "map_public_ip_on_launch": false,
                                "outpost_arn": null,
                                "tags": {
                                    "Name": "wordpress-dev-private-us-east-1b"
                                },
                                "tags_all": {
                                    "Name": "wordpress-dev-private-us-east-1b"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_subnet.private[2]",
                            "mode": "managed",
                            "type": "aws_subnet",
                            "name": "private",
                            "index": 2,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 1,
                            "values": {
                                "assign_ipv6_address_on_creation": false,
                                "availability_zone": "us-east-1c",
                                "cidr_block": "10.0.102.0/24",
                                "customer_owned_ipv4_pool": null,
                                "enable_dns64": false,
                                "enable_lni_at_device_index": null,
                                "enable_resource_name_dns_a_record_on_launch": false,
                                "enable_resource_name_dns_aaaa_record_on_launch": false,
                                "ipv6_cidr_block": null,
                                "ipv6_native": false,
                                "map_customer_owned_ip_on_launch": null,
                                "map_public_ip_on_launch": false,
                                "outpost_arn": null,
                                "tags": {
                                    "Name": "wordpress-dev-private-us-east-1c"
                                },
                                "tags_all": {
                                    "Name": "wordpress-dev-private-us-east-1c"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_subnet.public[0]",
                            "mode": "managed",
                            "type": "aws_subnet",
                            "name": "public",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 1,
                            "values": {
                                "assign_ipv6_address_on_creation": false,
                                "availability_zone": "us-east-1a",
                                "cidr_block": "10.0.0.0/24",
                                "customer_owned_ipv4_pool": null,
                                "enable_dns64": false,
                                "enable_lni_at_device_index": null,
                                "enable_resource_name_dns_a_record_on_launch": false,
                                "enable_resource_name_dns_aaaa_record_on_launch": false,
                                "ipv6_cidr_block": null,
                                "ipv6_native": false,
                                "map_customer_owned_ip_on_launch": null,
                                "map_public_ip_on_launch": true,
                                "outpost_arn": null,
                                "tags": {
                                    "Name": "wordpress-dev-public-us-east-1a"
                                },
                                "tags_all": {
                                    "Name": "wordpress-dev-public-us-east-1a"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_subnet.public[1]",
                            "mode": "managed",
                            "type": "aws_subnet",
                            "name": "public",
                            "index": 1,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 1,
                            "values": {
                                "assign_ipv6_address_on_creation": false,
                                "availability_zone": "us-east-1b",
                                "cidr_block": "10.0.1.0/24",
                                "customer_owned_ipv4_pool": null,
                                "enable_dns64": false,
                                "enable_lni_at_device_index": null,
                                "enable_resource_name_dns_a_record_on_launch": false,
                                "enable_resource_name_dns_aaaa_record_on_launch": false,
                                "ipv6_cidr_block": null,
                                "ipv6_native": false,
                                "map_customer_owned_ip_on_launch": null,
                                "map_public_ip_on_launch": true,
                                "outpost_arn": null,
                                "tags": {
                                    "Name": "wordpress-dev-public-us-east-1b"
                                },
                                "tags_all": {
                                    "Name": "wordpress-dev-public-us-east-1b"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_subnet.public[2]",
                            "mode": "managed",
                            "type": "aws_subnet",
                            "name": "public",
                            "index": 2,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 1,
                            "values": {
                                "assign_ipv6_address_on_creation": false,
                                "availability_zone": "us-east-1c",
                                "cidr_block": "10.0.2.0/24",
                                "customer_owned_ipv4_pool": null,
                                "enable_dns64": false,
                                "enable_lni_at_device_index": null,
                                "enable_resource_name_dns_a_record_on_launch": false,
                                "enable_resource_name_dns_aaaa_record_on_launch": false,
                                "ipv6_cidr_block": null,
                                "ipv6_native": false,
                                "map_customer_owned_ip_on_launch": null,
                                "map_public_ip_on_launch": true,
                                "outpost_arn": null,
                                "tags": {
                                    "Name": "wordpress-dev-public-us-east-1c"
                                },
                                "tags_all": {
                                    "Name": "wordpress-dev-public-us-east-1c"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.vpc.aws_vpc.this[0]",
                            "mode": "managed",
                            "type": "aws_vpc",
                            "name": "this",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 1,
                            "values": {
                                "assign_generated_ipv6_cidr_block": false,
                                "cidr_block": "10.0.0.0/16",
                                "enable_dns_hostnames": true,
                                "enable_dns_support": true,
                                "instance_tenancy": "default",
                                "ipv4_ipam_pool_id": null,
                                "ipv4_netmask_length": null,
                                "ipv6_ipam_pool_id": null,
                                "ipv6_netmask_length": null,
                                "tags": {
                                    "Name": "wordpress-dev"
                                },
                                "tags_all": {
                                    "Name": "wordpress-dev"
                                }
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        }
                    ],
                    "address": "module.vpc"
                }
            ]
        }
    },
    "resource_changes": [
        {
            "address": "aws_appautoscaling_policy.scale_down",
            "mode": "managed",
            "type": "aws_appautoscaling_policy",
            "name": "scale_down",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "name": "wordpress-ecs-scale-down-dev",
                    "policy_type": "StepScaling",
                    "resource_id": "service/wordpress-dev/wordpress-dev",
                    "scalable_dimension": "ecs:service:DesiredCount",
                    "service_namespace": "ecs",
                    "step_scaling_policy_configuration": [
                        {
                            "adjustment_type": "ChangeInCapacity",
                            "cooldown": 300,
                            "metric_aggregation_type": "Average",
                            "min_adjustment_magnitude": null,
                            "step_adjustment": [
                                {
                                    "metric_interval_lower_bound": "",
                                    "metric_interval_upper_bound": "0",
                                    "scaling_adjustment": -1
                                }
                            ]
                        }
                    ],
                    "target_tracking_scaling_policy_configuration": []
                },
                "after_unknown": {
                    "alarm_arns": true,
                    "arn": true,
                    "id": true,
                    "step_scaling_policy_configuration": [
                        {
                            "step_adjustment": [
                                {}
                            ]
                        }
                    ],
                    "target_tracking_scaling_policy_configuration": []
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "alarm_arns": [],
                    "step_scaling_policy_configuration": [
                        {
                            "step_adjustment": [
                                {}
                            ]
                        }
                    ],
                    "target_tracking_scaling_policy_configuration": []
                }
            }
        },
        {
            "address": "aws_appautoscaling_policy.scale_up",
            "mode": "managed",
            "type": "aws_appautoscaling_policy",
            "name": "scale_up",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "name": "wordpress-ecs-scale-up-dev",
                    "policy_type": "StepScaling",
                    "resource_id": "service/wordpress-dev/wordpress-dev",
                    "scalable_dimension": "ecs:service:DesiredCount",
                    "service_namespace": "ecs",
                    "step_scaling_policy_configuration": [
                        {
                            "adjustment_type": "ChangeInCapacity",
                            "cooldown": 60,
                            "metric_aggregation_type": "Average",
                            "min_adjustment_magnitude": null,
                            "step_adjustment": [
                                {
                                    "metric_interval_lower_bound": "0",
                                    "metric_interval_upper_bound": "",
                                    "scaling_adjustment": 1
                                }
                            ]
                        }
                    ],
                    "target_tracking_scaling_policy_configuration": []
                },
                "after_unknown": {
                    "alarm_arns": true,
                    "arn": true,
                    "id": true,
                    "step_scaling_policy_configuration": [
                        {
                            "step_adjustment": [
                                {}
                            ]
                        }
                    ],
                    "target_tracking_scaling_policy_configuration": []
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "alarm_arns": [],
                    "step_scaling_policy_configuration": [
                        {
                            "step_adjustment": [
                                {}
                            ]
                        }
                    ],
                    "target_tracking_scaling_policy_configuration": []
                }
            }
        },
        {
            "address": "aws_appautoscaling_target.this",
            "mode": "managed",
            "type": "aws_appautoscaling_target",
            "name": "this",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "max_capacity": 2,
                    "min_capacity": 1,
                    "resource_id": "service/wordpress-dev/wordpress-dev",
                    "scalable_dimension": "ecs:service:DesiredCount",
                    "service_namespace": "ecs",
                    "tags": null
                },
                "after_unknown": {
                    "arn": true,
                    "id": true,
                    "role_arn": true,
                    "tags_all": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags_all": {}
                }
            }
        },
        {
            "address": "aws_cloudwatch_log_group.wordpress",
            "mode": "managed",
            "type": "aws_cloudwatch_log_group",
            "name": "wordpress",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "kms_key_id": null,
                    "name": "/wordpress/dev/fg-task",
                    "retention_in_days": 1,
                    "skip_destroy": false,
                    "tags": null
                },
                "after_unknown": {
                    "arn": true,
                    "id": true,
                    "name_prefix": true,
                    "tags_all": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags_all": {}
                }
            }
        },
        {
            "address": "aws_cloudwatch_metric_alarm.cpu_utilization_high",
            "mode": "managed",
            "type": "aws_cloudwatch_metric_alarm",
            "name": "cpu_utilization_high",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "actions_enabled": true,
                    "alarm_description": null,
                    "alarm_name": "wordpress-high-CPU-utilization-ecs-dev",
                    "comparison_operator": "GreaterThanOrEqualToThreshold",
                    "datapoints_to_alarm": null,
                    "dimensions": {
                        "ClusterName": "wordpress-dev",
                        "ServiceName": "wordpress-dev"
                    },
                    "evaluation_periods": 1,
                    "extended_statistic": null,
                    "insufficient_data_actions": null,
                    "metric_name": "CPUUtilization",
                    "metric_query": [],
                    "namespace": "AWS/ECS",
                    "ok_actions": null,
                    "period": 60,
                    "statistic": "Average",
                    "tags": null,
                    "threshold": 75,
                    "threshold_metric_id": null,
                    "treat_missing_data": "missing",
                    "unit": null
                },
                "after_unknown": {
                    "alarm_actions": true,
                    "arn": true,
                    "dimensions": {},
                    "evaluate_low_sample_count_percentiles": true,
                    "id": true,
                    "metric_query": [],
                    "tags_all": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "alarm_actions": [],
                    "dimensions": {},
                    "metric_query": [],
                    "tags_all": {}
                }
            }
        },
        {
            "address": "aws_cloudwatch_metric_alarm.cpu_utilization_low",
            "mode": "managed",
            "type": "aws_cloudwatch_metric_alarm",
            "name": "cpu_utilization_low",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "actions_enabled": true,
                    "alarm_description": null,
                    "alarm_name": "wordpress-low-CPU-utilization-ecs-dev",
                    "comparison_operator": "LessThanThreshold",
                    "datapoints_to_alarm": null,
                    "dimensions": {
                        "ClusterName": "wordpress-dev",
                        "ServiceName": "wordpress-dev"
                    },
                    "evaluation_periods": 1,
                    "extended_statistic": null,
                    "insufficient_data_actions": null,
                    "metric_name": "CPUUtilization",
                    "metric_query": [],
                    "namespace": "AWS/ECS",
                    "ok_actions": null,
                    "period": 60,
                    "statistic": "Average",
                    "tags": null,
                    "threshold": 30,
                    "threshold_metric_id": null,
                    "treat_missing_data": "missing",
                    "unit": null
                },
                "after_unknown": {
                    "alarm_actions": true,
                    "arn": true,
                    "dimensions": {},
                    "evaluate_low_sample_count_percentiles": true,
                    "id": true,
                    "metric_query": [],
                    "tags_all": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "alarm_actions": [],
                    "dimensions": {},
                    "metric_query": [],
                    "tags_all": {}
                }
            }
        },
        {
            "address": "aws_db_subnet_group.this",
            "mode": "managed",
            "type": "aws_db_subnet_group",
            "name": "this",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "description": "Managed by Terraform",
                    "name": "wordpress-dev",
                    "tags": null
                },
                "after_unknown": {
                    "arn": true,
                    "id": true,
                    "name_prefix": true,
                    "subnet_ids": true,
                    "supported_network_types": true,
                    "tags_all": true,
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "subnet_ids": [],
                    "supported_network_types": [],
                    "tags_all": {}
                }
            }
        },
        {
            "address": "aws_ecs_cluster.this",
            "mode": "managed",
            "type": "aws_ecs_cluster",
            "name": "this",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "configuration": [],
                    "name": "wordpress-dev",
                    "service_connect_defaults": [],
                    "tags": null
                },
                "after_unknown": {
                    "arn": true,
                    "configuration": [],
                    "id": true,
                    "service_connect_defaults": [],
                    "setting": true,
                    "tags_all": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "configuration": [],
                    "service_connect_defaults": [],
                    "setting": [],
                    "tags_all": {}
                }
            }
        },
        {
            "address": "aws_ecs_service.this",
            "mode": "managed",
            "type": "aws_ecs_service",
            "name": "this",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "alarms": [],
                    "capacity_provider_strategy": [],
                    "deployment_circuit_breaker": [],
                    "deployment_controller": [],
                    "deployment_maximum_percent": 200,
                    "deployment_minimum_healthy_percent": 100,
                    "desired_count": 1,
                    "enable_ecs_managed_tags": false,
                    "enable_execute_command": false,
                    "force_new_deployment": null,
                    "health_check_grace_period_seconds": null,
                    "launch_type": "FARGATE",
                    "load_balancer": [
                        {
                            "container_name": "wordpress",
                            "container_port": 80,
                            "elb_name": ""
                        }
                    ],
                    "name": "wordpress-dev",
                    "network_configuration": [
                        {
                            "assign_public_ip": false
                        }
                    ],
                    "ordered_placement_strategy": [],
                    "placement_constraints": [],
                    "platform_version": "1.4.0",
                    "propagate_tags": null,
                    "scheduling_strategy": "REPLICA",
                    "service_connect_configuration": [],
                    "service_registries": [],
                    "tags": null,
                    "timeouts": null,
                    "wait_for_steady_state": false
                },
                "after_unknown": {
                    "alarms": [],
                    "capacity_provider_strategy": [],
                    "cluster": true,
                    "deployment_circuit_breaker": [],
                    "deployment_controller": [],
                    "iam_role": true,
                    "id": true,
                    "load_balancer": [
                        {
                            "target_group_arn": true
                        }
                    ],
                    "network_configuration": [
                        {
                            "security_groups": true,
                            "subnets": true
                        }
                    ],
                    "ordered_placement_strategy": [],
                    "placement_constraints": [],
                    "service_connect_configuration": [],
                    "service_registries": [],
                    "tags_all": true,
                    "task_definition": true,
                    "triggers": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "alarms": [],
                    "capacity_provider_strategy": [],
                    "deployment_circuit_breaker": [],
                    "deployment_controller": [],
                    "load_balancer": [
                        {}
                    ],
                    "network_configuration": [
                        {
                            "security_groups": [],
                            "subnets": []
                        }
                    ],
                    "ordered_placement_strategy": [],
                    "placement_constraints": [],
                    "service_connect_configuration": [],
                    "service_registries": [],
                    "tags_all": {},
                    "triggers": {}
                }
            }
        },
        {
            "address": "aws_ecs_task_definition.this",
            "mode": "managed",
            "type": "aws_ecs_task_definition",
            "name": "this",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "cpu": "1024",
                    "ephemeral_storage": [],
                    "family": "wordpress-dev",
                    "inference_accelerator": [],
                    "ipc_mode": null,
                    "memory": "2048",
                    "network_mode": "awsvpc",
                    "pid_mode": null,
                    "placement_constraints": [],
                    "proxy_configuration": [],
                    "requires_compatibilities": [
                        "FARGATE"
                    ],
                    "runtime_platform": [],
                    "skip_destroy": false,
                    "tags": null,
                    "volume": [
                        {
                            "docker_volume_configuration": [],
                            "efs_volume_configuration": [
                                {
                                    "authorization_config": [],
                                    "root_directory": "/",
                                    "transit_encryption": "",
                                    "transit_encryption_port": null
                                }
                            ],
                            "fsx_windows_file_server_volume_configuration": [],
                            "host_path": "",
                            "name": "efs"
                        }
                    ]
                },
                "after_unknown": {
                    "arn": true,
                    "arn_without_revision": true,
                    "container_definitions": true,
                    "ephemeral_storage": [],
                    "execution_role_arn": true,
                    "id": true,
                    "inference_accelerator": [],
                    "placement_constraints": [],
                    "proxy_configuration": [],
                    "requires_compatibilities": [
                        false
                    ],
                    "revision": true,
                    "runtime_platform": [],
                    "tags_all": true,
                    "task_role_arn": true,
                    "volume": [
                        {
                            "docker_volume_configuration": [],
                            "efs_volume_configuration": [
                                {
                                    "authorization_config": [],
                                    "file_system_id": true
                                }
                            ],
                            "fsx_windows_file_server_volume_configuration": []
                        }
                    ]
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "ephemeral_storage": [],
                    "inference_accelerator": [],
                    "placement_constraints": [],
                    "proxy_configuration": [],
                    "requires_compatibilities": [
                        false
                    ],
                    "runtime_platform": [],
                    "tags_all": {},
                    "volume": [
                        {
                            "docker_volume_configuration": [],
                            "efs_volume_configuration": [
                                {
                                    "authorization_config": []
                                }
                            ],
                            "fsx_windows_file_server_volume_configuration": []
                        }
                    ]
                }
            }
        },
        {
            "address": "aws_efs_file_system.this",
            "mode": "managed",
            "type": "aws_efs_file_system",
            "name": "this",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "creation_token": "wordpress-dev",
                    "lifecycle_policy": [],
                    "provisioned_throughput_in_mibps": null,
                    "tags": null,
                    "throughput_mode": "bursting"
                },
                "after_unknown": {
                    "arn": true,
                    "availability_zone_id": true,
                    "availability_zone_name": true,
                    "dns_name": true,
                    "encrypted": true,
                    "id": true,
                    "kms_key_id": true,
                    "lifecycle_policy": [],
                    "number_of_mount_targets": true,
                    "owner_id": true,
                    "performance_mode": true,
                    "size_in_bytes": true,
                    "tags_all": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "lifecycle_policy": [],
                    "size_in_bytes": [],
                    "tags_all": {}
                }
            }
        },
        {
            "address": "aws_efs_mount_target.this[0]",
            "mode": "managed",
            "type": "aws_efs_mount_target",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "timeouts": null
                },
                "after_unknown": {
                    "availability_zone_id": true,
                    "availability_zone_name": true,
                    "dns_name": true,
                    "file_system_arn": true,
                    "file_system_id": true,
                    "id": true,
                    "ip_address": true,
                    "mount_target_dns_name": true,
                    "network_interface_id": true,
                    "owner_id": true,
                    "security_groups": true,
                    "subnet_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "security_groups": []
                }
            }
        },
        {
            "address": "aws_efs_mount_target.this[1]",
            "mode": "managed",
            "type": "aws_efs_mount_target",
            "name": "this",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "timeouts": null
                },
                "after_unknown": {
                    "availability_zone_id": true,
                    "availability_zone_name": true,
                    "dns_name": true,
                    "file_system_arn": true,
                    "file_system_id": true,
                    "id": true,
                    "ip_address": true,
                    "mount_target_dns_name": true,
                    "network_interface_id": true,
                    "owner_id": true,
                    "security_groups": true,
                    "subnet_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "security_groups": []
                }
            }
        },
        {
            "address": "aws_efs_mount_target.this[2]",
            "mode": "managed",
            "type": "aws_efs_mount_target",
            "name": "this",
            "index": 2,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "timeouts": null
                },
                "after_unknown": {
                    "availability_zone_id": true,
                    "availability_zone_name": true,
                    "dns_name": true,
                    "file_system_arn": true,
                    "file_system_id": true,
                    "id": true,
                    "ip_address": true,
                    "mount_target_dns_name": true,
                    "network_interface_id": true,
                    "owner_id": true,
                    "security_groups": true,
                    "subnet_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "security_groups": []
                }
            }
        },
        {
            "address": "aws_iam_policy.task_execution_policy",
            "mode": "managed",
            "type": "aws_iam_policy",
            "name": "task_execution_policy",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "description": null,
                    "path": "/",
                    "policy": "{\"Statement\":[{\"Action\":[\"ecr:GetAuthorizationToken\",\"ecr:BatchCheckLayerAvailability\",\"ecr:GetDownloadUrlForLayer\",\"ecr:BatchGetImage\",\"logs:CreateLogStream\",\"logs:PutLogEvents\",\"ssm:GetParameters\",\"kms:Decrypt\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
                    "tags": null
                },
                "after_unknown": {
                    "arn": true,
                    "id": true,
                    "name": true,
                    "name_prefix": true,
                    "policy_id": true,
                    "tags_all": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags_all": {}
                }
            }
        },
        {
            "address": "aws_iam_policy.task_policy",
            "mode": "managed",
            "type": "aws_iam_policy",
            "name": "task_policy",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "description": null,
                    "path": "/",
                    "policy": "{\"Statement\":[{\"Action\":[\"elasticfilesystem:ClientMount\",\"elasticfilesystem:ClientWrite\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
                    "tags": null
                },
                "after_unknown": {
                    "arn": true,
                    "id": true,
                    "name": true,
                    "name_prefix": true,
                    "policy_id": true,
                    "tags_all": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags_all": {}
                }
            }
        },
        {
            "address": "aws_iam_role.task_execution_role",
            "mode": "managed",
            "type": "aws_iam_role",
            "name": "task_execution_role",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":[\"ecs-tasks.amazonaws.com\"]}}],\"Version\":\"2012-10-17\"}",
                    "description": null,
                    "force_detach_policies": false,
                    "max_session_duration": 3600,
                    "name": "wordpress-task-execution-role-dev",
                    "path": "/",
                    "permissions_boundary": null,
                    "tags": null
                },
                "after_unknown": {
                    "arn": true,
                    "create_date": true,
                    "id": true,
                    "inline_policy": true,
                    "managed_policy_arns": true,
                    "name_prefix": true,
                    "tags_all": true,
                    "unique_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "inline_policy": [],
                    "managed_policy_arns": [],
                    "tags_all": {}
                }
            }
        },
        {
            "address": "aws_iam_role.task_role",
            "mode": "managed",
            "type": "aws_iam_role",
            "name": "task_role",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":[\"ecs-tasks.amazonaws.com\"]}}],\"Version\":\"2012-10-17\"}",
                    "description": null,
                    "force_detach_policies": false,
                    "max_session_duration": 3600,
                    "name": "wordpress-task-role-dev",
                    "path": "/",
                    "permissions_boundary": null,
                    "tags": null
                },
                "after_unknown": {
                    "arn": true,
                    "create_date": true,
                    "id": true,
                    "inline_policy": true,
                    "managed_policy_arns": true,
                    "name_prefix": true,
                    "tags_all": true,
                    "unique_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "inline_policy": [],
                    "managed_policy_arns": [],
                    "tags_all": {}
                }
            }
        },
        {
            "address": "aws_iam_role_policy_attachment.task_execution_policy_attach",
            "mode": "managed",
            "type": "aws_iam_role_policy_attachment",
            "name": "task_execution_policy_attach",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "role": "wordpress-task-execution-role-dev"
                },
                "after_unknown": {
                    "id": true,
                    "policy_arn": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "aws_iam_role_policy_attachment.task_policy_attach",
            "mode": "managed",
            "type": "aws_iam_role_policy_attachment",
            "name": "task_policy_attach",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "role": "wordpress-task-role-dev"
                },
                "after_unknown": {
                    "id": true,
                    "policy_arn": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "aws_lb_target_group.this",
            "mode": "managed",
            "type": "aws_lb_target_group",
            "name": "this",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "connection_termination": false,
                    "deregistration_delay": "300",
                    "health_check": [
                        {
                            "enabled": true,
                            "healthy_threshold": 3,
                            "interval": 30,
                            "matcher": "200,302",
                            "path": "/",
                            "port": "traffic-port",
                            "protocol": "HTTP",
                            "unhealthy_threshold": 3
                        }
                    ],
                    "lambda_multi_value_headers_enabled": false,
                    "name": "wordpress-dev",
                    "name_prefix": null,
                    "port": 80,
                    "protocol": "HTTP",
                    "proxy_protocol_v2": false,
                    "slow_start": 0,
                    "tags": null,
                    "target_type": "ip"
                },
                "after_unknown": {
                    "arn": true,
                    "arn_suffix": true,
                    "health_check": [
                        {
                            "timeout": true
                        }
                    ],
                    "id": true,
                    "ip_address_type": true,
                    "load_balancing_algorithm_type": true,
                    "load_balancing_cross_zone_enabled": true,
                    "preserve_client_ip": true,
                    "protocol_version": true,
                    "stickiness": true,
                    "tags_all": true,
                    "target_failover": true,
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "health_check": [
                        {}
                    ],
                    "stickiness": [],
                    "tags_all": {},
                    "target_failover": []
                }
            }
        },
        {
            "address": "aws_rds_cluster.this",
            "mode": "managed",
            "type": "aws_rds_cluster",
            "name": "this",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allow_major_version_upgrade": null,
                    "availability_zones": [
                        "us-east-1a",
                        "us-east-1b",
                        "us-east-1c",
                        "us-east-1d",
                        "us-east-1e",
                        "us-east-1f"
                    ],
                    "backtrack_window": null,
                    "backup_retention_period": 1,
                    "cluster_identifier": "wordpress-dev",
                    "copy_tags_to_snapshot": false,
                    "database_name": "wordpress",
                    "db_cluster_instance_class": null,
                    "db_instance_parameter_group_name": null,
                    "db_subnet_group_name": "wordpress-dev",
                    "deletion_protection": null,
                    "enable_global_write_forwarding": false,
                    "enable_http_endpoint": false,
                    "enabled_cloudwatch_logs_exports": null,
                    "engine": "aurora-mysql",
                    "engine_mode": "serverless",
                    "engine_version": "5.6.10a",
                    "global_cluster_identifier": null,
                    "iam_database_authentication_enabled": null,
                    "iops": null,
                    "manage_master_user_password": null,
                    "master_password": "password",
                    "master_username": "user",
                    "preferred_backup_window": "07:00-09:00",
                    "replication_source_identifier": null,
                    "restore_to_point_in_time": [],
                    "s3_import": [],
                    "scaling_configuration": [
                        {
                            "auto_pause": true,
                            "max_capacity": 1,
                            "min_capacity": 1,
                            "seconds_until_auto_pause": 300,
                            "timeout_action": "RollbackCapacityChange"
                        }
                    ],
                    "serverlessv2_scaling_configuration": [],
                    "skip_final_snapshot": false,
                    "snapshot_identifier": null,
                    "source_region": null,
                    "tags": null,
                    "timeouts": null
                },
                "after_unknown": {
                    "allocated_storage": true,
                    "apply_immediately": true,
                    "arn": true,
                    "availability_zones": [
                        false,
                        false,
                        false,
                        false,
                        false,
                        false
                    ],
                    "cluster_identifier_prefix": true,
                    "cluster_members": true,
                    "cluster_resource_id": true,
                    "db_cluster_parameter_group_name": true,
                    "db_system_id": true,
                    "endpoint": true,
                    "engine_version_actual": true,
                    "final_snapshot_identifier": true,
                    "hosted_zone_id": true,
                    "iam_roles": true,
                    "id": true,
                    "kms_key_id": true,
                    "master_user_secret": true,
                    "master_user_secret_kms_key_id": true,
                    "network_type": true,
                    "port": true,
                    "preferred_maintenance_window": true,
                    "reader_endpoint": true,
                    "restore_to_point_in_time": [],
                    "s3_import": [],
                    "scaling_configuration": [
                        {}
                    ],
                    "serverlessv2_scaling_configuration": [],
                    "storage_encrypted": true,
                    "storage_type": true,
                    "tags_all": true,
                    "vpc_security_group_ids": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "availability_zones": [
                        false,
                        false,
                        false,
                        false,
                        false,
                        false
                    ],
                    "cluster_members": [],
                    "iam_roles": [],
                    "master_password": true,
                    "master_user_secret": [],
                    "restore_to_point_in_time": [],
                    "s3_import": [],
                    "scaling_configuration": [
                        {}
                    ],
                    "serverlessv2_scaling_configuration": [],
                    "tags_all": {},
                    "vpc_security_group_ids": []
                }
            }
        },
        {
            "address": "aws_security_group.alb",
            "mode": "managed",
            "type": "aws_security_group",
            "name": "alb",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "description": "Allow HTTPS inbound traffc",
                    "egress": [
                        {
                            "cidr_blocks": [
                                "0.0.0.0/0"
                            ],
                            "description": "",
                            "from_port": 0,
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "protocol": "-1",
                            "security_groups": [],
                            "self": false,
                            "to_port": 0
                        }
                    ],
                    "ingress": [
                        {
                            "cidr_blocks": [
                                "0.0.0.0/0"
                            ],
                            "description": "",
                            "from_port": 443,
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "protocol": "tcp",
                            "security_groups": [],
                            "self": false,
                            "to_port": 443
                        },
                        {
                            "cidr_blocks": [],
                            "description": "",
                            "from_port": 0,
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "protocol": "-1",
                            "security_groups": [],
                            "self": true,
                            "to_port": 0
                        }
                    ],
                    "name": "wordpress-alb-dev",
                    "revoke_rules_on_delete": false,
                    "tags": null,
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "egress": [
                        {
                            "cidr_blocks": [
                                false
                            ],
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "security_groups": []
                        }
                    ],
                    "id": true,
                    "ingress": [
                        {
                            "cidr_blocks": [
                                false
                            ],
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "security_groups": []
                        },
                        {
                            "cidr_blocks": [],
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "security_groups": []
                        }
                    ],
                    "name_prefix": true,
                    "owner_id": true,
                    "tags_all": true,
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "egress": [
                        {
                            "cidr_blocks": [
                                false
                            ],
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "security_groups": []
                        }
                    ],
                    "ingress": [
                        {
                            "cidr_blocks": [
                                false
                            ],
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "security_groups": []
                        },
                        {
                            "cidr_blocks": [],
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "security_groups": []
                        }
                    ],
                    "tags_all": {}
                }
            }
        },
        {
            "address": "aws_security_group.db",
            "mode": "managed",
            "type": "aws_security_group",
            "name": "db",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "description": "Managed by Terraform",
                    "egress": [
                        {
                            "cidr_blocks": [
                                "0.0.0.0/0"
                            ],
                            "description": "",
                            "from_port": 0,
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "protocol": "-1",
                            "security_groups": [],
                            "self": false,
                            "to_port": 0
                        }
                    ],
                    "ingress": [
                        {
                            "cidr_blocks": [],
                            "description": "",
                            "from_port": 3306,
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "protocol": "tcp",
                            "security_groups": [],
                            "self": true,
                            "to_port": 3306
                        }
                    ],
                    "name": "wordpress-db-dev",
                    "revoke_rules_on_delete": false,
                    "tags": null,
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "egress": [
                        {
                            "cidr_blocks": [
                                false
                            ],
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "security_groups": []
                        }
                    ],
                    "id": true,
                    "ingress": [
                        {
                            "cidr_blocks": [],
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "security_groups": []
                        }
                    ],
                    "name_prefix": true,
                    "owner_id": true,
                    "tags_all": true,
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "egress": [
                        {
                            "cidr_blocks": [
                                false
                            ],
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "security_groups": []
                        }
                    ],
                    "ingress": [
                        {
                            "cidr_blocks": [],
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "security_groups": []
                        }
                    ],
                    "tags_all": {}
                }
            }
        },
        {
            "address": "aws_security_group.efs",
            "mode": "managed",
            "type": "aws_security_group",
            "name": "efs",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "description": "Allow traffic ffrom self",
                    "egress": [
                        {
                            "cidr_blocks": [
                                "0.0.0.0/0"
                            ],
                            "description": "",
                            "from_port": 0,
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "protocol": "-1",
                            "security_groups": [],
                            "self": false,
                            "to_port": 0
                        }
                    ],
                    "ingress": [
                        {
                            "cidr_blocks": [],
                            "description": "",
                            "from_port": 2049,
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "protocol": "tcp",
                            "security_groups": [],
                            "self": true,
                            "to_port": 2049
                        }
                    ],
                    "name": "wordpress-efs-dev",
                    "revoke_rules_on_delete": false,
                    "tags": null,
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "egress": [
                        {
                            "cidr_blocks": [
                                false
                            ],
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "security_groups": []
                        }
                    ],
                    "id": true,
                    "ingress": [
                        {
                            "cidr_blocks": [],
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "security_groups": []
                        }
                    ],
                    "name_prefix": true,
                    "owner_id": true,
                    "tags_all": true,
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "egress": [
                        {
                            "cidr_blocks": [
                                false
                            ],
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "security_groups": []
                        }
                    ],
                    "ingress": [
                        {
                            "cidr_blocks": [],
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "security_groups": []
                        }
                    ],
                    "tags_all": {}
                }
            }
        },
        {
            "address": "aws_security_group.wordpress",
            "mode": "managed",
            "type": "aws_security_group",
            "name": "wordpress",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "description": "Fargate wordpress",
                    "egress": [
                        {
                            "cidr_blocks": [
                                "0.0.0.0/0"
                            ],
                            "description": "",
                            "from_port": 0,
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "protocol": "-1",
                            "security_groups": [],
                            "self": false,
                            "to_port": 0
                        }
                    ],
                    "ingress": [
                        {
                            "cidr_blocks": [],
                            "description": "",
                            "from_port": 0,
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "protocol": "tcp",
                            "self": false,
                            "to_port": 0
                        }
                    ],
                    "name": "wordpress-wordpress-dev",
                    "revoke_rules_on_delete": false,
                    "tags": null,
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "egress": [
                        {
                            "cidr_blocks": [
                                false
                            ],
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "security_groups": []
                        }
                    ],
                    "id": true,
                    "ingress": [
                        {
                            "cidr_blocks": [],
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "security_groups": true
                        }
                    ],
                    "name_prefix": true,
                    "owner_id": true,
                    "tags_all": true,
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "egress": [
                        {
                            "cidr_blocks": [
                                false
                            ],
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "security_groups": []
                        }
                    ],
                    "ingress": [
                        {
                            "cidr_blocks": [],
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "security_groups": []
                        }
                    ],
                    "tags_all": {}
                }
            }
        },
        {
            "address": "aws_ssm_parameter.db_master_password",
            "mode": "managed",
            "type": "aws_ssm_parameter",
            "name": "db_master_password",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allowed_pattern": null,
                    "description": null,
                    "name": "/wordpress/dev/db_master_password",
                    "overwrite": null,
                    "tags": null,
                    "type": "SecureString",
                    "value": "password"
                },
                "after_unknown": {
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tags_all": true,
                    "tier": true,
                    "version": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags_all": {},
                    "value": true
                }
            }
        },
        {
            "address": "aws_ssm_parameter.db_master_user",
            "mode": "managed",
            "type": "aws_ssm_parameter",
            "name": "db_master_user",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allowed_pattern": null,
                    "description": null,
                    "name": "/wordpress/dev/db_master_user",
                    "overwrite": null,
                    "tags": null,
                    "type": "SecureString",
                    "value": "user"
                },
                "after_unknown": {
                    "arn": true,
                    "data_type": true,
                    "id": true,
                    "insecure_value": true,
                    "key_id": true,
                    "tags_all": true,
                    "tier": true,
                    "version": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags_all": {},
                    "value": true
                }
            }
        },
        {
            "address": "random_string.snapshot_suffix",
            "mode": "managed",
            "type": "random_string",
            "name": "snapshot_suffix",
            "provider_name": "registry.terraform.io/hashicorp/random",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "keepers": null,
                    "length": 8,
                    "lower": true,
                    "min_lower": 0,
                    "min_numeric": 0,
                    "min_special": 0,
                    "min_upper": 0,
                    "number": true,
                    "numeric": true,
                    "override_special": null,
                    "special": false,
                    "upper": true
                },
                "after_unknown": {
                    "id": true,
                    "result": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.acm.aws_acm_certificate.this[0]",
            "module_address": "module.acm",
            "mode": "managed",
            "type": "aws_acm_certificate",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "certificate_authority_arn": null,
                    "certificate_body": null,
                    "certificate_chain": null,
                    "domain_name": "example.com",
                    "domain_validation_options": [
                        {
                            "domain_name": "example.com"
                        }
                    ],
                    "early_renewal_duration": null,
                    "options": [
                        {
                            "certificate_transparency_logging_preference": "ENABLED"
                        }
                    ],
                    "private_key": null,
                    "subject_alternative_names": [
                        "example.com"
                    ],
                    "tags": null,
                    "validation_method": "DNS",
                    "validation_option": []
                },
                "after_unknown": {
                    "arn": true,
                    "domain_validation_options": [
                        {
                            "resource_record_name": true,
                            "resource_record_type": true,
                            "resource_record_value": true
                        }
                    ],
                    "id": true,
                    "key_algorithm": true,
                    "not_after": true,
                    "not_before": true,
                    "options": [
                        {}
                    ],
                    "pending_renewal": true,
                    "renewal_eligibility": true,
                    "renewal_summary": true,
                    "status": true,
                    "subject_alternative_names": [
                        false
                    ],
                    "tags_all": true,
                    "type": true,
                    "validation_emails": true,
                    "validation_option": []
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "domain_validation_options": [
                        {}
                    ],
                    "options": [
                        {}
                    ],
                    "private_key": true,
                    "renewal_summary": [],
                    "subject_alternative_names": [
                        false
                    ],
                    "tags_all": {},
                    "validation_emails": [],
                    "validation_option": []
                }
            }
        },
        {
            "address": "module.acm_alb.aws_acm_certificate.this[0]",
            "module_address": "module.acm_alb",
            "mode": "managed",
            "type": "aws_acm_certificate",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "certificate_authority_arn": null,
                    "certificate_body": null,
                    "certificate_chain": null,
                    "domain_name": "example.com",
                    "domain_validation_options": [
                        {
                            "domain_name": "example.com"
                        }
                    ],
                    "early_renewal_duration": null,
                    "options": [
                        {
                            "certificate_transparency_logging_preference": "ENABLED"
                        }
                    ],
                    "private_key": null,
                    "subject_alternative_names": [
                        "example.com"
                    ],
                    "tags": null,
                    "validation_method": "DNS",
                    "validation_option": []
                },
                "after_unknown": {
                    "arn": true,
                    "domain_validation_options": [
                        {
                            "resource_record_name": true,
                            "resource_record_type": true,
                            "resource_record_value": true
                        }
                    ],
                    "id": true,
                    "key_algorithm": true,
                    "not_after": true,
                    "not_before": true,
                    "options": [
                        {}
                    ],
                    "pending_renewal": true,
                    "renewal_eligibility": true,
                    "renewal_summary": true,
                    "status": true,
                    "subject_alternative_names": [
                        false
                    ],
                    "tags_all": true,
                    "type": true,
                    "validation_emails": true,
                    "validation_option": []
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "domain_validation_options": [
                        {}
                    ],
                    "options": [
                        {}
                    ],
                    "private_key": true,
                    "renewal_summary": [],
                    "subject_alternative_names": [
                        false
                    ],
                    "tags_all": {},
                    "validation_emails": [],
                    "validation_option": []
                }
            }
        },
        {
            "address": "module.alb.aws_lb.this[0]",
            "module_address": "module.alb",
            "mode": "managed",
            "type": "aws_lb",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "access_logs": [],
                    "customer_owned_ipv4_pool": null,
                    "desync_mitigation_mode": "defensive",
                    "drop_invalid_header_fields": false,
                    "enable_cross_zone_load_balancing": null,
                    "enable_deletion_protection": false,
                    "enable_http2": true,
                    "enable_tls_version_and_cipher_suite_headers": false,
                    "enable_waf_fail_open": false,
                    "enable_xff_client_port": false,
                    "idle_timeout": 60,
                    "internal": false,
                    "ip_address_type": "ipv4",
                    "load_balancer_type": "application",
                    "name": "wordpress-dev",
                    "name_prefix": null,
                    "preserve_host_header": false,
                    "tags": {
                        "Name": "wordpress-dev"
                    },
                    "tags_all": {
                        "Name": "wordpress-dev"
                    },
                    "timeouts": {
                        "create": "10m",
                        "delete": "10m",
                        "update": "10m"
                    },
                    "xff_header_processing_mode": "append"
                },
                "after_unknown": {
                    "access_logs": [],
                    "arn": true,
                    "arn_suffix": true,
                    "dns_name": true,
                    "id": true,
                    "security_groups": true,
                    "subnet_mapping": true,
                    "subnets": true,
                    "tags": {},
                    "tags_all": {},
                    "timeouts": {},
                    "vpc_id": true,
                    "zone_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "access_logs": [],
                    "security_groups": [],
                    "subnet_mapping": [],
                    "subnets": [],
                    "tags": {},
                    "tags_all": {},
                    "timeouts": {}
                }
            }
        },
        {
            "address": "module.alb.aws_lb_target_group.main[0]",
            "module_address": "module.alb",
            "mode": "managed",
            "type": "aws_lb_target_group",
            "name": "main",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "connection_termination": false,
                    "deregistration_delay": "300",
                    "lambda_multi_value_headers_enabled": false,
                    "name": "wordpress-default-dev",
                    "name_prefix": null,
                    "port": 80,
                    "protocol": "HTTP",
                    "proxy_protocol_v2": false,
                    "slow_start": 0,
                    "tags": {
                        "Name": "wordpress-default-dev"
                    },
                    "tags_all": {
                        "Name": "wordpress-default-dev"
                    },
                    "target_type": "instance"
                },
                "after_unknown": {
                    "arn": true,
                    "arn_suffix": true,
                    "health_check": true,
                    "id": true,
                    "ip_address_type": true,
                    "load_balancing_algorithm_type": true,
                    "load_balancing_cross_zone_enabled": true,
                    "preserve_client_ip": true,
                    "protocol_version": true,
                    "stickiness": true,
                    "tags": {},
                    "tags_all": {},
                    "target_failover": true,
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "health_check": [],
                    "stickiness": [],
                    "tags": {},
                    "tags_all": {},
                    "target_failover": []
                }
            }
        },
        {
            "address": "module.vpc.aws_eip.nat[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_eip",
            "name": "nat",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "address": null,
                    "associate_with_private_ip": null,
                    "customer_owned_ipv4_pool": null,
                    "tags": {
                        "Name": "wordpress-dev-us-east-1a"
                    },
                    "tags_all": {
                        "Name": "wordpress-dev-us-east-1a"
                    },
                    "timeouts": null,
                    "vpc": true
                },
                "after_unknown": {
                    "allocation_id": true,
                    "association_id": true,
                    "carrier_ip": true,
                    "customer_owned_ip": true,
                    "domain": true,
                    "id": true,
                    "instance": true,
                    "network_border_group": true,
                    "network_interface": true,
                    "private_dns": true,
                    "private_ip": true,
                    "public_dns": true,
                    "public_ip": true,
                    "public_ipv4_pool": true,
                    "tags": {},
                    "tags_all": {}
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_eip.nat[1]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_eip",
            "name": "nat",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "address": null,
                    "associate_with_private_ip": null,
                    "customer_owned_ipv4_pool": null,
                    "tags": {
                        "Name": "wordpress-dev-us-east-1b"
                    },
                    "tags_all": {
                        "Name": "wordpress-dev-us-east-1b"
                    },
                    "timeouts": null,
                    "vpc": true
                },
                "after_unknown": {
                    "allocation_id": true,
                    "association_id": true,
                    "carrier_ip": true,
                    "customer_owned_ip": true,
                    "domain": true,
                    "id": true,
                    "instance": true,
                    "network_border_group": true,
                    "network_interface": true,
                    "private_dns": true,
                    "private_ip": true,
                    "public_dns": true,
                    "public_ip": true,
                    "public_ipv4_pool": true,
                    "tags": {},
                    "tags_all": {}
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_eip.nat[2]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_eip",
            "name": "nat",
            "index": 2,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "address": null,
                    "associate_with_private_ip": null,
                    "customer_owned_ipv4_pool": null,
                    "tags": {
                        "Name": "wordpress-dev-us-east-1c"
                    },
                    "tags_all": {
                        "Name": "wordpress-dev-us-east-1c"
                    },
                    "timeouts": null,
                    "vpc": true
                },
                "after_unknown": {
                    "allocation_id": true,
                    "association_id": true,
                    "carrier_ip": true,
                    "customer_owned_ip": true,
                    "domain": true,
                    "id": true,
                    "instance": true,
                    "network_border_group": true,
                    "network_interface": true,
                    "private_dns": true,
                    "private_ip": true,
                    "public_dns": true,
                    "public_ip": true,
                    "public_ipv4_pool": true,
                    "tags": {},
                    "tags_all": {}
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_internet_gateway.this[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_internet_gateway",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "tags": {
                        "Name": "wordpress-dev"
                    },
                    "tags_all": {
                        "Name": "wordpress-dev"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "id": true,
                    "owner_id": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_nat_gateway.this[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_nat_gateway",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "connectivity_type": "public",
                    "secondary_allocation_ids": null,
                    "tags": {
                        "Name": "wordpress-dev-us-east-1a"
                    },
                    "tags_all": {
                        "Name": "wordpress-dev-us-east-1a"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "allocation_id": true,
                    "association_id": true,
                    "id": true,
                    "network_interface_id": true,
                    "private_ip": true,
                    "public_ip": true,
                    "secondary_private_ip_address_count": true,
                    "secondary_private_ip_addresses": true,
                    "subnet_id": true,
                    "tags": {},
                    "tags_all": {}
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "secondary_private_ip_addresses": [],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_nat_gateway.this[1]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_nat_gateway",
            "name": "this",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "connectivity_type": "public",
                    "secondary_allocation_ids": null,
                    "tags": {
                        "Name": "wordpress-dev-us-east-1b"
                    },
                    "tags_all": {
                        "Name": "wordpress-dev-us-east-1b"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "allocation_id": true,
                    "association_id": true,
                    "id": true,
                    "network_interface_id": true,
                    "private_ip": true,
                    "public_ip": true,
                    "secondary_private_ip_address_count": true,
                    "secondary_private_ip_addresses": true,
                    "subnet_id": true,
                    "tags": {},
                    "tags_all": {}
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "secondary_private_ip_addresses": [],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_nat_gateway.this[2]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_nat_gateway",
            "name": "this",
            "index": 2,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "connectivity_type": "public",
                    "secondary_allocation_ids": null,
                    "tags": {
                        "Name": "wordpress-dev-us-east-1c"
                    },
                    "tags_all": {
                        "Name": "wordpress-dev-us-east-1c"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "allocation_id": true,
                    "association_id": true,
                    "id": true,
                    "network_interface_id": true,
                    "private_ip": true,
                    "public_ip": true,
                    "secondary_private_ip_address_count": true,
                    "secondary_private_ip_addresses": true,
                    "subnet_id": true,
                    "tags": {},
                    "tags_all": {}
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "secondary_private_ip_addresses": [],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_route.private_nat_gateway[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route",
            "name": "private_nat_gateway",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "carrier_gateway_id": null,
                    "core_network_arn": null,
                    "destination_cidr_block": "0.0.0.0/0",
                    "destination_ipv6_cidr_block": null,
                    "destination_prefix_list_id": null,
                    "egress_only_gateway_id": null,
                    "gateway_id": null,
                    "local_gateway_id": null,
                    "timeouts": {
                        "create": "5m",
                        "delete": null,
                        "update": null
                    },
                    "transit_gateway_id": null,
                    "vpc_endpoint_id": null,
                    "vpc_peering_connection_id": null
                },
                "after_unknown": {
                    "id": true,
                    "instance_id": true,
                    "instance_owner_id": true,
                    "nat_gateway_id": true,
                    "network_interface_id": true,
                    "origin": true,
                    "route_table_id": true,
                    "state": true,
                    "timeouts": {}
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "timeouts": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_route.private_nat_gateway[1]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route",
            "name": "private_nat_gateway",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "carrier_gateway_id": null,
                    "core_network_arn": null,
                    "destination_cidr_block": "0.0.0.0/0",
                    "destination_ipv6_cidr_block": null,
                    "destination_prefix_list_id": null,
                    "egress_only_gateway_id": null,
                    "gateway_id": null,
                    "local_gateway_id": null,
                    "timeouts": {
                        "create": "5m",
                        "delete": null,
                        "update": null
                    },
                    "transit_gateway_id": null,
                    "vpc_endpoint_id": null,
                    "vpc_peering_connection_id": null
                },
                "after_unknown": {
                    "id": true,
                    "instance_id": true,
                    "instance_owner_id": true,
                    "nat_gateway_id": true,
                    "network_interface_id": true,
                    "origin": true,
                    "route_table_id": true,
                    "state": true,
                    "timeouts": {}
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "timeouts": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_route.private_nat_gateway[2]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route",
            "name": "private_nat_gateway",
            "index": 2,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "carrier_gateway_id": null,
                    "core_network_arn": null,
                    "destination_cidr_block": "0.0.0.0/0",
                    "destination_ipv6_cidr_block": null,
                    "destination_prefix_list_id": null,
                    "egress_only_gateway_id": null,
                    "gateway_id": null,
                    "local_gateway_id": null,
                    "timeouts": {
                        "create": "5m",
                        "delete": null,
                        "update": null
                    },
                    "transit_gateway_id": null,
                    "vpc_endpoint_id": null,
                    "vpc_peering_connection_id": null
                },
                "after_unknown": {
                    "id": true,
                    "instance_id": true,
                    "instance_owner_id": true,
                    "nat_gateway_id": true,
                    "network_interface_id": true,
                    "origin": true,
                    "route_table_id": true,
                    "state": true,
                    "timeouts": {}
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "timeouts": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_route.public_internet_gateway[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route",
            "name": "public_internet_gateway",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "carrier_gateway_id": null,
                    "core_network_arn": null,
                    "destination_cidr_block": "0.0.0.0/0",
                    "destination_ipv6_cidr_block": null,
                    "destination_prefix_list_id": null,
                    "egress_only_gateway_id": null,
                    "local_gateway_id": null,
                    "nat_gateway_id": null,
                    "timeouts": {
                        "create": "5m",
                        "delete": null,
                        "update": null
                    },
                    "transit_gateway_id": null,
                    "vpc_endpoint_id": null,
                    "vpc_peering_connection_id": null
                },
                "after_unknown": {
                    "gateway_id": true,
                    "id": true,
                    "instance_id": true,
                    "instance_owner_id": true,
                    "network_interface_id": true,
                    "origin": true,
                    "route_table_id": true,
                    "state": true,
                    "timeouts": {}
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "timeouts": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_route_table.private[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table",
            "name": "private",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "tags": {
                        "Name": "wordpress-dev-private-us-east-1a"
                    },
                    "tags_all": {
                        "Name": "wordpress-dev-private-us-east-1a"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "id": true,
                    "owner_id": true,
                    "propagating_vgws": true,
                    "route": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "propagating_vgws": [],
                    "route": [],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_route_table.private[1]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table",
            "name": "private",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "tags": {
                        "Name": "wordpress-dev-private-us-east-1b"
                    },
                    "tags_all": {
                        "Name": "wordpress-dev-private-us-east-1b"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "id": true,
                    "owner_id": true,
                    "propagating_vgws": true,
                    "route": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "propagating_vgws": [],
                    "route": [],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_route_table.private[2]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table",
            "name": "private",
            "index": 2,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "tags": {
                        "Name": "wordpress-dev-private-us-east-1c"
                    },
                    "tags_all": {
                        "Name": "wordpress-dev-private-us-east-1c"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "id": true,
                    "owner_id": true,
                    "propagating_vgws": true,
                    "route": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "propagating_vgws": [],
                    "route": [],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_route_table.public[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table",
            "name": "public",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "tags": {
                        "Name": "wordpress-dev-public"
                    },
                    "tags_all": {
                        "Name": "wordpress-dev-public"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "id": true,
                    "owner_id": true,
                    "propagating_vgws": true,
                    "route": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "propagating_vgws": [],
                    "route": [],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_route_table_association.private[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table_association",
            "name": "private",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "gateway_id": null,
                    "timeouts": null
                },
                "after_unknown": {
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.vpc.aws_route_table_association.private[1]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table_association",
            "name": "private",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "gateway_id": null,
                    "timeouts": null
                },
                "after_unknown": {
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.vpc.aws_route_table_association.private[2]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table_association",
            "name": "private",
            "index": 2,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "gateway_id": null,
                    "timeouts": null
                },
                "after_unknown": {
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.vpc.aws_route_table_association.public[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table_association",
            "name": "public",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "gateway_id": null,
                    "timeouts": null
                },
                "after_unknown": {
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.vpc.aws_route_table_association.public[1]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table_association",
            "name": "public",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "gateway_id": null,
                    "timeouts": null
                },
                "after_unknown": {
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.vpc.aws_route_table_association.public[2]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_route_table_association",
            "name": "public",
            "index": 2,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "gateway_id": null,
                    "timeouts": null
                },
                "after_unknown": {
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.vpc.aws_subnet.private[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_subnet",
            "name": "private",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "us-east-1a",
                    "cidr_block": "10.0.100.0/24",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_lni_at_device_index": null,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": false,
                    "outpost_arn": null,
                    "tags": {
                        "Name": "wordpress-dev-private-us-east-1a"
                    },
                    "tags_all": {
                        "Name": "wordpress-dev-private-us-east-1a"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_subnet.private[1]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_subnet",
            "name": "private",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "us-east-1b",
                    "cidr_block": "10.0.101.0/24",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_lni_at_device_index": null,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": false,
                    "outpost_arn": null,
                    "tags": {
                        "Name": "wordpress-dev-private-us-east-1b"
                    },
                    "tags_all": {
                        "Name": "wordpress-dev-private-us-east-1b"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_subnet.private[2]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_subnet",
            "name": "private",
            "index": 2,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "us-east-1c",
                    "cidr_block": "10.0.102.0/24",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_lni_at_device_index": null,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": false,
                    "outpost_arn": null,
                    "tags": {
                        "Name": "wordpress-dev-private-us-east-1c"
                    },
                    "tags_all": {
                        "Name": "wordpress-dev-private-us-east-1c"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_subnet.public[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_subnet",
            "name": "public",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "us-east-1a",
                    "cidr_block": "10.0.0.0/24",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_lni_at_device_index": null,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": true,
                    "outpost_arn": null,
                    "tags": {
                        "Name": "wordpress-dev-public-us-east-1a"
                    },
                    "tags_all": {
                        "Name": "wordpress-dev-public-us-east-1a"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_subnet.public[1]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_subnet",
            "name": "public",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "us-east-1b",
                    "cidr_block": "10.0.1.0/24",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_lni_at_device_index": null,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": true,
                    "outpost_arn": null,
                    "tags": {
                        "Name": "wordpress-dev-public-us-east-1b"
                    },
                    "tags_all": {
                        "Name": "wordpress-dev-public-us-east-1b"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_subnet.public[2]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_subnet",
            "name": "public",
            "index": 2,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "us-east-1c",
                    "cidr_block": "10.0.2.0/24",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_lni_at_device_index": null,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": true,
                    "outpost_arn": null,
                    "tags": {
                        "Name": "wordpress-dev-public-us-east-1c"
                    },
                    "tags_all": {
                        "Name": "wordpress-dev-public-us-east-1c"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.vpc.aws_vpc.this[0]",
            "module_address": "module.vpc",
            "mode": "managed",
            "type": "aws_vpc",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_generated_ipv6_cidr_block": false,
                    "cidr_block": "10.0.0.0/16",
                    "enable_dns_hostnames": true,
                    "enable_dns_support": true,
                    "instance_tenancy": "default",
                    "ipv4_ipam_pool_id": null,
                    "ipv4_netmask_length": null,
                    "ipv6_ipam_pool_id": null,
                    "ipv6_netmask_length": null,
                    "tags": {
                        "Name": "wordpress-dev"
                    },
                    "tags_all": {
                        "Name": "wordpress-dev"
                    }
                },
                "after_unknown": {
                    "arn": true,
                    "default_network_acl_id": true,
                    "default_route_table_id": true,
                    "default_security_group_id": true,
                    "dhcp_options_id": true,
                    "enable_network_address_usage_metrics": true,
                    "id": true,
                    "ipv6_association_id": true,
                    "ipv6_cidr_block": true,
                    "ipv6_cidr_block_network_border_group": true,
                    "main_route_table_id": true,
                    "owner_id": true,
                    "tags": {},
                    "tags_all": {}
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        }
    ],
    "prior_state": {
        "format_version": "1.0",
        "terraform_version": "1.5.6",
        "values": {
            "root_module": {
                "resources": [
                    {
                        "address": "data.aws_availability_zones.this",
                        "mode": "data",
                        "type": "aws_availability_zones",
                        "name": "this",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                            "all_availability_zones": null,
                            "exclude_names": null,
                            "exclude_zone_ids": null,
                            "filter": null,
                            "group_names": [
                                "us-east-1"
                            ],
                            "id": "us-east-1",
                            "names": [
                                "us-east-1a",
                                "us-east-1b",
                                "us-east-1c",
                                "us-east-1d",
                                "us-east-1e",
                                "us-east-1f"
                            ],
                            "state": null,
                            "timeouts": null,
                            "zone_ids": [
                                "use1-az4",
                                "use1-az6",
                                "use1-az1",
                                "use1-az2",
                                "use1-az3",
                                "use1-az5"
                            ]
                        },
                        "sensitive_values": {
                            "group_names": [
                                false
                            ],
                            "names": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ],
                            "zone_ids": [
                                false,
                                false,
                                false,
                                false,
                                false,
                                false
                            ]
                        }
                    },
                    {
                        "address": "data.aws_caller_identity.current",
                        "mode": "data",
                        "type": "aws_caller_identity",
                        "name": "current",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                            "account_id": "166659698090",
                            "arn": "arn:aws:iam::166659698090:user/neogeno",
                            "id": "166659698090",
                            "user_id": "AIDAI2NDKK5CQYAAHJHTM"
                        },
                        "sensitive_values": {}
                    },
                    {
                        "address": "data.aws_region.current",
                        "mode": "data",
                        "type": "aws_region",
                        "name": "current",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                            "description": "US East (N. Virginia)",
                            "endpoint": "ec2.us-east-1.amazonaws.com",
                            "id": "us-east-1",
                            "name": "us-east-1"
                        },
                        "sensitive_values": {}
                    }
                ]
            }
        }
    },
    "configuration": {
        "provider_config": {
            "aws": {
                "name": "aws",
                "full_name": "registry.terraform.io/hashicorp/aws"
            },
            "aws.us_east_1": {
                "name": "aws",
                "full_name": "registry.terraform.io/hashicorp/aws",
                "alias": "us_east_1",
                "expressions": {
                    "region": {
                        "constant_value": "us-east-1"
                    }
                }
            },
            "random": {
                "name": "random",
                "full_name": "registry.terraform.io/hashicorp/random"
            }
        },
        "root_module": {
            "resources": [
                {
                    "address": "aws_appautoscaling_policy.scale_down",
                    "mode": "managed",
                    "type": "aws_appautoscaling_policy",
                    "name": "scale_down",
                    "provider_config_key": "aws",
                    "expressions": {
                        "name": {
                            "references": [
                                "var.prefix",
                                "var.environment"
                            ]
                        },
                        "policy_type": {
                            "constant_value": "StepScaling"
                        },
                        "resource_id": {
                            "references": [
                                "aws_appautoscaling_target.this.resource_id",
                                "aws_appautoscaling_target.this"
                            ]
                        },
                        "scalable_dimension": {
                            "references": [
                                "aws_appautoscaling_target.this.scalable_dimension",
                                "aws_appautoscaling_target.this"
                            ]
                        },
                        "service_namespace": {
                            "references": [
                                "aws_appautoscaling_target.this.service_namespace",
                                "aws_appautoscaling_target.this"
                            ]
                        },
                        "step_scaling_policy_configuration": [
                            {
                                "adjustment_type": {
                                    "constant_value": "ChangeInCapacity"
                                },
                                "cooldown": {
                                    "references": [
                                        "var.scaling_down_cooldown"
                                    ]
                                },
                                "metric_aggregation_type": {
                                    "constant_value": "Average"
                                },
                                "step_adjustment": [
                                    {
                                        "metric_interval_upper_bound": {
                                            "constant_value": 0
                                        },
                                        "scaling_adjustment": {
                                            "references": [
                                                "var.scaling_down_adjustment"
                                            ]
                                        }
                                    }
                                ]
                            }
                        ]
                    },
                    "schema_version": 0
                },
                {
                    "address": "aws_appautoscaling_policy.scale_up",
                    "mode": "managed",
                    "type": "aws_appautoscaling_policy",
                    "name": "scale_up",
                    "provider_config_key": "aws",
                    "expressions": {
                        "name": {
                            "references": [
                                "var.prefix",
                                "var.environment"
                            ]
                        },
                        "policy_type": {
                            "constant_value": "StepScaling"
                        },
                        "resource_id": {
                            "references": [
                                "aws_appautoscaling_target.this.resource_id",
                                "aws_appautoscaling_target.this"
                            ]
                        },
                        "scalable_dimension": {
                            "references": [
                                "aws_appautoscaling_target.this.scalable_dimension",
                                "aws_appautoscaling_target.this"
                            ]
                        },
                        "service_namespace": {
                            "references": [
                                "aws_appautoscaling_target.this.service_namespace",
                                "aws_appautoscaling_target.this"
                            ]
                        },
                        "step_scaling_policy_configuration": [
                            {
                                "adjustment_type": {
                                    "constant_value": "ChangeInCapacity"
                                },
                                "cooldown": {
                                    "references": [
                                        "var.scaling_up_cooldown"
                                    ]
                                },
                                "metric_aggregation_type": {
                                    "constant_value": "Average"
                                },
                                "step_adjustment": [
                                    {
                                        "metric_interval_lower_bound": {
                                            "constant_value": 0
                                        },
                                        "scaling_adjustment": {
                                            "references": [
                                                "var.scaling_up_adjustment"
                                            ]
                                        }
                                    }
                                ]
                            }
                        ]
                    },
                    "schema_version": 0
                },
                {
                    "address": "aws_appautoscaling_target.this",
                    "mode": "managed",
                    "type": "aws_appautoscaling_target",
                    "name": "this",
                    "provider_config_key": "aws",
                    "expressions": {
                        "max_capacity": {
                            "references": [
                                "var.max_task"
                            ]
                        },
                        "min_capacity": {
                            "references": [
                                "var.min_task"
                            ]
                        },
                        "resource_id": {
                            "references": [
                                "aws_ecs_cluster.this.name",
                                "aws_ecs_cluster.this",
                                "aws_ecs_service.this.name",
                                "aws_ecs_service.this"
                            ]
                        },
                        "scalable_dimension": {
                            "constant_value": "ecs:service:DesiredCount"
                        },
                        "service_namespace": {
                            "constant_value": "ecs"
                        }
                    },
                    "schema_version": 0
                },
                {
                    "address": "aws_cloudfront_distribution.this",
                    "mode": "managed",
                    "type": "aws_cloudfront_distribution",
                    "name": "this",
                    "provider_config_key": "aws",
                    "expressions": {
                        "aliases": {
                            "references": [
                                "var.site_domain"
                            ]
                        },
                        "comment": {
                            "references": [
                                "var.site_domain"
                            ]
                        },
                        "custom_error_response": [
                            {
                                "error_caching_min_ttl": {
                                    "references": [
                                        "var.error_ttl"
                                    ]
                                },
                                "error_code": {
                                    "constant_value": 400
                                }
                            },
                            {
                                "error_caching_min_ttl": {
                                    "references": [
                                        "var.error_ttl"
                                    ]
                                },
                                "error_code": {
                                    "constant_value": 403
                                }
                            },
                            {
                                "error_caching_min_ttl": {
                                    "references": [
                                        "var.error_ttl"
                                    ]
                                },
                                "error_code": {
                                    "constant_value": 404
                                }
                            },
                            {
                                "error_caching_min_ttl": {
                                    "references": [
                                        "var.error_ttl"
                                    ]
                                },
                                "error_code": {
                                    "constant_value": 405
                                }
                            }
                        ],
                        "default_cache_behavior": [
                            {
                                "allowed_methods": {
                                    "constant_value": [
                                        "DELETE",
                                        "GET",
                                        "HEAD",
                                        "OPTIONS",
                                        "PATCH",
                                        "POST",
                                        "PUT"
                                    ]
                                },
                                "cached_methods": {
                                    "constant_value": [
                                        "GET",
                                        "HEAD",
                                        "OPTIONS"
                                    ]
                                },
                                "compress": {
                                    "constant_value": true
                                },
                                "default_ttl": {
                                    "constant_value": 0
                                },
                                "forwarded_values": [
                                    {
                                        "cookies": [
                                            {
                                                "forward": {
                                                    "constant_value": "all"
                                                }
                                            }
                                        ],
                                        "headers": {
                                            "constant_value": [
                                                "*"
                                            ]
                                        },
                                        "query_string": {
                                            "constant_value": true
                                        }
                                    }
                                ],
                                "max_ttl": {
                                    "constant_value": 0
                                },
                                "min_ttl": {
                                    "constant_value": 0
                                },
                                "target_origin_id": {
                                    "constant_value": "alb"
                                },
                                "viewer_protocol_policy": {
                                    "constant_value": "redirect-to-https"
                                }
                            }
                        ],
                        "enabled": {
                            "constant_value": true
                        },
                        "is_ipv6_enabled": {
                            "constant_value": true
                        },
                        "ordered_cache_behavior": [
                            {
                                "allowed_methods": {
                                    "constant_value": [
                                        "DELETE",
                                        "GET",
                                        "HEAD",
                                        "OPTIONS",
                                        "PATCH",
                                        "POST",
                                        "PUT"
                                    ]
                                },
                                "cached_methods": {
                                    "constant_value": [
                                        "GET",
                                        "HEAD",
                                        "OPTIONS"
                                    ]
                                },
                                "compress": {
                                    "constant_value": true
                                },
                                "default_ttl": {
                                    "constant_value": 900
                                },
                                "forwarded_values": [
                                    {
                                        "cookies": [
                                            {
                                                "forward": {
                                                    "constant_value": "all"
                                                }
                                            }
                                        ],
                                        "headers": {
                                            "constant_value": [
                                                "Host"
                                            ]
                                        },
                                        "query_string": {
                                            "constant_value": true
                                        }
                                    }
                                ],
                                "max_ttl": {
                                    "constant_value": 900
                                },
                                "min_ttl": {
                                    "constant_value": 900
                                },
                                "path_pattern": {
                                    "constant_value": "wp-content/*"
                                },
                                "target_origin_id": {
                                    "constant_value": "alb"
                                },
                                "viewer_protocol_policy": {
                                    "constant_value": "redirect-to-https"
                                }
                            },
                            {
                                "allowed_methods": {
                                    "constant_value": [
                                        "DELETE",
                                        "GET",
                                        "HEAD",
                                        "OPTIONS",
                                        "PATCH",
                                        "POST",
                                        "PUT"
                                    ]
                                },
                                "cached_methods": {
                                    "constant_value": [
                                        "GET",
                                        "HEAD",
                                        "OPTIONS"
                                    ]
                                },
                                "compress": {
                                    "constant_value": true
                                },
                                "default_ttl": {
                                    "constant_value": 3600
                                },
                                "forwarded_values": [
                                    {
                                        "cookies": [
                                            {
                                                "forward": {
                                                    "constant_value": "all"
                                                }
                                            }
                                        ],
                                        "headers": {
                                            "constant_value": [
                                                "Host"
                                            ]
                                        },
                                        "query_string": {
                                            "constant_value": true
                                        }
                                    }
                                ],
                                "max_ttl": {
                                    "constant_value": 3600
                                },
                                "min_ttl": {
                                    "constant_value": 3600
                                },
                                "path_pattern": {
                                    "constant_value": "wp-includes/*"
                                },
                                "target_origin_id": {
                                    "constant_value": "alb"
                                },
                                "viewer_protocol_policy": {
                                    "constant_value": "redirect-to-https"
                                }
                            }
                        ],
                        "origin": [
                            {
                                "custom_origin_config": [
                                    {
                                        "http_port": {
                                            "constant_value": 80
                                        },
                                        "https_port": {
                                            "constant_value": 443
                                        },
                                        "origin_protocol_policy": {
                                            "constant_value": "https-only"
                                        },
                                        "origin_ssl_protocols": {
                                            "constant_value": [
                                                "TLSv1",
                                                "TLSv1.1",
                                                "TLSv1.2"
                                            ]
                                        }
                                    }
                                ],
                                "domain_name": {
                                    "references": [
                                        "var.public_alb_domain"
                                    ]
                                },
                                "origin_id": {
                                    "constant_value": "alb"
                                }
                            }
                        ],
                        "price_class": {
                            "references": [
                                "var.cf_price_class"
                            ]
                        },
                        "restrictions": [
                            {
                                "geo_restriction": [
                                    {
                                        "restriction_type": {
                                            "constant_value": "none"
                                        }
                                    }
                                ]
                            }
                        ],
                        "tags": {
                            "references": [
                                "var.tags"
                            ]
                        },
                        "viewer_certificate": [
                            {
                                "acm_certificate_arn": {
                                    "references": [
                                        "module.acm.this_acm_certificate_arn",
                                        "module.acm"
                                    ]
                                },
                                "minimum_protocol_version": {
                                    "constant_value": "TLSv1.1_2016"
                                },
                                "ssl_support_method": {
                                    "constant_value": "sni-only"
                                }
                            }
                        ]
                    },
                    "schema_version": 1,
                    "depends_on": [
                        "aws_ecs_service.this"
                    ]
                },
                {
                    "address": "aws_cloudwatch_log_group.wordpress",
                    "mode": "managed",
                    "type": "aws_cloudwatch_log_group",
                    "name": "wordpress",
                    "provider_config_key": "aws",
                    "expressions": {
                        "name": {
                            "references": [
                                "var.prefix",
                                "var.environment"
                            ]
                        },
                        "retention_in_days": {
                            "references": [
                                "var.log_retention_in_days"
                            ]
                        },
                        "tags": {
                            "references": [
                                "var.tags"
                            ]
                        }
                    },
                    "schema_version": 0
                },
                {
                    "address": "aws_cloudwatch_metric_alarm.cpu_utilization_high",
                    "mode": "managed",
                    "type": "aws_cloudwatch_metric_alarm",
                    "name": "cpu_utilization_high",
                    "provider_config_key": "aws",
                    "expressions": {
                        "alarm_actions": {
                            "references": [
                                "aws_appautoscaling_policy.scale_up.arn",
                                "aws_appautoscaling_policy.scale_up"
                            ]
                        },
                        "alarm_name": {
                            "references": [
                                "var.prefix",
                                "var.environment"
                            ]
                        },
                        "comparison_operator": {
                            "constant_value": "GreaterThanOrEqualToThreshold"
                        },
                        "dimensions": {
                            "references": [
                                "aws_ecs_cluster.this.name",
                                "aws_ecs_cluster.this",
                                "aws_ecs_service.this.name",
                                "aws_ecs_service.this"
                            ]
                        },
                        "evaluation_periods": {
                            "constant_value": "1"
                        },
                        "metric_name": {
                            "constant_value": "CPUUtilization"
                        },
                        "namespace": {
                            "constant_value": "AWS/ECS"
                        },
                        "period": {
                            "constant_value": "60"
                        },
                        "statistic": {
                            "constant_value": "Average"
                        },
                        "threshold": {
                            "references": [
                                "var.task_cpu_high_threshold"
                            ]
                        }
                    },
                    "schema_version": 1
                },
                {
                    "address": "aws_cloudwatch_metric_alarm.cpu_utilization_low",
                    "mode": "managed",
                    "type": "aws_cloudwatch_metric_alarm",
                    "name": "cpu_utilization_low",
                    "provider_config_key": "aws",
                    "expressions": {
                        "alarm_actions": {
                            "references": [
                                "aws_appautoscaling_policy.scale_down.arn",
                                "aws_appautoscaling_policy.scale_down"
                            ]
                        },
                        "alarm_name": {
                            "references": [
                                "var.prefix",
                                "var.environment"
                            ]
                        },
                        "comparison_operator": {
                            "constant_value": "LessThanThreshold"
                        },
                        "dimensions": {
                            "references": [
                                "aws_ecs_cluster.this.name",
                                "aws_ecs_cluster.this",
                                "aws_ecs_service.this.name",
                                "aws_ecs_service.this"
                            ]
                        },
                        "evaluation_periods": {
                            "constant_value": "1"
                        },
                        "metric_name": {
                            "constant_value": "CPUUtilization"
                        },
                        "namespace": {
                            "constant_value": "AWS/ECS"
                        },
                        "period": {
                            "constant_value": "60"
                        },
                        "statistic": {
                            "constant_value": "Average"
                        },
                        "threshold": {
                            "references": [
                                "var.task_cpu_low_threshold"
                            ]
                        }
                    },
                    "schema_version": 1
                },
                {
                    "address": "aws_db_subnet_group.this",
                    "mode": "managed",
                    "type": "aws_db_subnet_group",
                    "name": "this",
                    "provider_config_key": "aws",
                    "expressions": {
                        "name": {
                            "references": [
                                "var.prefix",
                                "var.environment"
                            ]
                        },
                        "subnet_ids": {
                            "references": [
                                "module.vpc.private_subnets",
                                "module.vpc"
                            ]
                        },
                        "tags": {
                            "references": [
                                "var.tags"
                            ]
                        }
                    },
                    "schema_version": 0
                },
                {
                    "address": "aws_ecs_cluster.this",
                    "mode": "managed",
                    "type": "aws_ecs_cluster",
                    "name": "this",
                    "provider_config_key": "aws",
                    "expressions": {
                        "name": {
                            "references": [
                                "var.prefix",
                                "var.environment"
                            ]
                        }
                    },
                    "schema_version": 0
                },
                {
                    "address": "aws_ecs_service.this",
                    "mode": "managed",
                    "type": "aws_ecs_service",
                    "name": "this",
                    "provider_config_key": "aws",
                    "expressions": {
                        "cluster": {
                            "references": [
                                "aws_ecs_cluster.this.id",
                                "aws_ecs_cluster.this"
                            ]
                        },
                        "desired_count": {
                            "references": [
                                "var.desired_count"
                            ]
                        },
                        "launch_type": {
                            "constant_value": "FARGATE"
                        },
                        "load_balancer": [
                            {
                                "container_name": {
                                    "constant_value": "wordpress"
                                },
                                "container_port": {
                                    "constant_value": 80
                                },
                                "target_group_arn": {
                                    "references": [
                                        "aws_lb_target_group.this.id",
                                        "aws_lb_target_group.this"
                                    ]
                                }
                            }
                        ],
                        "name": {
                            "references": [
                                "var.prefix",
                                "var.environment"
                            ]
                        },
                        "network_configuration": [
                            {
                                "security_groups": {
                                    "references": [
                                        "aws_security_group.alb.id",
                                        "aws_security_group.alb",
                                        "aws_security_group.db.id",
                                        "aws_security_group.db",
                                        "aws_security_group.efs.id",
                                        "aws_security_group.efs"
                                    ]
                                },
                                "subnets": {
                                    "references": [
                                        "module.vpc.private_subnets",
                                        "module.vpc"
                                    ]
                                }
                            }
                        ],
                        "platform_version": {
                            "constant_value": "1.4.0"
                        },
                        "task_definition": {
                            "references": [
                                "aws_ecs_task_definition.this.arn",
                                "aws_ecs_task_definition.this"
                            ]
                        }
                    },
                    "schema_version": 0
                },
                {
                    "address": "aws_ecs_task_definition.this",
                    "mode": "managed",
                    "type": "aws_ecs_task_definition",
                    "name": "this",
                    "provider_config_key": "aws",
                    "expressions": {
                        "container_definitions": {
                            "references": [
                                "aws_ssm_parameter.db_master_user.arn",
                                "aws_ssm_parameter.db_master_user",
                                "aws_ssm_parameter.db_master_password.arn",
                                "aws_ssm_parameter.db_master_password",
                                "aws_rds_cluster.this.endpoint",
                                "aws_rds_cluster.this",
                                "aws_cloudwatch_log_group.wordpress.name",
                                "aws_cloudwatch_log_group.wordpress",
                                "data.aws_region.current.name",
                                "data.aws_region.current"
                            ]
                        },
                        "cpu": {
                            "references": [
                                "var.task_cpu"
                            ]
                        },
                        "execution_role_arn": {
                            "references": [
                                "aws_iam_role.task_execution_role.arn",
                                "aws_iam_role.task_execution_role"
                            ]
                        },
                        "family": {
                            "references": [
                                "var.prefix",
                                "var.environment"
                            ]
                        },
                        "memory": {
                            "references": [
                                "var.task_memory"
                            ]
                        },
                        "network_mode": {
                            "constant_value": "awsvpc"
                        },
                        "requires_compatibilities": {
                            "constant_value": [
                                "FARGATE"
                            ]
                        },
                        "task_role_arn": {
                            "references": [
                                "aws_iam_role.task_role.arn",
                                "aws_iam_role.task_role"
                            ]
                        },
                        "volume": [
                            {
                                "efs_volume_configuration": [
                                    {
                                        "file_system_id": {
                                            "references": [
                                                "aws_efs_file_system.this.id",
                                                "aws_efs_file_system.this"
                                            ]
                                        }
                                    }
                                ],
                                "name": {
                                    "constant_value": "efs"
                                }
                            }
                        ]
                    },
                    "schema_version": 1
                },
                {
                    "address": "aws_efs_file_system.this",
                    "mode": "managed",
                    "type": "aws_efs_file_system",
                    "name": "this",
                    "provider_config_key": "aws",
                    "expressions": {
                        "creation_token": {
                            "references": [
                                "var.prefix",
                                "var.environment"
                            ]
                        },
                        "tags": {
                            "references": [
                                "var.tags"
                            ]
                        }
                    },
                    "schema_version": 0
                },
                {
                    "address": "aws_efs_mount_target.this",
                    "mode": "managed",
                    "type": "aws_efs_mount_target",
                    "name": "this",
                    "provider_config_key": "aws",
                    "expressions": {
                        "file_system_id": {
                            "references": [
                                "aws_efs_file_system.this.id",
                                "aws_efs_file_system.this"
                            ]
                        },
                        "security_groups": {
                            "references": [
                                "aws_security_group.efs.id",
                                "aws_security_group.efs"
                            ]
                        },
                        "subnet_id": {
                            "references": [
                                "module.vpc.private_subnets",
                                "module.vpc",
                                "count.index"
                            ]
                        }
                    },
                    "schema_version": 0,
                    "count_expression": {
                        "references": [
                            "module.vpc.private_subnets",
                            "module.vpc"
                        ]
                    }
                },
                {
                    "address": "aws_iam_policy.task_execution_policy",
                    "mode": "managed",
                    "type": "aws_iam_policy",
                    "name": "task_execution_policy",
                    "provider_config_key": "aws",
                    "expressions": {
                        "policy": {
                            "constant_value": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ecr:GetAuthorizationToken\",\n        \"ecr:BatchCheckLayerAvailability\",\n        \"ecr:GetDownloadUrlForLayer\",\n        \"ecr:BatchGetImage\",\n        \"logs:CreateLogStream\",\n        \"logs:PutLogEvents\",\n        \"ssm:GetParameters\",\n        \"kms:Decrypt\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n  }\n"
                        }
                    },
                    "schema_version": 0
                },
                {
                    "address": "aws_iam_policy.task_policy",
                    "mode": "managed",
                    "type": "aws_iam_policy",
                    "name": "task_policy",
                    "provider_config_key": "aws",
                    "expressions": {
                        "policy": {
                            "constant_value": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticfilesystem:ClientMount\",\n        \"elasticfilesystem:ClientWrite\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n  }\n"
                        }
                    },
                    "schema_version": 0
                },
                {
                    "address": "aws_iam_role.task_execution_role",
                    "mode": "managed",
                    "type": "aws_iam_role",
                    "name": "task_execution_role",
                    "provider_config_key": "aws",
                    "expressions": {
                        "assume_role_policy": {
                            "constant_value": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": [\n          \"ecs-tasks.amazonaws.com\"\n        ]\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\n"
                        },
                        "name": {
                            "references": [
                                "var.prefix",
                                "var.environment"
                            ]
                        },
                        "tags": {
                            "references": [
                                "var.tags"
                            ]
                        }
                    },
                    "schema_version": 0
                },
                {
                    "address": "aws_iam_role.task_role",
                    "mode": "managed",
                    "type": "aws_iam_role",
                    "name": "task_role",
                    "provider_config_key": "aws",
                    "expressions": {
                        "assume_role_policy": {
                            "constant_value": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": [\n          \"ecs-tasks.amazonaws.com\"\n        ]\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\n"
                        },
                        "name": {
                            "references": [
                                "var.prefix",
                                "var.environment"
                            ]
                        },
                        "tags": {
                            "references": [
                                "var.tags"
                            ]
                        }
                    },
                    "schema_version": 0
                },
                {
                    "address": "aws_iam_role_policy_attachment.task_execution_policy_attach",
                    "mode": "managed",
                    "type": "aws_iam_role_policy_attachment",
                    "name": "task_execution_policy_attach",
                    "provider_config_key": "aws",
                    "expressions": {
                        "policy_arn": {
                            "references": [
                                "aws_iam_policy.task_execution_policy.arn",
                                "aws_iam_policy.task_execution_policy"
                            ]
                        },
                        "role": {
                            "references": [
                                "aws_iam_role.task_execution_role.name",
                                "aws_iam_role.task_execution_role"
                            ]
                        }
                    },
                    "schema_version": 0
                },
                {
                    "address": "aws_iam_role_policy_attachment.task_policy_attach",
                    "mode": "managed",
                    "type": "aws_iam_role_policy_attachment",
                    "name": "task_policy_attach",
                    "provider_config_key": "aws",
                    "expressions": {
                        "policy_arn": {
                            "references": [
                                "aws_iam_policy.task_policy.arn",
                                "aws_iam_policy.task_policy"
                            ]
                        },
                        "role": {
                            "references": [
                                "aws_iam_role.task_role.name",
                                "aws_iam_role.task_role"
                            ]
                        }
                    },
                    "schema_version": 0
                },
                {
                    "address": "aws_lb_listener_rule.wordpress",
                    "mode": "managed",
                    "type": "aws_lb_listener_rule",
                    "name": "wordpress",
                    "provider_config_key": "aws",
                    "expressions": {
                        "action": [
                            {
                                "target_group_arn": {
                                    "references": [
                                        "aws_lb_target_group.this.arn",
                                        "aws_lb_target_group.this"
                                    ]
                                },
                                "type": {
                                    "constant_value": "forward"
                                }
                            }
                        ],
                        "condition": [
                            {
                                "host_header": [
                                    {
                                        "values": {
                                            "references": [
                                                "var.site_domain",
                                                "var.public_alb_domain"
                                            ]
                                        }
                                    }
                                ]
                            }
                        ],
                        "listener_arn": {
                            "references": [
                                "module.alb.https_listener_arns[0]",
                                "module.alb.https_listener_arns",
                                "module.alb"
                            ]
                        },
                        "priority": {
                            "constant_value": 100
                        }
                    },
                    "schema_version": 0
                },
                {
                    "address": "aws_lb_target_group.this",
                    "mode": "managed",
                    "type": "aws_lb_target_group",
                    "name": "this",
                    "provider_config_key": "aws",
                    "expressions": {
                        "health_check": [
                            {
                                "matcher": {
                                    "constant_value": "200,302"
                                },
                                "path": {
                                    "constant_value": "/"
                                }
                            }
                        ],
                        "name": {
                            "references": [
                                "var.prefix",
                                "var.environment"
                            ]
                        },
                        "port": {
                            "constant_value": 80
                        },
                        "protocol": {
                            "constant_value": "HTTP"
                        },
                        "target_type": {
                            "constant_value": "ip"
                        },
                        "vpc_id": {
                            "references": [
                                "module.vpc.vpc_id",
                                "module.vpc"
                            ]
                        }
                    },
                    "schema_version": 0
                },
                {
                    "address": "aws_rds_cluster.this",
                    "mode": "managed",
                    "type": "aws_rds_cluster",
                    "name": "this",
                    "provider_config_key": "aws",
                    "expressions": {
                        "availability_zones": {
                            "references": [
                                "data.aws_availability_zones.this.names",
                                "data.aws_availability_zones.this"
                            ]
                        },
                        "backup_retention_period": {
                            "references": [
                                "var.db_backup_retention_days"
                            ]
                        },
                        "cluster_identifier": {
                            "references": [
                                "var.prefix",
                                "var.environment"
                            ]
                        },
                        "database_name": {
                            "constant_value": "wordpress"
                        },
                        "db_subnet_group_name": {
                            "references": [
                                "aws_db_subnet_group.this.name",
                                "aws_db_subnet_group.this"
                            ]
                        },
                        "engine": {
                            "constant_value": "aurora-mysql"
                        },
                        "engine_mode": {
                            "constant_value": "serverless"
                        },
                        "engine_version": {
                            "references": [
                                "var.db_engine_version"
                            ]
                        },
                        "final_snapshot_identifier": {
                            "references": [
                                "var.prefix",
                                "var.environment",
                                "random_string.snapshot_suffix.result",
                                "random_string.snapshot_suffix"
                            ]
                        },
                        "master_password": {
                            "references": [
                                "var.db_master_password"
                            ]
                        },
                        "master_username": {
                            "references": [
                                "var.db_master_username"
                            ]
                        },
                        "preferred_backup_window": {
                            "references": [
                                "var.db_backup_window"
                            ]
                        },
                        "scaling_configuration": [
                            {
                                "auto_pause": {
                                    "references": [
                                        "var.db_auto_pause"
                                    ]
                                },
                                "max_capacity": {
                                    "references": [
                                        "var.db_max_capacity"
                                    ]
                                },
                                "min_capacity": {
                                    "references": [
                                        "var.db_min_capacity"
                                    ]
                                },
                                "seconds_until_auto_pause": {
                                    "references": [
                                        "var.db_seconds_until_auto_pause"
                                    ]
                                }
                            }
                        ],
                        "tags": {
                            "references": [
                                "var.tags"
                            ]
                        },
                        "vpc_security_group_ids": {
                            "references": [
                                "aws_security_group.db.id",
                                "aws_security_group.db"
                            ]
                        }
                    },
                    "schema_version": 0
                },
                {
                    "address": "aws_route53_record.ipv4",
                    "mode": "managed",
                    "type": "aws_route53_record",
                    "name": "ipv4",
                    "provider_config_key": "aws",
                    "expressions": {
                        "alias": [
                            {
                                "evaluate_target_health": {
                                    "constant_value": false
                                },
                                "name": {
                                    "references": [
                                        "aws_cloudfront_distribution.this.domain_name",
                                        "aws_cloudfront_distribution.this"
                                    ]
                                },
                                "zone_id": {
                                    "references": [
                                        "aws_cloudfront_distribution.this.hosted_zone_id",
                                        "aws_cloudfront_distribution.this"
                                    ]
                                }
                            }
                        ],
                        "name": {
                            "references": [
                                "var.site_domain"
                            ]
                        },
                        "type": {
                            "constant_value": "A"
                        },
                        "zone_id": {
                            "references": [
                                "data.aws_route53_zone.this.zone_id",
                                "data.aws_route53_zone.this"
                            ]
                        }
                    },
                    "schema_version": 2
                },
                {
                    "address": "aws_route53_record.ipv6",
                    "mode": "managed",
                    "type": "aws_route53_record",
                    "name": "ipv6",
                    "provider_config_key": "aws",
                    "expressions": {
                        "alias": [
                            {
                                "evaluate_target_health": {
                                    "constant_value": false
                                },
                                "name": {
                                    "references": [
                                        "aws_cloudfront_distribution.this.domain_name",
                                        "aws_cloudfront_distribution.this"
                                    ]
                                },
                                "zone_id": {
                                    "references": [
                                        "aws_cloudfront_distribution.this.hosted_zone_id",
                                        "aws_cloudfront_distribution.this"
                                    ]
                                }
                            }
                        ],
                        "name": {
                            "references": [
                                "var.site_domain"
                            ]
                        },
                        "type": {
                            "constant_value": "AAAA"
                        },
                        "zone_id": {
                            "references": [
                                "data.aws_route53_zone.this.zone_id",
                                "data.aws_route53_zone.this"
                            ]
                        }
                    },
                    "schema_version": 2
                },
                {
                    "address": "aws_route53_record.wordpress",
                    "mode": "managed",
                    "type": "aws_route53_record",
                    "name": "wordpress",
                    "provider_config_key": "aws",
                    "expressions": {
                        "alias": [
                            {
                                "evaluate_target_health": {
                                    "constant_value": true
                                },
                                "name": {
                                    "references": [
                                        "module.alb.this_lb_dns_name",
                                        "module.alb"
                                    ]
                                },
                                "zone_id": {
                                    "references": [
                                        "module.alb.this_lb_zone_id",
                                        "module.alb"
                                    ]
                                }
                            }
                        ],
                        "name": {
                            "references": [
                                "var.public_alb_domain"
                            ]
                        },
                        "type": {
                            "constant_value": "A"
                        },
                        "zone_id": {
                            "references": [
                                "data.aws_route53_zone.this.zone_id",
                                "data.aws_route53_zone.this"
                            ]
                        }
                    },
                    "schema_version": 2
                },
                {
                    "address": "aws_security_group.alb",
                    "mode": "managed",
                    "type": "aws_security_group",
                    "name": "alb",
                    "provider_config_key": "aws",
                    "expressions": {
                        "description": {
                            "constant_value": "Allow HTTPS inbound traffc"
                        },
                        "egress": {
                            "constant_value": [
                                {
                                    "cidr_blocks": [
                                        "0.0.0.0/0"
                                    ],
                                    "description": null,
                                    "from_port": 0,
                                    "ipv6_cidr_blocks": null,
                                    "prefix_list_ids": null,
                                    "protocol": "-1",
                                    "security_groups": null,
                                    "self": null,
                                    "to_port": 0
                                }
                            ]
                        },
                        "ingress": {
                            "constant_value": [
                                {
                                    "cidr_blocks": [
                                        "0.0.0.0/0"
                                    ],
                                    "description": null,
                                    "from_port": 443,
                                    "ipv6_cidr_blocks": null,
                                    "prefix_list_ids": null,
                                    "protocol": "tcp",
                                    "security_groups": null,
                                    "self": null,
                                    "to_port": 443
                                },
                                {
                                    "cidr_blocks": null,
                                    "description": null,
                                    "from_port": 0,
                                    "ipv6_cidr_blocks": null,
                                    "prefix_list_ids": null,
                                    "protocol": "-1",
                                    "security_groups": null,
                                    "self": true,
                                    "to_port": 0
                                }
                            ]
                        },
                        "name": {
                            "references": [
                                "var.prefix",
                                "var.environment"
                            ]
                        },
                        "tags": {
                            "references": [
                                "var.tags"
                            ]
                        },
                        "vpc_id": {
                            "references": [
                                "module.vpc.vpc_id",
                                "module.vpc"
                            ]
                        }
                    },
                    "schema_version": 1
                },
                {
                    "address": "aws_security_group.db",
                    "mode": "managed",
                    "type": "aws_security_group",
                    "name": "db",
                    "provider_config_key": "aws",
                    "expressions": {
                        "egress": {
                            "constant_value": [
                                {
                                    "cidr_blocks": [
                                        "0.0.0.0/0"
                                    ],
                                    "description": null,
                                    "from_port": 0,
                                    "ipv6_cidr_blocks": null,
                                    "prefix_list_ids": null,
                                    "protocol": "-1",
                                    "security_groups": null,
                                    "self": null,
                                    "to_port": 0
                                }
                            ]
                        },
                        "ingress": {
                            "constant_value": [
                                {
                                    "cidr_blocks": null,
                                    "description": null,
                                    "from_port": 3306,
                                    "ipv6_cidr_blocks": null,
                                    "prefix_list_ids": null,
                                    "protocol": "tcp",
                                    "security_groups": null,
                                    "self": true,
                                    "to_port": 3306
                                }
                            ]
                        },
                        "name": {
                            "references": [
                                "var.prefix",
                                "var.environment"
                            ]
                        },
                        "tags": {
                            "references": [
                                "var.tags"
                            ]
                        },
                        "vpc_id": {
                            "references": [
                                "module.vpc.vpc_id",
                                "module.vpc"
                            ]
                        }
                    },
                    "schema_version": 1
                },
                {
                    "address": "aws_security_group.efs",
                    "mode": "managed",
                    "type": "aws_security_group",
                    "name": "efs",
                    "provider_config_key": "aws",
                    "expressions": {
                        "description": {
                            "constant_value": "Allow traffic ffrom self"
                        },
                        "egress": {
                            "constant_value": [
                                {
                                    "cidr_blocks": [
                                        "0.0.0.0/0"
                                    ],
                                    "description": null,
                                    "from_port": 0,
                                    "ipv6_cidr_blocks": null,
                                    "prefix_list_ids": null,
                                    "protocol": "-1",
                                    "security_groups": null,
                                    "self": null,
                                    "to_port": 0
                                }
                            ]
                        },
                        "ingress": {
                            "constant_value": [
                                {
                                    "cidr_blocks": null,
                                    "description": null,
                                    "from_port": 2049,
                                    "ipv6_cidr_blocks": null,
                                    "prefix_list_ids": null,
                                    "protocol": "tcp",
                                    "security_groups": null,
                                    "self": true,
                                    "to_port": 2049
                                }
                            ]
                        },
                        "name": {
                            "references": [
                                "var.prefix",
                                "var.environment"
                            ]
                        },
                        "tags": {
                            "references": [
                                "var.tags"
                            ]
                        },
                        "vpc_id": {
                            "references": [
                                "module.vpc.vpc_id",
                                "module.vpc"
                            ]
                        }
                    },
                    "schema_version": 1
                },
                {
                    "address": "aws_security_group.wordpress",
                    "mode": "managed",
                    "type": "aws_security_group",
                    "name": "wordpress",
                    "provider_config_key": "aws",
                    "expressions": {
                        "description": {
                            "constant_value": "Fargate wordpress"
                        },
                        "egress": {
                            "constant_value": [
                                {
                                    "cidr_blocks": [
                                        "0.0.0.0/0"
                                    ],
                                    "description": null,
                                    "from_port": 0,
                                    "ipv6_cidr_blocks": null,
                                    "prefix_list_ids": null,
                                    "protocol": "-1",
                                    "security_groups": null,
                                    "self": null,
                                    "to_port": 0
                                }
                            ]
                        },
                        "ingress": {
                            "references": [
                                "aws_security_group.alb.id",
                                "aws_security_group.alb",
                                "aws_security_group.efs.id",
                                "aws_security_group.efs"
                            ]
                        },
                        "name": {
                            "references": [
                                "var.prefix",
                                "var.environment"
                            ]
                        },
                        "tags": {
                            "references": [
                                "var.tags"
                            ]
                        },
                        "vpc_id": {
                            "references": [
                                "module.vpc.vpc_id",
                                "module.vpc"
                            ]
                        }
                    },
                    "schema_version": 1
                },
                {
                    "address": "aws_ssm_parameter.db_master_password",
                    "mode": "managed",
                    "type": "aws_ssm_parameter",
                    "name": "db_master_password",
                    "provider_config_key": "aws",
                    "expressions": {
                        "name": {
                            "references": [
                                "var.prefix",
                                "var.environment"
                            ]
                        },
                        "tags": {
                            "references": [
                                "var.tags"
                            ]
                        },
                        "type": {
                            "constant_value": "SecureString"
                        },
                        "value": {
                            "references": [
                                "var.db_master_password"
                            ]
                        }
                    },
                    "schema_version": 0
                },
                {
                    "address": "aws_ssm_parameter.db_master_user",
                    "mode": "managed",
                    "type": "aws_ssm_parameter",
                    "name": "db_master_user",
                    "provider_config_key": "aws",
                    "expressions": {
                        "name": {
                            "references": [
                                "var.prefix",
                                "var.environment"
                            ]
                        },
                        "tags": {
                            "references": [
                                "var.tags"
                            ]
                        },
                        "type": {
                            "constant_value": "SecureString"
                        },
                        "value": {
                            "references": [
                                "var.db_master_username"
                            ]
                        }
                    },
                    "schema_version": 0
                },
                {
                    "address": "random_string.snapshot_suffix",
                    "mode": "managed",
                    "type": "random_string",
                    "name": "snapshot_suffix",
                    "provider_config_key": "random",
                    "expressions": {
                        "length": {
                            "constant_value": 8
                        },
                        "special": {
                            "constant_value": false
                        }
                    },
                    "schema_version": 2
                },
                {
                    "address": "data.aws_availability_zones.this",
                    "mode": "data",
                    "type": "aws_availability_zones",
                    "name": "this",
                    "provider_config_key": "aws",
                    "schema_version": 0
                },
                {
                    "address": "data.aws_caller_identity.current",
                    "mode": "data",
                    "type": "aws_caller_identity",
                    "name": "current",
                    "provider_config_key": "aws",
                    "schema_version": 0
                },
                {
                    "address": "data.aws_region.current",
                    "mode": "data",
                    "type": "aws_region",
                    "name": "current",
                    "provider_config_key": "aws",
                    "schema_version": 0
                },
                {
                    "address": "data.aws_route53_zone.this",
                    "mode": "data",
                    "type": "aws_route53_zone",
                    "name": "this",
                    "provider_config_key": "aws",
                    "expressions": {
                        "name": {
                            "references": [
                                "var.site_domain"
                            ]
                        }
                    },
                    "schema_version": 0
                }
            ],
            "module_calls": {
                "acm": {
                    "source": "terraform-aws-modules/acm/aws",
                    "expressions": {
                        "domain_name": {
                            "references": [
                                "var.site_domain"
                            ]
                        },
                        "tags": {
                            "references": [
                                "var.tags"
                            ]
                        },
                        "zone_id": {
                            "references": [
                                "data.aws_route53_zone.this.zone_id",
                                "data.aws_route53_zone.this"
                            ]
                        }
                    },
                    "module": {
                        "outputs": {
                            "distinct_domain_names": {
                                "expression": {
                                    "references": [
                                        "local.distinct_domain_names"
                                    ]
                                },
                                "description": "List of distinct domains names used for the validation."
                            },
                            "this_acm_certificate_arn": {
                                "expression": {
                                    "references": [
                                        "aws_acm_certificate_validation.this",
                                        "aws_acm_certificate.this"
                                    ]
                                },
                                "description": "The ARN of the certificate"
                            },
                            "this_acm_certificate_domain_validation_options": {
                                "expression": {
                                    "references": [
                                        "aws_acm_certificate.this"
                                    ]
                                },
                                "description": "A list of attributes to feed into other resources to complete certificate validation. Can have more than one element, e.g. if SANs are defined. Only set if DNS-validation was used."
                            },
                            "this_acm_certificate_validation_emails": {
                                "expression": {
                                    "references": [
                                        "aws_acm_certificate.this"
                                    ]
                                },
                                "description": "A list of addresses that received a validation E-Mail. Only set if EMAIL-validation was used."
                            },
                            "validation_domains": {
                                "expression": {
                                    "references": [
                                        "local.validation_domains"
                                    ]
                                },
                                "description": "List of distinct domain validation options. This is useful if subject alternative names contain wildcards."
                            },
                            "validation_route53_record_fqdns": {
                                "expression": {
                                    "references": [
                                        "aws_route53_record.validation"
                                    ]
                                },
                                "description": "List of FQDNs built using the zone domain and name."
                            }
                        },
                        "resources": [
                            {
                                "address": "aws_acm_certificate.this",
                                "mode": "managed",
                                "type": "aws_acm_certificate",
                                "name": "this",
                                "provider_config_key": "aws.us_east_1",
                                "expressions": {
                                    "domain_name": {
                                        "references": [
                                            "var.domain_name"
                                        ]
                                    },
                                    "options": [
                                        {
                                            "certificate_transparency_logging_preference": {
                                                "references": [
                                                    "var.certificate_transparency_logging_preference"
                                                ]
                                            }
                                        }
                                    ],
                                    "subject_alternative_names": {
                                        "references": [
                                            "var.subject_alternative_names"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags"
                                        ]
                                    },
                                    "validation_method": {
                                        "references": [
                                            "var.validation_method"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_certificate"
                                    ]
                                }
                            },
                            {
                                "address": "aws_acm_certificate_validation.this",
                                "mode": "managed",
                                "type": "aws_acm_certificate_validation",
                                "name": "this",
                                "provider_config_key": "aws.us_east_1",
                                "expressions": {
                                    "certificate_arn": {
                                        "references": [
                                            "aws_acm_certificate.this[0].arn",
                                            "aws_acm_certificate.this[0]",
                                            "aws_acm_certificate.this"
                                        ]
                                    },
                                    "validation_record_fqdns": {
                                        "references": [
                                            "aws_route53_record.validation"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_certificate",
                                        "var.validation_method",
                                        "var.validate_certificate",
                                        "var.wait_for_validation"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route53_record.validation",
                                "mode": "managed",
                                "type": "aws_route53_record",
                                "name": "validation",
                                "provider_config_key": "aws.us_east_1",
                                "expressions": {
                                    "allow_overwrite": {
                                        "references": [
                                            "var.validation_allow_overwrite_records"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "local.validation_domains",
                                            "count.index"
                                        ]
                                    },
                                    "records": {
                                        "references": [
                                            "local.validation_domains",
                                            "count.index"
                                        ]
                                    },
                                    "ttl": {
                                        "references": [
                                            "var.dns_ttl"
                                        ]
                                    },
                                    "type": {
                                        "references": [
                                            "local.validation_domains",
                                            "count.index"
                                        ]
                                    },
                                    "zone_id": {
                                        "references": [
                                            "var.zone_id"
                                        ]
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "var.create_certificate",
                                        "var.validation_method",
                                        "var.validate_certificate",
                                        "local.distinct_domain_names"
                                    ]
                                },
                                "depends_on": [
                                    "aws_acm_certificate.this"
                                ]
                            }
                        ],
                        "variables": {
                            "certificate_transparency_logging_preference": {
                                "default": true,
                                "description": "Specifies whether certificate details should be added to a certificate transparency log"
                            },
                            "create_certificate": {
                                "default": true,
                                "description": "Whether to create ACM certificate"
                            },
                            "dns_ttl": {
                                "default": 60,
                                "description": "The TTL of DNS recursive resolvers to cache information about this record."
                            },
                            "domain_name": {
                                "default": "",
                                "description": "A domain name for which the certificate should be issued"
                            },
                            "subject_alternative_names": {
                                "default": [],
                                "description": "A list of domains that should be SANs in the issued certificate"
                            },
                            "tags": {
                                "default": {},
                                "description": "A mapping of tags to assign to the resource"
                            },
                            "validate_certificate": {
                                "default": true,
                                "description": "Whether to validate certificate by creating Route53 record"
                            },
                            "validation_allow_overwrite_records": {
                                "default": true,
                                "description": "Whether to allow overwrite of Route53 records"
                            },
                            "validation_method": {
                                "default": "DNS",
                                "description": "Which method to use for validation. DNS or EMAIL are valid, NONE can be used for certificates that were imported into ACM and then into Terraform."
                            },
                            "wait_for_validation": {
                                "default": true,
                                "description": "Whether to wait for the validation to complete"
                            },
                            "zone_id": {
                                "default": "",
                                "description": "The ID of the hosted zone to contain this record."
                            }
                        }
                    },
                    "version_constraint": "~\u003e v2.0"
                },
                "acm_alb": {
                    "source": "terraform-aws-modules/acm/aws",
                    "expressions": {
                        "domain_name": {
                            "references": [
                                "var.public_alb_domain"
                            ]
                        },
                        "tags": {
                            "references": [
                                "var.tags"
                            ]
                        },
                        "zone_id": {
                            "references": [
                                "data.aws_route53_zone.this.zone_id",
                                "data.aws_route53_zone.this"
                            ]
                        }
                    },
                    "module": {
                        "outputs": {
                            "distinct_domain_names": {
                                "expression": {
                                    "references": [
                                        "local.distinct_domain_names"
                                    ]
                                },
                                "description": "List of distinct domains names used for the validation."
                            },
                            "this_acm_certificate_arn": {
                                "expression": {
                                    "references": [
                                        "aws_acm_certificate_validation.this",
                                        "aws_acm_certificate.this"
                                    ]
                                },
                                "description": "The ARN of the certificate"
                            },
                            "this_acm_certificate_domain_validation_options": {
                                "expression": {
                                    "references": [
                                        "aws_acm_certificate.this"
                                    ]
                                },
                                "description": "A list of attributes to feed into other resources to complete certificate validation. Can have more than one element, e.g. if SANs are defined. Only set if DNS-validation was used."
                            },
                            "this_acm_certificate_validation_emails": {
                                "expression": {
                                    "references": [
                                        "aws_acm_certificate.this"
                                    ]
                                },
                                "description": "A list of addresses that received a validation E-Mail. Only set if EMAIL-validation was used."
                            },
                            "validation_domains": {
                                "expression": {
                                    "references": [
                                        "local.validation_domains"
                                    ]
                                },
                                "description": "List of distinct domain validation options. This is useful if subject alternative names contain wildcards."
                            },
                            "validation_route53_record_fqdns": {
                                "expression": {
                                    "references": [
                                        "aws_route53_record.validation"
                                    ]
                                },
                                "description": "List of FQDNs built using the zone domain and name."
                            }
                        },
                        "resources": [
                            {
                                "address": "aws_acm_certificate.this",
                                "mode": "managed",
                                "type": "aws_acm_certificate",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "domain_name": {
                                        "references": [
                                            "var.domain_name"
                                        ]
                                    },
                                    "options": [
                                        {
                                            "certificate_transparency_logging_preference": {
                                                "references": [
                                                    "var.certificate_transparency_logging_preference"
                                                ]
                                            }
                                        }
                                    ],
                                    "subject_alternative_names": {
                                        "references": [
                                            "var.subject_alternative_names"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags"
                                        ]
                                    },
                                    "validation_method": {
                                        "references": [
                                            "var.validation_method"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_certificate"
                                    ]
                                }
                            },
                            {
                                "address": "aws_acm_certificate_validation.this",
                                "mode": "managed",
                                "type": "aws_acm_certificate_validation",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "certificate_arn": {
                                        "references": [
                                            "aws_acm_certificate.this[0].arn",
                                            "aws_acm_certificate.this[0]",
                                            "aws_acm_certificate.this"
                                        ]
                                    },
                                    "validation_record_fqdns": {
                                        "references": [
                                            "aws_route53_record.validation"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_certificate",
                                        "var.validation_method",
                                        "var.validate_certificate",
                                        "var.wait_for_validation"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route53_record.validation",
                                "mode": "managed",
                                "type": "aws_route53_record",
                                "name": "validation",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "allow_overwrite": {
                                        "references": [
                                            "var.validation_allow_overwrite_records"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "local.validation_domains",
                                            "count.index"
                                        ]
                                    },
                                    "records": {
                                        "references": [
                                            "local.validation_domains",
                                            "count.index"
                                        ]
                                    },
                                    "ttl": {
                                        "references": [
                                            "var.dns_ttl"
                                        ]
                                    },
                                    "type": {
                                        "references": [
                                            "local.validation_domains",
                                            "count.index"
                                        ]
                                    },
                                    "zone_id": {
                                        "references": [
                                            "var.zone_id"
                                        ]
                                    }
                                },
                                "schema_version": 2,
                                "count_expression": {
                                    "references": [
                                        "var.create_certificate",
                                        "var.validation_method",
                                        "var.validate_certificate",
                                        "local.distinct_domain_names"
                                    ]
                                },
                                "depends_on": [
                                    "aws_acm_certificate.this"
                                ]
                            }
                        ],
                        "variables": {
                            "certificate_transparency_logging_preference": {
                                "default": true,
                                "description": "Specifies whether certificate details should be added to a certificate transparency log"
                            },
                            "create_certificate": {
                                "default": true,
                                "description": "Whether to create ACM certificate"
                            },
                            "dns_ttl": {
                                "default": 60,
                                "description": "The TTL of DNS recursive resolvers to cache information about this record."
                            },
                            "domain_name": {
                                "default": "",
                                "description": "A domain name for which the certificate should be issued"
                            },
                            "subject_alternative_names": {
                                "default": [],
                                "description": "A list of domains that should be SANs in the issued certificate"
                            },
                            "tags": {
                                "default": {},
                                "description": "A mapping of tags to assign to the resource"
                            },
                            "validate_certificate": {
                                "default": true,
                                "description": "Whether to validate certificate by creating Route53 record"
                            },
                            "validation_allow_overwrite_records": {
                                "default": true,
                                "description": "Whether to allow overwrite of Route53 records"
                            },
                            "validation_method": {
                                "default": "DNS",
                                "description": "Which method to use for validation. DNS or EMAIL are valid, NONE can be used for certificates that were imported into ACM and then into Terraform."
                            },
                            "wait_for_validation": {
                                "default": true,
                                "description": "Whether to wait for the validation to complete"
                            },
                            "zone_id": {
                                "default": "",
                                "description": "The ID of the hosted zone to contain this record."
                            }
                        }
                    },
                    "version_constraint": "~\u003e v2.0"
                },
                "alb": {
                    "source": "terraform-aws-modules/alb/aws",
                    "expressions": {
                        "https_listeners": {
                            "references": [
                                "module.acm_alb.this_acm_certificate_arn",
                                "module.acm_alb"
                            ]
                        },
                        "load_balancer_type": {
                            "constant_value": "application"
                        },
                        "name": {
                            "references": [
                                "var.prefix",
                                "var.environment"
                            ]
                        },
                        "security_groups": {
                            "references": [
                                "aws_security_group.alb.id",
                                "aws_security_group.alb"
                            ]
                        },
                        "subnets": {
                            "references": [
                                "module.vpc.public_subnets",
                                "module.vpc"
                            ]
                        },
                        "tags": {
                            "references": [
                                "var.tags"
                            ]
                        },
                        "target_groups": {
                            "references": [
                                "var.prefix",
                                "var.environment"
                            ]
                        },
                        "vpc_id": {
                            "references": [
                                "module.vpc.vpc_id",
                                "module.vpc"
                            ]
                        }
                    },
                    "module": {
                        "outputs": {
                            "http_tcp_listener_arns": {
                                "expression": {
                                    "references": [
                                        "aws_lb_listener.frontend_http_tcp"
                                    ]
                                },
                                "description": "The ARN of the TCP and HTTP load balancer listeners created."
                            },
                            "http_tcp_listener_ids": {
                                "expression": {
                                    "references": [
                                        "aws_lb_listener.frontend_http_tcp"
                                    ]
                                },
                                "description": "The IDs of the TCP and HTTP load balancer listeners created."
                            },
                            "https_listener_arns": {
                                "expression": {
                                    "references": [
                                        "aws_lb_listener.frontend_https"
                                    ]
                                },
                                "description": "The ARNs of the HTTPS load balancer listeners created."
                            },
                            "https_listener_ids": {
                                "expression": {
                                    "references": [
                                        "aws_lb_listener.frontend_https"
                                    ]
                                },
                                "description": "The IDs of the load balancer listeners created."
                            },
                            "target_group_arn_suffixes": {
                                "expression": {
                                    "references": [
                                        "aws_lb_target_group.main"
                                    ]
                                },
                                "description": "ARN suffixes of our target groups - can be used with CloudWatch."
                            },
                            "target_group_arns": {
                                "expression": {
                                    "references": [
                                        "aws_lb_target_group.main"
                                    ]
                                },
                                "description": "ARNs of the target groups. Useful for passing to your Auto Scaling group."
                            },
                            "target_group_attachments": {
                                "expression": {
                                    "references": [
                                        "aws_lb_target_group_attachment.this"
                                    ]
                                },
                                "description": "ARNs of the target group attachment IDs."
                            },
                            "target_group_names": {
                                "expression": {
                                    "references": [
                                        "aws_lb_target_group.main"
                                    ]
                                },
                                "description": "Name of the target group. Useful for passing to your CodeDeploy Deployment Group."
                            },
                            "this_lb_arn": {
                                "expression": {
                                    "references": [
                                        "aws_lb.this"
                                    ]
                                },
                                "description": "The ID and ARN of the load balancer we created."
                            },
                            "this_lb_arn_suffix": {
                                "expression": {
                                    "references": [
                                        "aws_lb.this"
                                    ]
                                },
                                "description": "ARN suffix of our load balancer - can be used with CloudWatch."
                            },
                            "this_lb_dns_name": {
                                "expression": {
                                    "references": [
                                        "aws_lb.this"
                                    ]
                                },
                                "description": "The DNS name of the load balancer."
                            },
                            "this_lb_id": {
                                "expression": {
                                    "references": [
                                        "aws_lb.this"
                                    ]
                                },
                                "description": "The ID and ARN of the load balancer we created."
                            },
                            "this_lb_zone_id": {
                                "expression": {
                                    "references": [
                                        "aws_lb.this"
                                    ]
                                },
                                "description": "The zone_id of the load balancer to assist with creating DNS records."
                            }
                        },
                        "resources": [
                            {
                                "address": "aws_lb.this",
                                "mode": "managed",
                                "type": "aws_lb",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "drop_invalid_header_fields": {
                                        "references": [
                                            "var.drop_invalid_header_fields"
                                        ]
                                    },
                                    "enable_cross_zone_load_balancing": {
                                        "references": [
                                            "var.enable_cross_zone_load_balancing"
                                        ]
                                    },
                                    "enable_deletion_protection": {
                                        "references": [
                                            "var.enable_deletion_protection"
                                        ]
                                    },
                                    "enable_http2": {
                                        "references": [
                                            "var.enable_http2"
                                        ]
                                    },
                                    "idle_timeout": {
                                        "references": [
                                            "var.idle_timeout"
                                        ]
                                    },
                                    "internal": {
                                        "references": [
                                            "var.internal"
                                        ]
                                    },
                                    "ip_address_type": {
                                        "references": [
                                            "var.ip_address_type"
                                        ]
                                    },
                                    "load_balancer_type": {
                                        "references": [
                                            "var.load_balancer_type"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.name"
                                        ]
                                    },
                                    "name_prefix": {
                                        "references": [
                                            "var.name_prefix"
                                        ]
                                    },
                                    "security_groups": {
                                        "references": [
                                            "var.security_groups"
                                        ]
                                    },
                                    "subnets": {
                                        "references": [
                                            "var.subnets"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags",
                                            "var.lb_tags",
                                            "var.name",
                                            "var.name",
                                            "var.name_prefix"
                                        ]
                                    },
                                    "timeouts": {
                                        "create": {
                                            "references": [
                                                "var.load_balancer_create_timeout"
                                            ]
                                        },
                                        "delete": {
                                            "references": [
                                                "var.load_balancer_delete_timeout"
                                            ]
                                        },
                                        "update": {
                                            "references": [
                                                "var.load_balancer_update_timeout"
                                            ]
                                        }
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_lb"
                                    ]
                                }
                            },
                            {
                                "address": "aws_lb_listener.frontend_http_tcp",
                                "mode": "managed",
                                "type": "aws_lb_listener",
                                "name": "frontend_http_tcp",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "load_balancer_arn": {
                                        "references": [
                                            "aws_lb.this[0].arn",
                                            "aws_lb.this[0]",
                                            "aws_lb.this"
                                        ]
                                    },
                                    "port": {
                                        "references": [
                                            "var.http_tcp_listeners",
                                            "count.index"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.http_tcp_listeners",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_lb",
                                        "var.http_tcp_listeners"
                                    ]
                                }
                            },
                            {
                                "address": "aws_lb_listener.frontend_https",
                                "mode": "managed",
                                "type": "aws_lb_listener",
                                "name": "frontend_https",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "certificate_arn": {
                                        "references": [
                                            "var.https_listeners",
                                            "count.index"
                                        ]
                                    },
                                    "load_balancer_arn": {
                                        "references": [
                                            "aws_lb.this[0].arn",
                                            "aws_lb.this[0]",
                                            "aws_lb.this"
                                        ]
                                    },
                                    "port": {
                                        "references": [
                                            "var.https_listeners",
                                            "count.index"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.https_listeners",
                                            "count.index"
                                        ]
                                    },
                                    "ssl_policy": {
                                        "references": [
                                            "var.https_listeners",
                                            "count.index",
                                            "var.listener_ssl_policy_default"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_lb",
                                        "var.https_listeners"
                                    ]
                                }
                            },
                            {
                                "address": "aws_lb_listener_certificate.https_listener",
                                "mode": "managed",
                                "type": "aws_lb_listener_certificate",
                                "name": "https_listener",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "certificate_arn": {
                                        "references": [
                                            "var.extra_ssl_certs",
                                            "count.index"
                                        ]
                                    },
                                    "listener_arn": {
                                        "references": [
                                            "aws_lb_listener.frontend_https",
                                            "var.extra_ssl_certs",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_lb",
                                        "var.extra_ssl_certs"
                                    ]
                                }
                            },
                            {
                                "address": "aws_lb_listener_rule.https_listener_rule",
                                "mode": "managed",
                                "type": "aws_lb_listener_rule",
                                "name": "https_listener_rule",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "listener_arn": {
                                        "references": [
                                            "aws_lb_listener.frontend_https",
                                            "var.https_listener_rules",
                                            "count.index",
                                            "count.index"
                                        ]
                                    },
                                    "priority": {
                                        "references": [
                                            "var.https_listener_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_lb",
                                        "var.https_listener_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_lb_target_group.main",
                                "mode": "managed",
                                "type": "aws_lb_target_group",
                                "name": "main",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "deregistration_delay": {
                                        "references": [
                                            "var.target_groups",
                                            "count.index"
                                        ]
                                    },
                                    "lambda_multi_value_headers_enabled": {
                                        "references": [
                                            "var.target_groups",
                                            "count.index"
                                        ]
                                    },
                                    "load_balancing_algorithm_type": {
                                        "references": [
                                            "var.target_groups",
                                            "count.index"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.target_groups",
                                            "count.index"
                                        ]
                                    },
                                    "name_prefix": {
                                        "references": [
                                            "var.target_groups",
                                            "count.index"
                                        ]
                                    },
                                    "port": {
                                        "references": [
                                            "var.target_groups",
                                            "count.index"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.target_groups",
                                            "count.index",
                                            "var.target_groups",
                                            "count.index"
                                        ]
                                    },
                                    "protocol_version": {
                                        "references": [
                                            "var.target_groups",
                                            "count.index",
                                            "var.target_groups",
                                            "count.index"
                                        ]
                                    },
                                    "proxy_protocol_v2": {
                                        "references": [
                                            "var.target_groups",
                                            "count.index"
                                        ]
                                    },
                                    "slow_start": {
                                        "references": [
                                            "var.target_groups",
                                            "count.index"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags",
                                            "var.target_group_tags",
                                            "var.target_groups",
                                            "count.index",
                                            "var.target_groups",
                                            "count.index",
                                            "var.target_groups",
                                            "count.index"
                                        ]
                                    },
                                    "target_type": {
                                        "references": [
                                            "var.target_groups",
                                            "count.index"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "var.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_lb",
                                        "var.target_groups"
                                    ]
                                },
                                "depends_on": [
                                    "aws_lb.this"
                                ]
                            },
                            {
                                "address": "aws_lb_target_group_attachment.this",
                                "mode": "managed",
                                "type": "aws_lb_target_group_attachment",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "availability_zone": {
                                        "references": [
                                            "each.value"
                                        ]
                                    },
                                    "port": {
                                        "references": [
                                            "each.value"
                                        ]
                                    },
                                    "target_group_arn": {
                                        "references": [
                                            "aws_lb_target_group.main",
                                            "each.value.tg_index",
                                            "each.value"
                                        ]
                                    },
                                    "target_id": {
                                        "references": [
                                            "each.value.target_id",
                                            "each.value"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "for_each_expression": {
                                    "references": [
                                        "var.create_lb",
                                        "local.target_group_attachments",
                                        "local.target_group_attachments"
                                    ]
                                }
                            }
                        ],
                        "variables": {
                            "access_logs": {
                                "default": {},
                                "description": "Map containing access logging configuration for load balancer."
                            },
                            "create_lb": {
                                "default": true,
                                "description": "Controls if the Load Balancer should be created"
                            },
                            "drop_invalid_header_fields": {
                                "default": false,
                                "description": "Indicates whether invalid header fields are dropped in application load balancers. Defaults to false."
                            },
                            "enable_cross_zone_load_balancing": {
                                "default": false,
                                "description": "Indicates whether cross zone load balancing should be enabled in application load balancers."
                            },
                            "enable_deletion_protection": {
                                "default": false,
                                "description": "If true, deletion of the load balancer will be disabled via the AWS API. This will prevent Terraform from deleting the load balancer. Defaults to false."
                            },
                            "enable_http2": {
                                "default": true,
                                "description": "Indicates whether HTTP/2 is enabled in application load balancers."
                            },
                            "extra_ssl_certs": {
                                "default": [],
                                "description": "A list of maps describing any extra SSL certificates to apply to the HTTPS listeners. Required key/values: certificate_arn, https_listener_index (the index of the listener within https_listeners which the cert applies toward)."
                            },
                            "http_tcp_listeners": {
                                "default": [],
                                "description": "A list of maps describing the HTTP listeners or TCP ports for this ALB. Required key/values: port, protocol. Optional key/values: target_group_index (defaults to http_tcp_listeners[count.index])"
                            },
                            "https_listener_rules": {
                                "default": [],
                                "description": "A list of maps describing the Listener Rules for this ALB. Required key/values: actions, conditions. Optional key/values: priority, https_listener_index (default to https_listeners[count.index])"
                            },
                            "https_listeners": {
                                "default": [],
                                "description": "A list of maps describing the HTTPS listeners for this ALB. Required key/values: port, certificate_arn. Optional key/values: ssl_policy (defaults to ELBSecurityPolicy-2016-08), target_group_index (defaults to https_listeners[count.index])"
                            },
                            "idle_timeout": {
                                "default": 60,
                                "description": "The time in seconds that the connection is allowed to be idle."
                            },
                            "internal": {
                                "default": false,
                                "description": "Boolean determining if the load balancer is internal or externally facing."
                            },
                            "ip_address_type": {
                                "default": "ipv4",
                                "description": "The type of IP addresses used by the subnets for your load balancer. The possible values are ipv4 and dualstack."
                            },
                            "lb_tags": {
                                "default": {},
                                "description": "A map of tags to add to load balancer"
                            },
                            "listener_ssl_policy_default": {
                                "default": "ELBSecurityPolicy-2016-08",
                                "description": "The security policy if using HTTPS externally on the load balancer. [See](https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-security-policy-table.html)."
                            },
                            "load_balancer_create_timeout": {
                                "default": "10m",
                                "description": "Timeout value when creating the ALB."
                            },
                            "load_balancer_delete_timeout": {
                                "default": "10m",
                                "description": "Timeout value when deleting the ALB."
                            },
                            "load_balancer_type": {
                                "default": "application",
                                "description": "The type of load balancer to create. Possible values are application or network."
                            },
                            "load_balancer_update_timeout": {
                                "default": "10m",
                                "description": "Timeout value when updating the ALB."
                            },
                            "name": {
                                "default": null,
                                "description": "The resource name and Name tag of the load balancer."
                            },
                            "name_prefix": {
                                "default": null,
                                "description": "The resource name prefix and Name tag of the load balancer. Cannot be longer than 6 characters"
                            },
                            "security_groups": {
                                "default": [],
                                "description": "The security groups to attach to the load balancer. e.g. [\"sg-edcd9784\",\"sg-edcd9785\"]"
                            },
                            "subnet_mapping": {
                                "default": [],
                                "description": "A list of subnet mapping blocks describing subnets to attach to network load balancer"
                            },
                            "subnets": {
                                "default": null,
                                "description": "A list of subnets to associate with the load balancer. e.g. ['subnet-1a2b3c4d','subnet-1a2b3c4e','subnet-1a2b3c4f']"
                            },
                            "tags": {
                                "default": {},
                                "description": "A map of tags to add to all resources"
                            },
                            "target_group_tags": {
                                "default": {},
                                "description": "A map of tags to add to all target groups"
                            },
                            "target_groups": {
                                "default": [],
                                "description": "A list of maps containing key/value pairs that define the target groups to be created. Order of these maps is important and the index of these are to be referenced in listener definitions. Required key/values: name, backend_protocol, backend_port"
                            },
                            "vpc_id": {
                                "default": null,
                                "description": "VPC id where the load balancer and other resources will be deployed."
                            }
                        }
                    },
                    "version_constraint": "~\u003e 5.0"
                },
                "vpc": {
                    "source": "terraform-aws-modules/vpc/aws",
                    "expressions": {
                        "azs": {
                            "references": [
                                "data.aws_availability_zones.this.names",
                                "data.aws_availability_zones.this"
                            ]
                        },
                        "cidr": {
                            "references": [
                                "var.vpc_cidr"
                            ]
                        },
                        "enable_dns_hostnames": {
                            "constant_value": true
                        },
                        "enable_nat_gateway": {
                            "constant_value": true
                        },
                        "name": {
                            "references": [
                                "var.prefix",
                                "var.environment"
                            ]
                        },
                        "one_nat_gateway_per_az": {
                            "constant_value": false
                        },
                        "private_subnets": {
                            "references": [
                                "var.private_subnet_cidrs"
                            ]
                        },
                        "public_subnets": {
                            "references": [
                                "var.public_subnet_cidrs"
                            ]
                        },
                        "single_nat_gateway": {
                            "constant_value": false
                        },
                        "tags": {
                            "references": [
                                "var.tags"
                            ]
                        }
                    },
                    "module": {
                        "outputs": {
                            "azs": {
                                "expression": {
                                    "references": [
                                        "var.azs"
                                    ]
                                },
                                "description": "A list of availability zones specified as argument to this module"
                            },
                            "cgw_arns": {
                                "expression": {
                                    "references": [
                                        "aws_customer_gateway.this"
                                    ]
                                },
                                "description": "List of ARNs of Customer Gateway"
                            },
                            "cgw_ids": {
                                "expression": {
                                    "references": [
                                        "aws_customer_gateway.this"
                                    ]
                                },
                                "description": "List of IDs of Customer Gateway"
                            },
                            "database_internet_gateway_route_id": {
                                "expression": {
                                    "references": [
                                        "aws_route.database_internet_gateway"
                                    ]
                                },
                                "description": "ID of the database internet gateway route."
                            },
                            "database_ipv6_egress_route_id": {
                                "expression": {
                                    "references": [
                                        "aws_route.database_ipv6_egress"
                                    ]
                                },
                                "description": "ID of the database IPv6 egress route."
                            },
                            "database_nat_gateway_route_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route.database_nat_gateway"
                                    ]
                                },
                                "description": "List of IDs of the database nat gateway route."
                            },
                            "database_network_acl_arn": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.database"
                                    ]
                                },
                                "description": "ARN of the database network ACL"
                            },
                            "database_network_acl_id": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.database"
                                    ]
                                },
                                "description": "ID of the database network ACL"
                            },
                            "database_route_table_association_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route_table_association.database"
                                    ]
                                },
                                "description": "List of IDs of the database route table association"
                            },
                            "database_route_table_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route_table.database",
                                        "aws_route_table.database",
                                        "aws_route_table.private"
                                    ]
                                },
                                "description": "List of IDs of database route tables"
                            },
                            "database_subnet_arns": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.database"
                                    ]
                                },
                                "description": "List of ARNs of database subnets"
                            },
                            "database_subnet_group": {
                                "expression": {
                                    "references": [
                                        "aws_db_subnet_group.database"
                                    ]
                                },
                                "description": "ID of database subnet group"
                            },
                            "database_subnet_group_name": {
                                "expression": {
                                    "references": [
                                        "aws_db_subnet_group.database"
                                    ]
                                },
                                "description": "Name of database subnet group"
                            },
                            "database_subnets": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.database"
                                    ]
                                },
                                "description": "List of IDs of database subnets"
                            },
                            "database_subnets_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.database"
                                    ]
                                },
                                "description": "List of cidr_blocks of database subnets"
                            },
                            "database_subnets_ipv6_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.database"
                                    ]
                                },
                                "description": "List of IPv6 cidr_blocks of database subnets in an IPv6 enabled VPC"
                            },
                            "default_network_acl_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc.this"
                                    ]
                                },
                                "description": "The ID of the default network ACL"
                            },
                            "default_route_table_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc.this"
                                    ]
                                },
                                "description": "The ID of the default route table"
                            },
                            "default_security_group_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc.this"
                                    ]
                                },
                                "description": "The ID of the security group created by default on VPC creation"
                            },
                            "default_vpc_arn": {
                                "expression": {
                                    "references": [
                                        "aws_default_vpc.this"
                                    ]
                                },
                                "description": "The ARN of the Default VPC"
                            },
                            "default_vpc_cidr_block": {
                                "expression": {
                                    "references": [
                                        "aws_default_vpc.this"
                                    ]
                                },
                                "description": "The CIDR block of the Default VPC"
                            },
                            "default_vpc_default_network_acl_id": {
                                "expression": {
                                    "references": [
                                        "aws_default_vpc.this"
                                    ]
                                },
                                "description": "The ID of the default network ACL of the Default VPC"
                            },
                            "default_vpc_default_route_table_id": {
                                "expression": {
                                    "references": [
                                        "aws_default_vpc.this"
                                    ]
                                },
                                "description": "The ID of the default route table of the Default VPC"
                            },
                            "default_vpc_default_security_group_id": {
                                "expression": {
                                    "references": [
                                        "aws_default_vpc.this"
                                    ]
                                },
                                "description": "The ID of the security group created by default on Default VPC creation"
                            },
                            "default_vpc_enable_dns_hostnames": {
                                "expression": {
                                    "references": [
                                        "aws_default_vpc.this"
                                    ]
                                },
                                "description": "Whether or not the Default VPC has DNS hostname support"
                            },
                            "default_vpc_enable_dns_support": {
                                "expression": {
                                    "references": [
                                        "aws_default_vpc.this"
                                    ]
                                },
                                "description": "Whether or not the Default VPC has DNS support"
                            },
                            "default_vpc_id": {
                                "expression": {
                                    "references": [
                                        "aws_default_vpc.this"
                                    ]
                                },
                                "description": "The ID of the Default VPC"
                            },
                            "default_vpc_instance_tenancy": {
                                "expression": {
                                    "references": [
                                        "aws_default_vpc.this"
                                    ]
                                },
                                "description": "Tenancy of instances spin up within Default VPC"
                            },
                            "default_vpc_main_route_table_id": {
                                "expression": {
                                    "references": [
                                        "aws_default_vpc.this"
                                    ]
                                },
                                "description": "The ID of the main route table associated with the Default VPC"
                            },
                            "egress_only_internet_gateway_id": {
                                "expression": {
                                    "references": [
                                        "aws_egress_only_internet_gateway.this"
                                    ]
                                },
                                "description": "The ID of the egress only Internet Gateway"
                            },
                            "elasticache_network_acl_arn": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.elasticache"
                                    ]
                                },
                                "description": "ARN of the elasticache network ACL"
                            },
                            "elasticache_network_acl_id": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.elasticache"
                                    ]
                                },
                                "description": "ID of the elasticache network ACL"
                            },
                            "elasticache_route_table_association_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route_table_association.elasticache"
                                    ]
                                },
                                "description": "List of IDs of the elasticache route table association"
                            },
                            "elasticache_route_table_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route_table.elasticache",
                                        "aws_route_table.elasticache",
                                        "aws_route_table.private"
                                    ]
                                },
                                "description": "List of IDs of elasticache route tables"
                            },
                            "elasticache_subnet_arns": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.elasticache"
                                    ]
                                },
                                "description": "List of ARNs of elasticache subnets"
                            },
                            "elasticache_subnet_group": {
                                "expression": {
                                    "references": [
                                        "aws_elasticache_subnet_group.elasticache"
                                    ]
                                },
                                "description": "ID of elasticache subnet group"
                            },
                            "elasticache_subnet_group_name": {
                                "expression": {
                                    "references": [
                                        "aws_elasticache_subnet_group.elasticache"
                                    ]
                                },
                                "description": "Name of elasticache subnet group"
                            },
                            "elasticache_subnets": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.elasticache"
                                    ]
                                },
                                "description": "List of IDs of elasticache subnets"
                            },
                            "elasticache_subnets_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.elasticache"
                                    ]
                                },
                                "description": "List of cidr_blocks of elasticache subnets"
                            },
                            "elasticache_subnets_ipv6_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.elasticache"
                                    ]
                                },
                                "description": "List of IPv6 cidr_blocks of elasticache subnets in an IPv6 enabled VPC"
                            },
                            "igw_arn": {
                                "expression": {
                                    "references": [
                                        "aws_internet_gateway.this"
                                    ]
                                },
                                "description": "The ARN of the Internet Gateway"
                            },
                            "igw_id": {
                                "expression": {
                                    "references": [
                                        "aws_internet_gateway.this"
                                    ]
                                },
                                "description": "The ID of the Internet Gateway"
                            },
                            "intra_network_acl_arn": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.intra"
                                    ]
                                },
                                "description": "ARN of the intra network ACL"
                            },
                            "intra_network_acl_id": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.intra"
                                    ]
                                },
                                "description": "ID of the intra network ACL"
                            },
                            "intra_route_table_association_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route_table_association.intra"
                                    ]
                                },
                                "description": "List of IDs of the intra route table association"
                            },
                            "intra_route_table_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route_table.intra"
                                    ]
                                },
                                "description": "List of IDs of intra route tables"
                            },
                            "intra_subnet_arns": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.intra"
                                    ]
                                },
                                "description": "List of ARNs of intra subnets"
                            },
                            "intra_subnets": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.intra"
                                    ]
                                },
                                "description": "List of IDs of intra subnets"
                            },
                            "intra_subnets_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.intra"
                                    ]
                                },
                                "description": "List of cidr_blocks of intra subnets"
                            },
                            "intra_subnets_ipv6_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.intra"
                                    ]
                                },
                                "description": "List of IPv6 cidr_blocks of intra subnets in an IPv6 enabled VPC"
                            },
                            "name": {
                                "expression": {
                                    "references": [
                                        "var.name"
                                    ]
                                },
                                "description": "The name of the VPC specified as argument to this module"
                            },
                            "nat_ids": {
                                "expression": {
                                    "references": [
                                        "aws_eip.nat"
                                    ]
                                },
                                "description": "List of allocation ID of Elastic IPs created for AWS NAT Gateway"
                            },
                            "nat_public_ips": {
                                "expression": {
                                    "references": [
                                        "var.reuse_nat_ips",
                                        "var.external_nat_ips",
                                        "aws_eip.nat"
                                    ]
                                },
                                "description": "List of public Elastic IPs created for AWS NAT Gateway"
                            },
                            "natgw_ids": {
                                "expression": {
                                    "references": [
                                        "aws_nat_gateway.this"
                                    ]
                                },
                                "description": "List of NAT Gateway IDs"
                            },
                            "outpost_network_acl_arn": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.outpost"
                                    ]
                                },
                                "description": "ARN of the outpost network ACL"
                            },
                            "outpost_network_acl_id": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.outpost"
                                    ]
                                },
                                "description": "ID of the outpost network ACL"
                            },
                            "outpost_subnet_arns": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.outpost"
                                    ]
                                },
                                "description": "List of ARNs of outpost subnets"
                            },
                            "outpost_subnets": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.outpost"
                                    ]
                                },
                                "description": "List of IDs of outpost subnets"
                            },
                            "outpost_subnets_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.outpost"
                                    ]
                                },
                                "description": "List of cidr_blocks of outpost subnets"
                            },
                            "outpost_subnets_ipv6_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.outpost"
                                    ]
                                },
                                "description": "List of IPv6 cidr_blocks of outpost subnets in an IPv6 enabled VPC"
                            },
                            "private_ipv6_egress_route_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route.private_ipv6_egress"
                                    ]
                                },
                                "description": "List of IDs of the ipv6 egress route."
                            },
                            "private_nat_gateway_route_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route.private_nat_gateway"
                                    ]
                                },
                                "description": "List of IDs of the private nat gateway route."
                            },
                            "private_network_acl_arn": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.private"
                                    ]
                                },
                                "description": "ARN of the private network ACL"
                            },
                            "private_network_acl_id": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.private"
                                    ]
                                },
                                "description": "ID of the private network ACL"
                            },
                            "private_route_table_association_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route_table_association.private"
                                    ]
                                },
                                "description": "List of IDs of the private route table association"
                            },
                            "private_route_table_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route_table.private"
                                    ]
                                },
                                "description": "List of IDs of private route tables"
                            },
                            "private_subnet_arns": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.private"
                                    ]
                                },
                                "description": "List of ARNs of private subnets"
                            },
                            "private_subnets": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.private"
                                    ]
                                },
                                "description": "List of IDs of private subnets"
                            },
                            "private_subnets_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.private"
                                    ]
                                },
                                "description": "List of cidr_blocks of private subnets"
                            },
                            "private_subnets_ipv6_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.private"
                                    ]
                                },
                                "description": "List of IPv6 cidr_blocks of private subnets in an IPv6 enabled VPC"
                            },
                            "public_internet_gateway_ipv6_route_id": {
                                "expression": {
                                    "references": [
                                        "aws_route.public_internet_gateway_ipv6"
                                    ]
                                },
                                "description": "ID of the IPv6 internet gateway route."
                            },
                            "public_internet_gateway_route_id": {
                                "expression": {
                                    "references": [
                                        "aws_route.public_internet_gateway"
                                    ]
                                },
                                "description": "ID of the internet gateway route."
                            },
                            "public_network_acl_arn": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.public"
                                    ]
                                },
                                "description": "ARN of the public network ACL"
                            },
                            "public_network_acl_id": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.public"
                                    ]
                                },
                                "description": "ID of the public network ACL"
                            },
                            "public_route_table_association_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route_table_association.public"
                                    ]
                                },
                                "description": "List of IDs of the public route table association"
                            },
                            "public_route_table_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route_table.public"
                                    ]
                                },
                                "description": "List of IDs of public route tables"
                            },
                            "public_subnet_arns": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.public"
                                    ]
                                },
                                "description": "List of ARNs of public subnets"
                            },
                            "public_subnets": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.public"
                                    ]
                                },
                                "description": "List of IDs of public subnets"
                            },
                            "public_subnets_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.public"
                                    ]
                                },
                                "description": "List of cidr_blocks of public subnets"
                            },
                            "public_subnets_ipv6_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.public"
                                    ]
                                },
                                "description": "List of IPv6 cidr_blocks of public subnets in an IPv6 enabled VPC"
                            },
                            "redshift_network_acl_arn": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.redshift"
                                    ]
                                },
                                "description": "ARN of the redshift network ACL"
                            },
                            "redshift_network_acl_id": {
                                "expression": {
                                    "references": [
                                        "aws_network_acl.redshift"
                                    ]
                                },
                                "description": "ID of the redshift network ACL"
                            },
                            "redshift_public_route_table_association_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route_table_association.redshift_public"
                                    ]
                                },
                                "description": "List of IDs of the public redshidt route table association"
                            },
                            "redshift_route_table_association_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route_table_association.redshift"
                                    ]
                                },
                                "description": "List of IDs of the redshift route table association"
                            },
                            "redshift_route_table_ids": {
                                "expression": {
                                    "references": [
                                        "aws_route_table.redshift",
                                        "aws_route_table.redshift",
                                        "aws_route_table.private"
                                    ]
                                },
                                "description": "List of IDs of redshift route tables"
                            },
                            "redshift_subnet_arns": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.redshift"
                                    ]
                                },
                                "description": "List of ARNs of redshift subnets"
                            },
                            "redshift_subnet_group": {
                                "expression": {
                                    "references": [
                                        "aws_redshift_subnet_group.redshift"
                                    ]
                                },
                                "description": "ID of redshift subnet group"
                            },
                            "redshift_subnets": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.redshift"
                                    ]
                                },
                                "description": "List of IDs of redshift subnets"
                            },
                            "redshift_subnets_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.redshift"
                                    ]
                                },
                                "description": "List of cidr_blocks of redshift subnets"
                            },
                            "redshift_subnets_ipv6_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_subnet.redshift"
                                    ]
                                },
                                "description": "List of IPv6 cidr_blocks of redshift subnets in an IPv6 enabled VPC"
                            },
                            "this_customer_gateway": {
                                "expression": {
                                    "references": [
                                        "aws_customer_gateway.this"
                                    ]
                                },
                                "description": "Map of Customer Gateway attributes"
                            },
                            "vgw_arn": {
                                "expression": {
                                    "references": [
                                        "aws_vpn_gateway.this"
                                    ]
                                },
                                "description": "The ARN of the VPN Gateway"
                            },
                            "vgw_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpn_gateway.this",
                                        "aws_vpn_gateway_attachment.this"
                                    ]
                                },
                                "description": "The ID of the VPN Gateway"
                            },
                            "vpc_arn": {
                                "expression": {
                                    "references": [
                                        "aws_vpc.this"
                                    ]
                                },
                                "description": "The ARN of the VPC"
                            },
                            "vpc_cidr_block": {
                                "expression": {
                                    "references": [
                                        "aws_vpc.this"
                                    ]
                                },
                                "description": "The CIDR block of the VPC"
                            },
                            "vpc_enable_dns_hostnames": {
                                "expression": {
                                    "references": [
                                        "aws_vpc.this"
                                    ]
                                },
                                "description": "Whether or not the VPC has DNS hostname support"
                            },
                            "vpc_enable_dns_support": {
                                "expression": {
                                    "references": [
                                        "aws_vpc.this"
                                    ]
                                },
                                "description": "Whether or not the VPC has DNS support"
                            },
                            "vpc_endpoint_access_analyzer_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.access_analyzer"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for Access Analyzer."
                            },
                            "vpc_endpoint_access_analyzer_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.access_analyzer"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for Access Analyzer"
                            },
                            "vpc_endpoint_access_analyzer_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.access_analyzer"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for Access Analyzer."
                            },
                            "vpc_endpoint_acm_pca_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.acm_pca"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for ACM PCA."
                            },
                            "vpc_endpoint_acm_pca_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.acm_pca"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for ACM PCA"
                            },
                            "vpc_endpoint_acm_pca_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.acm_pca"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for ACM PCA."
                            },
                            "vpc_endpoint_apigw_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.apigw"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for APIGW."
                            },
                            "vpc_endpoint_apigw_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.apigw"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for APIGW"
                            },
                            "vpc_endpoint_apigw_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.apigw"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for APIGW."
                            },
                            "vpc_endpoint_appmesh_envoy_management_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.appmesh_envoy_management"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for AppMesh."
                            },
                            "vpc_endpoint_appmesh_envoy_management_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.appmesh_envoy_management"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for AppMesh"
                            },
                            "vpc_endpoint_appmesh_envoy_management_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.appmesh_envoy_management"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for AppMesh."
                            },
                            "vpc_endpoint_appstream_api_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.appstream_api"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for AppStream API."
                            },
                            "vpc_endpoint_appstream_api_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.appstream_api"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for AppStream API"
                            },
                            "vpc_endpoint_appstream_api_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.appstream_api"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for AppStream API."
                            },
                            "vpc_endpoint_appstream_streaming_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.appstream_streaming"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for AppStream Streaming."
                            },
                            "vpc_endpoint_appstream_streaming_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.appstream_streaming"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for AppStream Streaming"
                            },
                            "vpc_endpoint_appstream_streaming_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.appstream_streaming"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for AppStream Streaming."
                            },
                            "vpc_endpoint_athena_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.athena"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for Athena."
                            },
                            "vpc_endpoint_athena_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.athena"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for Athena"
                            },
                            "vpc_endpoint_athena_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.athena"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for Athena."
                            },
                            "vpc_endpoint_auto_scaling_plans_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.auto_scaling_plans"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for Auto Scaling Plans."
                            },
                            "vpc_endpoint_auto_scaling_plans_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.auto_scaling_plans"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for Auto Scaling Plans"
                            },
                            "vpc_endpoint_auto_scaling_plans_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.auto_scaling_plans"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for Auto Scaling Plans."
                            },
                            "vpc_endpoint_cloud_directory_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.cloud_directory"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for Cloud Directory."
                            },
                            "vpc_endpoint_cloud_directory_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.cloud_directory"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for Cloud Directory"
                            },
                            "vpc_endpoint_cloud_directory_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.cloud_directory"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for Cloud Directory."
                            },
                            "vpc_endpoint_cloudformation_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.cloudformation"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for Cloudformation."
                            },
                            "vpc_endpoint_cloudformation_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.cloudformation"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for Cloudformation"
                            },
                            "vpc_endpoint_cloudformation_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.cloudformation"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for Cloudformation."
                            },
                            "vpc_endpoint_cloudtrail_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.cloudtrail"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for CloudTrail."
                            },
                            "vpc_endpoint_cloudtrail_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.cloudtrail"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for CloudTrail"
                            },
                            "vpc_endpoint_cloudtrail_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.cloudtrail"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for CloudTrail."
                            },
                            "vpc_endpoint_codeartifact_api_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.codeartifact_api"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for Codeartifact API."
                            },
                            "vpc_endpoint_codeartifact_api_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.codeartifact_api"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for Codeartifact API"
                            },
                            "vpc_endpoint_codeartifact_api_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.codeartifact_api"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for Codeartifact API."
                            },
                            "vpc_endpoint_codeartifact_repositories_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.codeartifact_repositories"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for Codeartifact repositories."
                            },
                            "vpc_endpoint_codeartifact_repositories_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.codeartifact_repositories"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for Codeartifact repositories"
                            },
                            "vpc_endpoint_codeartifact_repositories_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.codeartifact_repositories"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for Codeartifact repositories."
                            },
                            "vpc_endpoint_codebuild_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.codebuild"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for codebuild."
                            },
                            "vpc_endpoint_codebuild_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.codebuild"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for codebuild"
                            },
                            "vpc_endpoint_codebuild_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.codebuild"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for codebuild."
                            },
                            "vpc_endpoint_codecommit_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.codecommit"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for codecommit."
                            },
                            "vpc_endpoint_codecommit_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.codecommit"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for codecommit"
                            },
                            "vpc_endpoint_codecommit_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.codecommit"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for codecommit."
                            },
                            "vpc_endpoint_codepipeline_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.codepipeline"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for CodePipeline."
                            },
                            "vpc_endpoint_codepipeline_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.codepipeline"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for CodePipeline"
                            },
                            "vpc_endpoint_codepipeline_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.codepipeline"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for CodePipeline."
                            },
                            "vpc_endpoint_config_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.config"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for config."
                            },
                            "vpc_endpoint_config_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.config"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for config"
                            },
                            "vpc_endpoint_config_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.config"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for config."
                            },
                            "vpc_endpoint_datasync_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.datasync"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for DataSync."
                            },
                            "vpc_endpoint_datasync_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.datasync"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for DataSync"
                            },
                            "vpc_endpoint_datasync_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.datasync"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for DataSync."
                            },
                            "vpc_endpoint_dms_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.sns"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for DMS."
                            },
                            "vpc_endpoint_dms_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.sns"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for DMS"
                            },
                            "vpc_endpoint_dms_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.sns"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for DMS."
                            },
                            "vpc_endpoint_dynamodb_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.dynamodb"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for DynamoDB"
                            },
                            "vpc_endpoint_dynamodb_pl_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.dynamodb"
                                    ]
                                },
                                "description": "The prefix list for the DynamoDB VPC endpoint."
                            },
                            "vpc_endpoint_ebs_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.ebs"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for EBS."
                            },
                            "vpc_endpoint_ebs_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.ebs"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for EBS"
                            },
                            "vpc_endpoint_ebs_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.ebs"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for EBS."
                            },
                            "vpc_endpoint_ec2_autoscaling_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.ec2_autoscaling"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for EC2 Autoscaling."
                            },
                            "vpc_endpoint_ec2_autoscaling_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.ec2_autoscaling"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for EC2 Autoscaling"
                            },
                            "vpc_endpoint_ec2_autoscaling_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.ec2_autoscaling"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for EC2 Autoscaling"
                            },
                            "vpc_endpoint_ec2_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.ec2"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for EC2."
                            },
                            "vpc_endpoint_ec2_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.ec2"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for EC2"
                            },
                            "vpc_endpoint_ec2_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.ec2"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for EC2"
                            },
                            "vpc_endpoint_ec2messages_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.ec2messages"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for EC2MESSAGES."
                            },
                            "vpc_endpoint_ec2messages_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.ec2messages"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for EC2MESSAGES"
                            },
                            "vpc_endpoint_ec2messages_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.ec2messages"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for EC2MESSAGES"
                            },
                            "vpc_endpoint_ecr_api_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.ecr_api"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for ECR API."
                            },
                            "vpc_endpoint_ecr_api_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.ecr_api"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for ECR API"
                            },
                            "vpc_endpoint_ecr_api_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.ecr_api"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for ECR API."
                            },
                            "vpc_endpoint_ecr_dkr_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.ecr_dkr"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for ECR DKR."
                            },
                            "vpc_endpoint_ecr_dkr_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.ecr_dkr"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for ECR DKR"
                            },
                            "vpc_endpoint_ecr_dkr_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.ecr_dkr"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for ECR DKR."
                            },
                            "vpc_endpoint_ecs_agent_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.ecs_agent"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for ECS Agent."
                            },
                            "vpc_endpoint_ecs_agent_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.ecs_agent"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for ECS Agent"
                            },
                            "vpc_endpoint_ecs_agent_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.ecs_agent"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for ECS Agent."
                            },
                            "vpc_endpoint_ecs_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.ecs"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for ECS."
                            },
                            "vpc_endpoint_ecs_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.ecs"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for ECS"
                            },
                            "vpc_endpoint_ecs_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.ecs"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for ECS."
                            },
                            "vpc_endpoint_ecs_telemetry_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.ecs_telemetry"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for ECS Telemetry."
                            },
                            "vpc_endpoint_ecs_telemetry_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.ecs_telemetry"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for ECS Telemetry"
                            },
                            "vpc_endpoint_ecs_telemetry_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.ecs_telemetry"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for ECS Telemetry."
                            },
                            "vpc_endpoint_efs_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.efs"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for EFS."
                            },
                            "vpc_endpoint_efs_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.efs"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for EFS"
                            },
                            "vpc_endpoint_efs_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.efs"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for EFS."
                            },
                            "vpc_endpoint_elastic_inference_runtime_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.elastic_inference_runtime"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for Elastic Inference Runtime."
                            },
                            "vpc_endpoint_elastic_inference_runtime_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.elastic_inference_runtime"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for Elastic Inference Runtime"
                            },
                            "vpc_endpoint_elastic_inference_runtime_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.elastic_inference_runtime"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for Elastic Inference Runtime."
                            },
                            "vpc_endpoint_elasticbeanstalk_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.elasticbeanstalk"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for Elastic Beanstalk."
                            },
                            "vpc_endpoint_elasticbeanstalk_health_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.elasticbeanstalk_health"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for Elastic Beanstalk Health."
                            },
                            "vpc_endpoint_elasticbeanstalk_health_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.elasticbeanstalk_health"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for Elastic Beanstalk Health"
                            },
                            "vpc_endpoint_elasticbeanstalk_health_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.elasticbeanstalk_health"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for Elastic Beanstalk Health."
                            },
                            "vpc_endpoint_elasticbeanstalk_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.elasticbeanstalk"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for Elastic Beanstalk"
                            },
                            "vpc_endpoint_elasticbeanstalk_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.elasticbeanstalk"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for Elastic Beanstalk."
                            },
                            "vpc_endpoint_elasticloadbalancing_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.elasticloadbalancing"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for Elastic Load Balancing."
                            },
                            "vpc_endpoint_elasticloadbalancing_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.elasticloadbalancing"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for Elastic Load Balancing"
                            },
                            "vpc_endpoint_elasticloadbalancing_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.elasticloadbalancing"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for Elastic Load Balancing."
                            },
                            "vpc_endpoint_elasticmapreduce_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.emr"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for EMR."
                            },
                            "vpc_endpoint_elasticmapreduce_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.emr"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for EMR"
                            },
                            "vpc_endpoint_elasticmapreduce_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.emr"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for EMR."
                            },
                            "vpc_endpoint_events_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.events"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for CloudWatch Events."
                            },
                            "vpc_endpoint_events_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.events"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for CloudWatch Events"
                            },
                            "vpc_endpoint_events_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.events"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for CloudWatch Events."
                            },
                            "vpc_endpoint_git_codecommit_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.git_codecommit"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for git_codecommit."
                            },
                            "vpc_endpoint_git_codecommit_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.git_codecommit"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for git_codecommit"
                            },
                            "vpc_endpoint_git_codecommit_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.git_codecommit"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for git_codecommit."
                            },
                            "vpc_endpoint_glue_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.glue"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for Glue."
                            },
                            "vpc_endpoint_glue_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.glue"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for Glue"
                            },
                            "vpc_endpoint_glue_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.glue"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for Glue."
                            },
                            "vpc_endpoint_kinesis_firehose_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.kinesis_firehose"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for Kinesis Firehose."
                            },
                            "vpc_endpoint_kinesis_firehose_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.kinesis_firehose"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for Kinesis Firehose"
                            },
                            "vpc_endpoint_kinesis_firehose_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.kinesis_firehose"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for Kinesis Firehose."
                            },
                            "vpc_endpoint_kinesis_streams_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.kinesis_streams"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for Kinesis Streams."
                            },
                            "vpc_endpoint_kinesis_streams_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.kinesis_streams"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for Kinesis Streams"
                            },
                            "vpc_endpoint_kinesis_streams_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.kinesis_streams"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for Kinesis Streams."
                            },
                            "vpc_endpoint_kms_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.kms"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for KMS."
                            },
                            "vpc_endpoint_kms_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.kms"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for KMS"
                            },
                            "vpc_endpoint_kms_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.kms"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for KMS."
                            },
                            "vpc_endpoint_lambda_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.lambda"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for Lambda."
                            },
                            "vpc_endpoint_lambda_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.lambda"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for Lambda"
                            },
                            "vpc_endpoint_lambda_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.lambda"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for Lambda."
                            },
                            "vpc_endpoint_logs_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.logs"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for CloudWatch Logs."
                            },
                            "vpc_endpoint_logs_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.logs"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for CloudWatch Logs"
                            },
                            "vpc_endpoint_logs_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.logs"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for CloudWatch Logs."
                            },
                            "vpc_endpoint_monitoring_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.monitoring"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for CloudWatch Monitoring."
                            },
                            "vpc_endpoint_monitoring_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.monitoring"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for CloudWatch Monitoring"
                            },
                            "vpc_endpoint_monitoring_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.monitoring"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for CloudWatch Monitoring."
                            },
                            "vpc_endpoint_qldb_session_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.qldb_session"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for QLDB Session."
                            },
                            "vpc_endpoint_qldb_session_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.qldb_session"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for QLDB Session"
                            },
                            "vpc_endpoint_qldb_session_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.qldb_session"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for QLDB Session."
                            },
                            "vpc_endpoint_rds_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.rds"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for RDS."
                            },
                            "vpc_endpoint_rds_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.rds"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for RDS"
                            },
                            "vpc_endpoint_rds_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.rds"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for RDS."
                            },
                            "vpc_endpoint_rekognition_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.rekognition"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for Rekognition."
                            },
                            "vpc_endpoint_rekognition_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.rekognition"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for Rekognition"
                            },
                            "vpc_endpoint_rekognition_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.rekognition"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for Rekognition."
                            },
                            "vpc_endpoint_s3_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.s3"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for S3"
                            },
                            "vpc_endpoint_s3_pl_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.s3"
                                    ]
                                },
                                "description": "The prefix list for the S3 VPC endpoint."
                            },
                            "vpc_endpoint_sagemaker_api_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.sagemaker_api"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for SageMaker API."
                            },
                            "vpc_endpoint_sagemaker_api_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.sagemaker_api"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for SageMaker API"
                            },
                            "vpc_endpoint_sagemaker_api_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.sagemaker_api"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for SageMaker API."
                            },
                            "vpc_endpoint_sagemaker_runtime_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.sagemaker_runtime"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for SageMaker Runtime."
                            },
                            "vpc_endpoint_sagemaker_runtime_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.sagemaker_runtime"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for SageMaker Runtime"
                            },
                            "vpc_endpoint_sagemaker_runtime_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.sagemaker_runtime"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for SageMaker Runtime."
                            },
                            "vpc_endpoint_secretsmanager_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.secretsmanager"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for secretsmanager."
                            },
                            "vpc_endpoint_secretsmanager_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.secretsmanager"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for secretsmanager"
                            },
                            "vpc_endpoint_secretsmanager_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.secretsmanager"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for secretsmanager."
                            },
                            "vpc_endpoint_servicecatalog_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.servicecatalog"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for Service Catalog."
                            },
                            "vpc_endpoint_servicecatalog_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.servicecatalog"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for Service Catalog"
                            },
                            "vpc_endpoint_servicecatalog_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.servicecatalog"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for Service Catalog."
                            },
                            "vpc_endpoint_ses_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.ses"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for SES."
                            },
                            "vpc_endpoint_ses_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.ses"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for SES"
                            },
                            "vpc_endpoint_ses_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.ses"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for SES."
                            },
                            "vpc_endpoint_sms_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.sms"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for SMS."
                            },
                            "vpc_endpoint_sms_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.sms"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for SMS"
                            },
                            "vpc_endpoint_sms_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.sms"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for SMS."
                            },
                            "vpc_endpoint_sns_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.sns"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for SNS."
                            },
                            "vpc_endpoint_sns_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.sns"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for SNS"
                            },
                            "vpc_endpoint_sns_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.sns"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for SNS."
                            },
                            "vpc_endpoint_sqs_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.sqs"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for SQS."
                            },
                            "vpc_endpoint_sqs_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.sqs"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for SQS"
                            },
                            "vpc_endpoint_sqs_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.sqs"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for SQS."
                            },
                            "vpc_endpoint_ssm_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.ssm"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for SSM."
                            },
                            "vpc_endpoint_ssm_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.ssm"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for SSM"
                            },
                            "vpc_endpoint_ssm_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.ssm"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for SSM."
                            },
                            "vpc_endpoint_ssmmessages_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.ssmmessages"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for SSMMESSAGES."
                            },
                            "vpc_endpoint_ssmmessages_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.ssmmessages"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for SSMMESSAGES"
                            },
                            "vpc_endpoint_ssmmessages_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.ssmmessages"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for SSMMESSAGES."
                            },
                            "vpc_endpoint_states_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.states"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for Step Function."
                            },
                            "vpc_endpoint_states_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.states"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for Step Function"
                            },
                            "vpc_endpoint_states_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.states"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for Step Function."
                            },
                            "vpc_endpoint_storagegateway_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.storagegateway"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for Storage Gateway."
                            },
                            "vpc_endpoint_storagegateway_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.storagegateway"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for Storage Gateway"
                            },
                            "vpc_endpoint_storagegateway_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.storagegateway"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for Storage Gateway."
                            },
                            "vpc_endpoint_sts_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.sts"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for STS."
                            },
                            "vpc_endpoint_sts_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.sts"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for STS"
                            },
                            "vpc_endpoint_sts_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.sts"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for STS."
                            },
                            "vpc_endpoint_textract_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.textract"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for Textract."
                            },
                            "vpc_endpoint_textract_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.textract"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for Textract"
                            },
                            "vpc_endpoint_textract_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.textract"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for Textract."
                            },
                            "vpc_endpoint_transfer_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.transfer"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for Transfer."
                            },
                            "vpc_endpoint_transfer_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.transfer"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for Transfer"
                            },
                            "vpc_endpoint_transfer_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.transfer"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for Transfer."
                            },
                            "vpc_endpoint_transferserver_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.transferserver"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for transferserver."
                            },
                            "vpc_endpoint_transferserver_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.transferserver"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for transferserver"
                            },
                            "vpc_endpoint_transferserver_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.transferserver"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for transferserver"
                            },
                            "vpc_endpoint_workspaces_dns_entry": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.workspaces"
                                    ]
                                },
                                "description": "The DNS entries for the VPC Endpoint for Workspaces."
                            },
                            "vpc_endpoint_workspaces_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.workspaces"
                                    ]
                                },
                                "description": "The ID of VPC endpoint for Workspaces"
                            },
                            "vpc_endpoint_workspaces_network_interface_ids": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_endpoint.workspaces"
                                    ]
                                },
                                "description": "One or more network interfaces for the VPC Endpoint for Workspaces."
                            },
                            "vpc_flow_log_cloudwatch_iam_role_arn": {
                                "expression": {
                                    "references": [
                                        "local.flow_log_iam_role_arn"
                                    ]
                                },
                                "description": "The ARN of the IAM role used when pushing logs to Cloudwatch log group"
                            },
                            "vpc_flow_log_destination_arn": {
                                "expression": {
                                    "references": [
                                        "local.flow_log_destination_arn"
                                    ]
                                },
                                "description": "The ARN of the destination for VPC Flow Logs"
                            },
                            "vpc_flow_log_destination_type": {
                                "expression": {
                                    "references": [
                                        "var.flow_log_destination_type"
                                    ]
                                },
                                "description": "The type of the destination for VPC Flow Logs"
                            },
                            "vpc_flow_log_id": {
                                "expression": {
                                    "references": [
                                        "aws_flow_log.this"
                                    ]
                                },
                                "description": "The ID of the Flow Log resource"
                            },
                            "vpc_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc.this"
                                    ]
                                },
                                "description": "The ID of the VPC"
                            },
                            "vpc_instance_tenancy": {
                                "expression": {
                                    "references": [
                                        "aws_vpc.this"
                                    ]
                                },
                                "description": "Tenancy of instances spin up within VPC"
                            },
                            "vpc_ipv6_association_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc.this"
                                    ]
                                },
                                "description": "The association ID for the IPv6 CIDR block"
                            },
                            "vpc_ipv6_cidr_block": {
                                "expression": {
                                    "references": [
                                        "aws_vpc.this"
                                    ]
                                },
                                "description": "The IPv6 CIDR block"
                            },
                            "vpc_main_route_table_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc.this"
                                    ]
                                },
                                "description": "The ID of the main route table associated with this VPC"
                            },
                            "vpc_owner_id": {
                                "expression": {
                                    "references": [
                                        "aws_vpc.this"
                                    ]
                                },
                                "description": "The ID of the AWS account that owns the VPC"
                            },
                            "vpc_secondary_cidr_blocks": {
                                "expression": {
                                    "references": [
                                        "aws_vpc_ipv4_cidr_block_association.this"
                                    ]
                                },
                                "description": "List of secondary CIDR blocks of the VPC"
                            }
                        },
                        "resources": [
                            {
                                "address": "aws_cloudwatch_log_group.flow_log",
                                "mode": "managed",
                                "type": "aws_cloudwatch_log_group",
                                "name": "flow_log",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "kms_key_id": {
                                        "references": [
                                            "var.flow_log_cloudwatch_log_group_kms_key_id"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.flow_log_cloudwatch_log_group_name_prefix",
                                            "local.vpc_id"
                                        ]
                                    },
                                    "retention_in_days": {
                                        "references": [
                                            "var.flow_log_cloudwatch_log_group_retention_in_days"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags",
                                            "var.vpc_flow_log_tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_flow_log_cloudwatch_log_group"
                                    ]
                                }
                            },
                            {
                                "address": "aws_customer_gateway.this",
                                "mode": "managed",
                                "type": "aws_customer_gateway",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "bgp_asn": {
                                        "references": [
                                            "each.value[\"bgp_asn\"]",
                                            "each.value"
                                        ]
                                    },
                                    "ip_address": {
                                        "references": [
                                            "each.value[\"ip_address\"]",
                                            "each.value"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "each.key",
                                            "var.tags",
                                            "var.customer_gateway_tags"
                                        ]
                                    },
                                    "type": {
                                        "constant_value": "ipsec.1"
                                    }
                                },
                                "schema_version": 0,
                                "for_each_expression": {
                                    "references": [
                                        "var.customer_gateways"
                                    ]
                                }
                            },
                            {
                                "address": "aws_db_subnet_group.database",
                                "mode": "managed",
                                "type": "aws_db_subnet_group",
                                "name": "database",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.name"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.name"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "aws_subnet.database"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.tags",
                                            "var.database_subnet_group_tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.database_subnets",
                                        "var.create_database_subnet_group"
                                    ]
                                }
                            },
                            {
                                "address": "aws_default_network_acl.this",
                                "mode": "managed",
                                "type": "aws_default_network_acl",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "default_network_acl_id": {
                                        "references": [
                                            "aws_vpc.this"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "aws_subnet.public",
                                            "aws_subnet.private",
                                            "aws_subnet.intra",
                                            "aws_subnet.database",
                                            "aws_subnet.redshift",
                                            "aws_subnet.elasticache",
                                            "aws_subnet.outpost",
                                            "aws_network_acl.public",
                                            "aws_network_acl.private",
                                            "aws_network_acl.intra",
                                            "aws_network_acl.database",
                                            "aws_network_acl.redshift",
                                            "aws_network_acl.elasticache",
                                            "aws_network_acl.outpost"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.default_network_acl_name",
                                            "var.tags",
                                            "var.default_network_acl_tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.manage_default_network_acl"
                                    ]
                                }
                            },
                            {
                                "address": "aws_default_route_table.default",
                                "mode": "managed",
                                "type": "aws_default_route_table",
                                "name": "default",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "default_route_table_id": {
                                        "references": [
                                            "aws_vpc.this[0].default_route_table_id",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this"
                                        ]
                                    },
                                    "propagating_vgws": {
                                        "references": [
                                            "var.default_route_table_propagating_vgws"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.tags",
                                            "var.default_route_table_tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.manage_default_route_table"
                                    ]
                                }
                            },
                            {
                                "address": "aws_default_security_group.this",
                                "mode": "managed",
                                "type": "aws_default_security_group",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "tags": {
                                        "references": [
                                            "var.default_security_group_name",
                                            "var.tags",
                                            "var.default_security_group_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "aws_vpc.this[0].id",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.manage_default_security_group"
                                    ]
                                }
                            },
                            {
                                "address": "aws_default_vpc.this",
                                "mode": "managed",
                                "type": "aws_default_vpc",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "enable_dns_hostnames": {
                                        "references": [
                                            "var.default_vpc_enable_dns_hostnames"
                                        ]
                                    },
                                    "enable_dns_support": {
                                        "references": [
                                            "var.default_vpc_enable_dns_support"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.default_vpc_name",
                                            "var.tags",
                                            "var.default_vpc_tags"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "var.manage_default_vpc"
                                    ]
                                }
                            },
                            {
                                "address": "aws_egress_only_internet_gateway.this",
                                "mode": "managed",
                                "type": "aws_egress_only_internet_gateway",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.tags",
                                            "var.igw_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.create_egress_only_igw",
                                        "var.enable_ipv6",
                                        "local.max_subnet_length"
                                    ]
                                }
                            },
                            {
                                "address": "aws_eip.nat",
                                "mode": "managed",
                                "type": "aws_eip",
                                "name": "nat",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.azs",
                                            "var.single_nat_gateway",
                                            "count.index",
                                            "var.tags",
                                            "var.nat_eip_tags"
                                        ]
                                    },
                                    "vpc": {
                                        "constant_value": true
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_nat_gateway",
                                        "var.reuse_nat_ips",
                                        "local.nat_gateway_count"
                                    ]
                                }
                            },
                            {
                                "address": "aws_elasticache_subnet_group.elasticache",
                                "mode": "managed",
                                "type": "aws_elasticache_subnet_group",
                                "name": "elasticache",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.name"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.name"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "aws_subnet.elasticache"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.elasticache_subnets",
                                        "var.create_elasticache_subnet_group"
                                    ]
                                }
                            },
                            {
                                "address": "aws_flow_log.this",
                                "mode": "managed",
                                "type": "aws_flow_log",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "iam_role_arn": {
                                        "references": [
                                            "local.flow_log_iam_role_arn"
                                        ]
                                    },
                                    "log_destination": {
                                        "references": [
                                            "local.flow_log_destination_arn"
                                        ]
                                    },
                                    "log_destination_type": {
                                        "references": [
                                            "var.flow_log_destination_type"
                                        ]
                                    },
                                    "log_format": {
                                        "references": [
                                            "var.flow_log_log_format"
                                        ]
                                    },
                                    "max_aggregation_interval": {
                                        "references": [
                                            "var.flow_log_max_aggregation_interval"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags",
                                            "var.vpc_flow_log_tags"
                                        ]
                                    },
                                    "traffic_type": {
                                        "references": [
                                            "var.flow_log_traffic_type"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.enable_flow_log"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_policy.vpc_flow_log_cloudwatch",
                                "mode": "managed",
                                "type": "aws_iam_policy",
                                "name": "vpc_flow_log_cloudwatch",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "name_prefix": {
                                        "constant_value": "vpc-flow-log-to-cloudwatch-"
                                    },
                                    "policy": {
                                        "references": [
                                            "data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0].json",
                                            "data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0]",
                                            "data.aws_iam_policy_document.vpc_flow_log_cloudwatch"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_flow_log_cloudwatch_iam_role"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_role.vpc_flow_log_cloudwatch",
                                "mode": "managed",
                                "type": "aws_iam_role",
                                "name": "vpc_flow_log_cloudwatch",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "assume_role_policy": {
                                        "references": [
                                            "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0].json",
                                            "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0]",
                                            "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role"
                                        ]
                                    },
                                    "name_prefix": {
                                        "constant_value": "vpc-flow-log-role-"
                                    },
                                    "permissions_boundary": {
                                        "references": [
                                            "var.vpc_flow_log_permissions_boundary"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags",
                                            "var.vpc_flow_log_tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_flow_log_cloudwatch_iam_role"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch",
                                "mode": "managed",
                                "type": "aws_iam_role_policy_attachment",
                                "name": "vpc_flow_log_cloudwatch",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy_arn": {
                                        "references": [
                                            "aws_iam_policy.vpc_flow_log_cloudwatch[0].arn",
                                            "aws_iam_policy.vpc_flow_log_cloudwatch[0]",
                                            "aws_iam_policy.vpc_flow_log_cloudwatch"
                                        ]
                                    },
                                    "role": {
                                        "references": [
                                            "aws_iam_role.vpc_flow_log_cloudwatch[0].name",
                                            "aws_iam_role.vpc_flow_log_cloudwatch[0]",
                                            "aws_iam_role.vpc_flow_log_cloudwatch"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_flow_log_cloudwatch_iam_role"
                                    ]
                                }
                            },
                            {
                                "address": "aws_internet_gateway.this",
                                "mode": "managed",
                                "type": "aws_internet_gateway",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.tags",
                                            "var.igw_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.create_igw",
                                        "var.public_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_nat_gateway.this",
                                "mode": "managed",
                                "type": "aws_nat_gateway",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "allocation_id": {
                                        "references": [
                                            "local.nat_gateway_ips",
                                            "var.single_nat_gateway",
                                            "count.index"
                                        ]
                                    },
                                    "subnet_id": {
                                        "references": [
                                            "aws_subnet.public",
                                            "var.single_nat_gateway",
                                            "count.index"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.azs",
                                            "var.single_nat_gateway",
                                            "count.index",
                                            "var.tags",
                                            "var.nat_gateway_tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_nat_gateway",
                                        "local.nat_gateway_count"
                                    ]
                                },
                                "depends_on": [
                                    "aws_internet_gateway.this"
                                ]
                            },
                            {
                                "address": "aws_network_acl.database",
                                "mode": "managed",
                                "type": "aws_network_acl",
                                "name": "database",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "subnet_ids": {
                                        "references": [
                                            "aws_subnet.database"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.database_subnet_suffix",
                                            "var.name",
                                            "var.tags",
                                            "var.database_acl_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "aws_vpc.this"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.database_dedicated_network_acl",
                                        "var.database_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl.elasticache",
                                "mode": "managed",
                                "type": "aws_network_acl",
                                "name": "elasticache",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "subnet_ids": {
                                        "references": [
                                            "aws_subnet.elasticache"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.elasticache_subnet_suffix",
                                            "var.name",
                                            "var.tags",
                                            "var.elasticache_acl_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "aws_vpc.this"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.elasticache_dedicated_network_acl",
                                        "var.elasticache_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl.intra",
                                "mode": "managed",
                                "type": "aws_network_acl",
                                "name": "intra",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "subnet_ids": {
                                        "references": [
                                            "aws_subnet.intra"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.intra_subnet_suffix",
                                            "var.name",
                                            "var.tags",
                                            "var.intra_acl_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "aws_vpc.this"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.intra_dedicated_network_acl",
                                        "var.intra_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl.outpost",
                                "mode": "managed",
                                "type": "aws_network_acl",
                                "name": "outpost",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "subnet_ids": {
                                        "references": [
                                            "aws_subnet.outpost"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.outpost_subnet_suffix",
                                            "var.name",
                                            "var.tags",
                                            "var.outpost_acl_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "aws_vpc.this"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.outpost_dedicated_network_acl",
                                        "var.outpost_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl.private",
                                "mode": "managed",
                                "type": "aws_network_acl",
                                "name": "private",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "subnet_ids": {
                                        "references": [
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.private_subnet_suffix",
                                            "var.name",
                                            "var.tags",
                                            "var.private_acl_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "aws_vpc.this"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.private_dedicated_network_acl",
                                        "var.private_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl.public",
                                "mode": "managed",
                                "type": "aws_network_acl",
                                "name": "public",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "subnet_ids": {
                                        "references": [
                                            "aws_subnet.public"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.public_subnet_suffix",
                                            "var.name",
                                            "var.tags",
                                            "var.public_acl_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "aws_vpc.this"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.public_dedicated_network_acl",
                                        "var.public_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl.redshift",
                                "mode": "managed",
                                "type": "aws_network_acl",
                                "name": "redshift",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "subnet_ids": {
                                        "references": [
                                            "aws_subnet.redshift"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.redshift_subnet_suffix",
                                            "var.name",
                                            "var.tags",
                                            "var.redshift_acl_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "aws_vpc.this"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.redshift_dedicated_network_acl",
                                        "var.redshift_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.database_inbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "database_inbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.database_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": false
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.database_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.database_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.database_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.database_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.database[0].id",
                                            "aws_network_acl.database[0]",
                                            "aws_network_acl.database"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.database_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.database_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.database_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.database_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.database_dedicated_network_acl",
                                        "var.database_subnets",
                                        "var.database_inbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.database_outbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "database_outbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.database_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": true
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.database_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.database_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.database_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.database_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.database[0].id",
                                            "aws_network_acl.database[0]",
                                            "aws_network_acl.database"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.database_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.database_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.database_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.database_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.database_dedicated_network_acl",
                                        "var.database_subnets",
                                        "var.database_outbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.elasticache_inbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "elasticache_inbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.elasticache_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": false
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.elasticache_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.elasticache_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.elasticache_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.elasticache_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.elasticache[0].id",
                                            "aws_network_acl.elasticache[0]",
                                            "aws_network_acl.elasticache"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.elasticache_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.elasticache_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.elasticache_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.elasticache_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.elasticache_dedicated_network_acl",
                                        "var.elasticache_subnets",
                                        "var.elasticache_inbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.elasticache_outbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "elasticache_outbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.elasticache_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": true
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.elasticache_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.elasticache_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.elasticache_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.elasticache_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.elasticache[0].id",
                                            "aws_network_acl.elasticache[0]",
                                            "aws_network_acl.elasticache"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.elasticache_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.elasticache_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.elasticache_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.elasticache_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.elasticache_dedicated_network_acl",
                                        "var.elasticache_subnets",
                                        "var.elasticache_outbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.intra_inbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "intra_inbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.intra_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": false
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.intra_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.intra_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.intra_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.intra_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.intra[0].id",
                                            "aws_network_acl.intra[0]",
                                            "aws_network_acl.intra"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.intra_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.intra_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.intra_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.intra_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.intra_dedicated_network_acl",
                                        "var.intra_subnets",
                                        "var.intra_inbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.intra_outbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "intra_outbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.intra_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": true
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.intra_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.intra_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.intra_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.intra_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.intra[0].id",
                                            "aws_network_acl.intra[0]",
                                            "aws_network_acl.intra"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.intra_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.intra_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.intra_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.intra_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.intra_dedicated_network_acl",
                                        "var.intra_subnets",
                                        "var.intra_outbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.outpost_inbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "outpost_inbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.outpost_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": false
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.outpost_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.outpost_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.outpost_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.outpost_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.outpost[0].id",
                                            "aws_network_acl.outpost[0]",
                                            "aws_network_acl.outpost"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.outpost_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.outpost_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.outpost_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.outpost_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.outpost_dedicated_network_acl",
                                        "var.outpost_subnets",
                                        "var.outpost_inbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.outpost_outbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "outpost_outbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.outpost_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": true
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.outpost_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.outpost_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.outpost_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.outpost_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.outpost[0].id",
                                            "aws_network_acl.outpost[0]",
                                            "aws_network_acl.outpost"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.outpost_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.outpost_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.outpost_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.outpost_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.outpost_dedicated_network_acl",
                                        "var.outpost_subnets",
                                        "var.outpost_outbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.private_inbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "private_inbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.private_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": false
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.private_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.private_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.private_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.private_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.private[0].id",
                                            "aws_network_acl.private[0]",
                                            "aws_network_acl.private"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.private_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.private_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.private_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.private_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.private_dedicated_network_acl",
                                        "var.private_subnets",
                                        "var.private_inbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.private_outbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "private_outbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.private_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": true
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.private_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.private_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.private_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.private_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.private[0].id",
                                            "aws_network_acl.private[0]",
                                            "aws_network_acl.private"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.private_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.private_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.private_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.private_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.private_dedicated_network_acl",
                                        "var.private_subnets",
                                        "var.private_outbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.public_inbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "public_inbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.public_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": false
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.public_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.public_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.public_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.public_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.public[0].id",
                                            "aws_network_acl.public[0]",
                                            "aws_network_acl.public"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.public_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.public_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.public_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.public_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.public_dedicated_network_acl",
                                        "var.public_subnets",
                                        "var.public_inbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.public_outbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "public_outbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.public_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": true
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.public_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.public_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.public_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.public_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.public[0].id",
                                            "aws_network_acl.public[0]",
                                            "aws_network_acl.public"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.public_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.public_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.public_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.public_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.public_dedicated_network_acl",
                                        "var.public_subnets",
                                        "var.public_outbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.redshift_inbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "redshift_inbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.redshift_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": false
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.redshift_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.redshift_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.redshift_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.redshift_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.redshift[0].id",
                                            "aws_network_acl.redshift[0]",
                                            "aws_network_acl.redshift"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.redshift_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.redshift_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.redshift_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.redshift_inbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.redshift_dedicated_network_acl",
                                        "var.redshift_subnets",
                                        "var.redshift_inbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_network_acl_rule.redshift_outbound",
                                "mode": "managed",
                                "type": "aws_network_acl_rule",
                                "name": "redshift_outbound",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.redshift_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "egress": {
                                        "constant_value": true
                                    },
                                    "from_port": {
                                        "references": [
                                            "var.redshift_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_code": {
                                        "references": [
                                            "var.redshift_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "icmp_type": {
                                        "references": [
                                            "var.redshift_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.redshift_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "network_acl_id": {
                                        "references": [
                                            "aws_network_acl.redshift[0].id",
                                            "aws_network_acl.redshift[0]",
                                            "aws_network_acl.redshift"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.redshift_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_action": {
                                        "references": [
                                            "var.redshift_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "rule_number": {
                                        "references": [
                                            "var.redshift_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    },
                                    "to_port": {
                                        "references": [
                                            "var.redshift_outbound_acl_rules",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.redshift_dedicated_network_acl",
                                        "var.redshift_subnets",
                                        "var.redshift_outbound_acl_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_redshift_subnet_group.redshift",
                                "mode": "managed",
                                "type": "aws_redshift_subnet_group",
                                "name": "redshift",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.name"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.name"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "aws_subnet.redshift"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.tags",
                                            "var.redshift_subnet_group_tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.redshift_subnets",
                                        "var.create_redshift_subnet_group"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route.database_internet_gateway",
                                "mode": "managed",
                                "type": "aws_route",
                                "name": "database_internet_gateway",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "destination_cidr_block": {
                                        "constant_value": "0.0.0.0/0"
                                    },
                                    "gateway_id": {
                                        "references": [
                                            "aws_internet_gateway.this[0].id",
                                            "aws_internet_gateway.this[0]",
                                            "aws_internet_gateway.this"
                                        ]
                                    },
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.database[0].id",
                                            "aws_route_table.database[0]",
                                            "aws_route_table.database"
                                        ]
                                    },
                                    "timeouts": {
                                        "create": {
                                            "constant_value": "5m"
                                        }
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.create_igw",
                                        "var.create_database_subnet_route_table",
                                        "var.database_subnets",
                                        "var.create_database_internet_gateway_route",
                                        "var.create_database_nat_gateway_route"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route.database_ipv6_egress",
                                "mode": "managed",
                                "type": "aws_route",
                                "name": "database_ipv6_egress",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "destination_ipv6_cidr_block": {
                                        "constant_value": "::/0"
                                    },
                                    "egress_only_gateway_id": {
                                        "references": [
                                            "aws_egress_only_internet_gateway.this[0].id",
                                            "aws_egress_only_internet_gateway.this[0]",
                                            "aws_egress_only_internet_gateway.this"
                                        ]
                                    },
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.database[0].id",
                                            "aws_route_table.database[0]",
                                            "aws_route_table.database"
                                        ]
                                    },
                                    "timeouts": {
                                        "create": {
                                            "constant_value": "5m"
                                        }
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.create_egress_only_igw",
                                        "var.enable_ipv6",
                                        "var.create_database_subnet_route_table",
                                        "var.database_subnets",
                                        "var.create_database_internet_gateway_route"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route.database_nat_gateway",
                                "mode": "managed",
                                "type": "aws_route",
                                "name": "database_nat_gateway",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "destination_cidr_block": {
                                        "constant_value": "0.0.0.0/0"
                                    },
                                    "nat_gateway_id": {
                                        "references": [
                                            "aws_nat_gateway.this",
                                            "count.index"
                                        ]
                                    },
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.database",
                                            "count.index"
                                        ]
                                    },
                                    "timeouts": {
                                        "create": {
                                            "constant_value": "5m"
                                        }
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.create_database_subnet_route_table",
                                        "var.database_subnets",
                                        "var.create_database_internet_gateway_route",
                                        "var.create_database_nat_gateway_route",
                                        "var.enable_nat_gateway",
                                        "var.single_nat_gateway",
                                        "var.database_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route.private_ipv6_egress",
                                "mode": "managed",
                                "type": "aws_route",
                                "name": "private_ipv6_egress",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "destination_ipv6_cidr_block": {
                                        "constant_value": "::/0"
                                    },
                                    "egress_only_gateway_id": {
                                        "references": [
                                            "aws_egress_only_internet_gateway.this"
                                        ]
                                    },
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.private",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.create_egress_only_igw",
                                        "var.enable_ipv6",
                                        "var.private_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route.private_nat_gateway",
                                "mode": "managed",
                                "type": "aws_route",
                                "name": "private_nat_gateway",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "destination_cidr_block": {
                                        "constant_value": "0.0.0.0/0"
                                    },
                                    "nat_gateway_id": {
                                        "references": [
                                            "aws_nat_gateway.this",
                                            "count.index"
                                        ]
                                    },
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.private",
                                            "count.index"
                                        ]
                                    },
                                    "timeouts": {
                                        "create": {
                                            "constant_value": "5m"
                                        }
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_nat_gateway",
                                        "local.nat_gateway_count"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route.public_internet_gateway",
                                "mode": "managed",
                                "type": "aws_route",
                                "name": "public_internet_gateway",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "destination_cidr_block": {
                                        "constant_value": "0.0.0.0/0"
                                    },
                                    "gateway_id": {
                                        "references": [
                                            "aws_internet_gateway.this[0].id",
                                            "aws_internet_gateway.this[0]",
                                            "aws_internet_gateway.this"
                                        ]
                                    },
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.public[0].id",
                                            "aws_route_table.public[0]",
                                            "aws_route_table.public"
                                        ]
                                    },
                                    "timeouts": {
                                        "create": {
                                            "constant_value": "5m"
                                        }
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.create_igw",
                                        "var.public_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route.public_internet_gateway_ipv6",
                                "mode": "managed",
                                "type": "aws_route",
                                "name": "public_internet_gateway_ipv6",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "destination_ipv6_cidr_block": {
                                        "constant_value": "::/0"
                                    },
                                    "gateway_id": {
                                        "references": [
                                            "aws_internet_gateway.this[0].id",
                                            "aws_internet_gateway.this[0]",
                                            "aws_internet_gateway.this"
                                        ]
                                    },
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.public[0].id",
                                            "aws_route_table.public[0]",
                                            "aws_route_table.public"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.create_igw",
                                        "var.enable_ipv6",
                                        "var.public_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table.database",
                                "mode": "managed",
                                "type": "aws_route_table",
                                "name": "database",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "tags": {
                                        "references": [
                                            "var.single_nat_gateway",
                                            "var.create_database_internet_gateway_route",
                                            "var.name",
                                            "var.database_subnet_suffix",
                                            "var.database_subnet_suffix",
                                            "var.name",
                                            "var.azs",
                                            "count.index",
                                            "var.tags",
                                            "var.database_route_table_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.create_database_subnet_route_table",
                                        "var.database_subnets",
                                        "var.single_nat_gateway",
                                        "var.create_database_internet_gateway_route",
                                        "var.database_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table.elasticache",
                                "mode": "managed",
                                "type": "aws_route_table",
                                "name": "elasticache",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.elasticache_subnet_suffix",
                                            "var.tags",
                                            "var.elasticache_route_table_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.create_elasticache_subnet_route_table",
                                        "var.elasticache_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table.intra",
                                "mode": "managed",
                                "type": "aws_route_table",
                                "name": "intra",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.intra_subnet_suffix",
                                            "var.tags",
                                            "var.intra_route_table_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.intra_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table.private",
                                "mode": "managed",
                                "type": "aws_route_table",
                                "name": "private",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "tags": {
                                        "references": [
                                            "var.single_nat_gateway",
                                            "var.name",
                                            "var.private_subnet_suffix",
                                            "var.private_subnet_suffix",
                                            "var.name",
                                            "var.azs",
                                            "count.index",
                                            "var.tags",
                                            "var.private_route_table_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "local.max_subnet_length",
                                        "local.nat_gateway_count"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table.public",
                                "mode": "managed",
                                "type": "aws_route_table",
                                "name": "public",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "tags": {
                                        "references": [
                                            "var.public_subnet_suffix",
                                            "var.name",
                                            "var.tags",
                                            "var.public_route_table_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.public_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table.redshift",
                                "mode": "managed",
                                "type": "aws_route_table",
                                "name": "redshift",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.redshift_subnet_suffix",
                                            "var.tags",
                                            "var.redshift_route_table_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.create_redshift_subnet_route_table",
                                        "var.redshift_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table_association.database",
                                "mode": "managed",
                                "type": "aws_route_table_association",
                                "name": "database",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.database",
                                            "aws_route_table.private",
                                            "var.create_database_subnet_route_table",
                                            "var.single_nat_gateway",
                                            "var.create_database_internet_gateway_route",
                                            "count.index",
                                            "count.index"
                                        ]
                                    },
                                    "subnet_id": {
                                        "references": [
                                            "aws_subnet.database",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.database_subnets",
                                        "var.database_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table_association.elasticache",
                                "mode": "managed",
                                "type": "aws_route_table_association",
                                "name": "elasticache",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.elasticache",
                                            "aws_route_table.private",
                                            "var.single_nat_gateway",
                                            "var.create_elasticache_subnet_route_table",
                                            "count.index"
                                        ]
                                    },
                                    "subnet_id": {
                                        "references": [
                                            "aws_subnet.elasticache",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.elasticache_subnets",
                                        "var.elasticache_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table_association.intra",
                                "mode": "managed",
                                "type": "aws_route_table_association",
                                "name": "intra",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.intra"
                                        ]
                                    },
                                    "subnet_id": {
                                        "references": [
                                            "aws_subnet.intra",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.intra_subnets",
                                        "var.intra_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table_association.outpost",
                                "mode": "managed",
                                "type": "aws_route_table_association",
                                "name": "outpost",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.private",
                                            "var.single_nat_gateway",
                                            "count.index"
                                        ]
                                    },
                                    "subnet_id": {
                                        "references": [
                                            "aws_subnet.outpost",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.outpost_subnets",
                                        "var.outpost_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table_association.private",
                                "mode": "managed",
                                "type": "aws_route_table_association",
                                "name": "private",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.private",
                                            "var.single_nat_gateway",
                                            "count.index"
                                        ]
                                    },
                                    "subnet_id": {
                                        "references": [
                                            "aws_subnet.private",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.private_subnets",
                                        "var.private_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table_association.public",
                                "mode": "managed",
                                "type": "aws_route_table_association",
                                "name": "public",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.public[0].id",
                                            "aws_route_table.public[0]",
                                            "aws_route_table.public"
                                        ]
                                    },
                                    "subnet_id": {
                                        "references": [
                                            "aws_subnet.public",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.public_subnets",
                                        "var.public_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table_association.redshift",
                                "mode": "managed",
                                "type": "aws_route_table_association",
                                "name": "redshift",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.redshift",
                                            "aws_route_table.private",
                                            "var.single_nat_gateway",
                                            "var.create_redshift_subnet_route_table",
                                            "count.index"
                                        ]
                                    },
                                    "subnet_id": {
                                        "references": [
                                            "aws_subnet.redshift",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.redshift_subnets",
                                        "var.enable_public_redshift",
                                        "var.redshift_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_route_table_association.redshift_public",
                                "mode": "managed",
                                "type": "aws_route_table_association",
                                "name": "redshift_public",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.redshift",
                                            "aws_route_table.public",
                                            "var.single_nat_gateway",
                                            "var.create_redshift_subnet_route_table",
                                            "count.index"
                                        ]
                                    },
                                    "subnet_id": {
                                        "references": [
                                            "aws_subnet.redshift",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.redshift_subnets",
                                        "var.enable_public_redshift",
                                        "var.redshift_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_subnet.database",
                                "mode": "managed",
                                "type": "aws_subnet",
                                "name": "database",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "assign_ipv6_address_on_creation": {
                                        "references": [
                                            "var.database_subnet_assign_ipv6_address_on_creation",
                                            "var.assign_ipv6_address_on_creation",
                                            "var.database_subnet_assign_ipv6_address_on_creation"
                                        ]
                                    },
                                    "availability_zone": {
                                        "references": [
                                            "var.azs",
                                            "count.index",
                                            "var.azs",
                                            "count.index"
                                        ]
                                    },
                                    "availability_zone_id": {
                                        "references": [
                                            "var.azs",
                                            "count.index",
                                            "var.azs",
                                            "count.index"
                                        ]
                                    },
                                    "cidr_block": {
                                        "references": [
                                            "var.database_subnets",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.database_subnet_ipv6_prefixes",
                                            "aws_vpc.this[0].ipv6_cidr_block",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this",
                                            "var.database_subnet_ipv6_prefixes",
                                            "count.index"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.database_subnet_suffix",
                                            "var.name",
                                            "var.azs",
                                            "count.index",
                                            "var.tags",
                                            "var.database_subnet_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.database_subnets",
                                        "var.database_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_subnet.elasticache",
                                "mode": "managed",
                                "type": "aws_subnet",
                                "name": "elasticache",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "assign_ipv6_address_on_creation": {
                                        "references": [
                                            "var.elasticache_subnet_assign_ipv6_address_on_creation",
                                            "var.assign_ipv6_address_on_creation",
                                            "var.elasticache_subnet_assign_ipv6_address_on_creation"
                                        ]
                                    },
                                    "availability_zone": {
                                        "references": [
                                            "var.azs",
                                            "count.index",
                                            "var.azs",
                                            "count.index"
                                        ]
                                    },
                                    "availability_zone_id": {
                                        "references": [
                                            "var.azs",
                                            "count.index",
                                            "var.azs",
                                            "count.index"
                                        ]
                                    },
                                    "cidr_block": {
                                        "references": [
                                            "var.elasticache_subnets",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.elasticache_subnet_ipv6_prefixes",
                                            "aws_vpc.this[0].ipv6_cidr_block",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this",
                                            "var.elasticache_subnet_ipv6_prefixes",
                                            "count.index"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.elasticache_subnet_suffix",
                                            "var.name",
                                            "var.azs",
                                            "count.index",
                                            "var.tags",
                                            "var.elasticache_subnet_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.elasticache_subnets",
                                        "var.elasticache_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_subnet.intra",
                                "mode": "managed",
                                "type": "aws_subnet",
                                "name": "intra",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "assign_ipv6_address_on_creation": {
                                        "references": [
                                            "var.intra_subnet_assign_ipv6_address_on_creation",
                                            "var.assign_ipv6_address_on_creation",
                                            "var.intra_subnet_assign_ipv6_address_on_creation"
                                        ]
                                    },
                                    "availability_zone": {
                                        "references": [
                                            "var.azs",
                                            "count.index",
                                            "var.azs",
                                            "count.index"
                                        ]
                                    },
                                    "availability_zone_id": {
                                        "references": [
                                            "var.azs",
                                            "count.index",
                                            "var.azs",
                                            "count.index"
                                        ]
                                    },
                                    "cidr_block": {
                                        "references": [
                                            "var.intra_subnets",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.intra_subnet_ipv6_prefixes",
                                            "aws_vpc.this[0].ipv6_cidr_block",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this",
                                            "var.intra_subnet_ipv6_prefixes",
                                            "count.index"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.intra_subnet_suffix",
                                            "var.name",
                                            "var.azs",
                                            "count.index",
                                            "var.tags",
                                            "var.intra_subnet_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.intra_subnets",
                                        "var.intra_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_subnet.outpost",
                                "mode": "managed",
                                "type": "aws_subnet",
                                "name": "outpost",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "assign_ipv6_address_on_creation": {
                                        "references": [
                                            "var.outpost_subnet_assign_ipv6_address_on_creation",
                                            "var.assign_ipv6_address_on_creation",
                                            "var.outpost_subnet_assign_ipv6_address_on_creation"
                                        ]
                                    },
                                    "availability_zone": {
                                        "references": [
                                            "var.outpost_az"
                                        ]
                                    },
                                    "cidr_block": {
                                        "references": [
                                            "var.outpost_subnets",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.outpost_subnet_ipv6_prefixes",
                                            "aws_vpc.this[0].ipv6_cidr_block",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this",
                                            "var.outpost_subnet_ipv6_prefixes",
                                            "count.index"
                                        ]
                                    },
                                    "outpost_arn": {
                                        "references": [
                                            "var.outpost_arn"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.outpost_subnet_suffix",
                                            "var.name",
                                            "var.outpost_az",
                                            "var.tags",
                                            "var.outpost_subnet_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.outpost_subnets",
                                        "var.outpost_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_subnet.private",
                                "mode": "managed",
                                "type": "aws_subnet",
                                "name": "private",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "assign_ipv6_address_on_creation": {
                                        "references": [
                                            "var.private_subnet_assign_ipv6_address_on_creation",
                                            "var.assign_ipv6_address_on_creation",
                                            "var.private_subnet_assign_ipv6_address_on_creation"
                                        ]
                                    },
                                    "availability_zone": {
                                        "references": [
                                            "var.azs",
                                            "count.index",
                                            "var.azs",
                                            "count.index"
                                        ]
                                    },
                                    "availability_zone_id": {
                                        "references": [
                                            "var.azs",
                                            "count.index",
                                            "var.azs",
                                            "count.index"
                                        ]
                                    },
                                    "cidr_block": {
                                        "references": [
                                            "var.private_subnets",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.private_subnet_ipv6_prefixes",
                                            "aws_vpc.this[0].ipv6_cidr_block",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this",
                                            "var.private_subnet_ipv6_prefixes",
                                            "count.index"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.private_subnet_suffix",
                                            "var.name",
                                            "var.azs",
                                            "count.index",
                                            "var.tags",
                                            "var.private_subnet_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.private_subnets",
                                        "var.private_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_subnet.public",
                                "mode": "managed",
                                "type": "aws_subnet",
                                "name": "public",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "assign_ipv6_address_on_creation": {
                                        "references": [
                                            "var.public_subnet_assign_ipv6_address_on_creation",
                                            "var.assign_ipv6_address_on_creation",
                                            "var.public_subnet_assign_ipv6_address_on_creation"
                                        ]
                                    },
                                    "availability_zone": {
                                        "references": [
                                            "var.azs",
                                            "count.index",
                                            "var.azs",
                                            "count.index"
                                        ]
                                    },
                                    "availability_zone_id": {
                                        "references": [
                                            "var.azs",
                                            "count.index",
                                            "var.azs",
                                            "count.index"
                                        ]
                                    },
                                    "cidr_block": {
                                        "references": [
                                            "var.public_subnets",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.public_subnet_ipv6_prefixes",
                                            "aws_vpc.this[0].ipv6_cidr_block",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this",
                                            "var.public_subnet_ipv6_prefixes",
                                            "count.index"
                                        ]
                                    },
                                    "map_public_ip_on_launch": {
                                        "references": [
                                            "var.map_public_ip_on_launch"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.public_subnet_suffix",
                                            "var.name",
                                            "var.azs",
                                            "count.index",
                                            "var.tags",
                                            "var.public_subnet_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.public_subnets",
                                        "var.one_nat_gateway_per_az",
                                        "var.public_subnets",
                                        "var.azs",
                                        "var.public_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_subnet.redshift",
                                "mode": "managed",
                                "type": "aws_subnet",
                                "name": "redshift",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "assign_ipv6_address_on_creation": {
                                        "references": [
                                            "var.redshift_subnet_assign_ipv6_address_on_creation",
                                            "var.assign_ipv6_address_on_creation",
                                            "var.redshift_subnet_assign_ipv6_address_on_creation"
                                        ]
                                    },
                                    "availability_zone": {
                                        "references": [
                                            "var.azs",
                                            "count.index",
                                            "var.azs",
                                            "count.index"
                                        ]
                                    },
                                    "availability_zone_id": {
                                        "references": [
                                            "var.azs",
                                            "count.index",
                                            "var.azs",
                                            "count.index"
                                        ]
                                    },
                                    "cidr_block": {
                                        "references": [
                                            "var.redshift_subnets",
                                            "count.index"
                                        ]
                                    },
                                    "ipv6_cidr_block": {
                                        "references": [
                                            "var.enable_ipv6",
                                            "var.redshift_subnet_ipv6_prefixes",
                                            "aws_vpc.this[0].ipv6_cidr_block",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this",
                                            "var.redshift_subnet_ipv6_prefixes",
                                            "count.index"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.redshift_subnet_suffix",
                                            "var.name",
                                            "var.azs",
                                            "count.index",
                                            "var.tags",
                                            "var.redshift_subnet_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.redshift_subnets",
                                        "var.redshift_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc.this",
                                "mode": "managed",
                                "type": "aws_vpc",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "assign_generated_ipv6_cidr_block": {
                                        "references": [
                                            "var.enable_ipv6"
                                        ]
                                    },
                                    "cidr_block": {
                                        "references": [
                                            "var.cidr"
                                        ]
                                    },
                                    "enable_dns_hostnames": {
                                        "references": [
                                            "var.enable_dns_hostnames"
                                        ]
                                    },
                                    "enable_dns_support": {
                                        "references": [
                                            "var.enable_dns_support"
                                        ]
                                    },
                                    "instance_tenancy": {
                                        "references": [
                                            "var.instance_tenancy"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.tags",
                                            "var.vpc_tags"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_dhcp_options.this",
                                "mode": "managed",
                                "type": "aws_vpc_dhcp_options",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "domain_name": {
                                        "references": [
                                            "var.dhcp_options_domain_name"
                                        ]
                                    },
                                    "domain_name_servers": {
                                        "references": [
                                            "var.dhcp_options_domain_name_servers"
                                        ]
                                    },
                                    "netbios_name_servers": {
                                        "references": [
                                            "var.dhcp_options_netbios_name_servers"
                                        ]
                                    },
                                    "netbios_node_type": {
                                        "references": [
                                            "var.dhcp_options_netbios_node_type"
                                        ]
                                    },
                                    "ntp_servers": {
                                        "references": [
                                            "var.dhcp_options_ntp_servers"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.tags",
                                            "var.dhcp_options_tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_dhcp_options"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_dhcp_options_association.this",
                                "mode": "managed",
                                "type": "aws_vpc_dhcp_options_association",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "dhcp_options_id": {
                                        "references": [
                                            "aws_vpc_dhcp_options.this[0].id",
                                            "aws_vpc_dhcp_options.this[0]",
                                            "aws_vpc_dhcp_options.this"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_dhcp_options"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.access_analyzer",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "access_analyzer",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy": {
                                        "references": [
                                            "var.access_analyzer_endpoint_policy"
                                        ]
                                    },
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.access_analyzer_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.access_analyzer_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.access_analyzer[0].service_name",
                                            "data.aws_vpc_endpoint_service.access_analyzer[0]",
                                            "data.aws_vpc_endpoint_service.access_analyzer"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.access_analyzer_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_access_analyzer_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.acm_pca",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "acm_pca",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy": {
                                        "references": [
                                            "var.acm_pca_endpoint_policy"
                                        ]
                                    },
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.acm_pca_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.acm_pca_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.acm_pca[0].service_name",
                                            "data.aws_vpc_endpoint_service.acm_pca[0]",
                                            "data.aws_vpc_endpoint_service.acm_pca"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.acm_pca_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_acm_pca_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.apigw",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "apigw",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy": {
                                        "references": [
                                            "var.apigw_endpoint_policy"
                                        ]
                                    },
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.apigw_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.apigw_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.apigw[0].service_name",
                                            "data.aws_vpc_endpoint_service.apigw[0]",
                                            "data.aws_vpc_endpoint_service.apigw"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.apigw_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_apigw_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.appmesh_envoy_management",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "appmesh_envoy_management",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.appmesh_envoy_management_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.appmesh_envoy_management_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.appmesh_envoy_management[0].service_name",
                                            "data.aws_vpc_endpoint_service.appmesh_envoy_management[0]",
                                            "data.aws_vpc_endpoint_service.appmesh_envoy_management"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.appmesh_envoy_management_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_appmesh_envoy_management_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.appstream_api",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "appstream_api",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.appstream_api_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.appstream_api_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.appstream_api[0].service_name",
                                            "data.aws_vpc_endpoint_service.appstream_api[0]",
                                            "data.aws_vpc_endpoint_service.appstream_api"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.appstream_api_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_appstream_api_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.appstream_streaming",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "appstream_streaming",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.appstream_streaming_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.appstream_streaming_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.appstream_streaming[0].service_name",
                                            "data.aws_vpc_endpoint_service.appstream_streaming[0]",
                                            "data.aws_vpc_endpoint_service.appstream_streaming"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.appstream_streaming_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_appstream_streaming_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.athena",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "athena",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy": {
                                        "references": [
                                            "var.athena_endpoint_policy"
                                        ]
                                    },
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.athena_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.athena_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.athena[0].service_name",
                                            "data.aws_vpc_endpoint_service.athena[0]",
                                            "data.aws_vpc_endpoint_service.athena"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.athena_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_athena_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.auto_scaling_plans",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "auto_scaling_plans",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy": {
                                        "references": [
                                            "var.auto_scaling_plans_endpoint_policy"
                                        ]
                                    },
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.auto_scaling_plans_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.auto_scaling_plans_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.auto_scaling_plans[0].service_name",
                                            "data.aws_vpc_endpoint_service.auto_scaling_plans[0]",
                                            "data.aws_vpc_endpoint_service.auto_scaling_plans"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.auto_scaling_plans_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_auto_scaling_plans_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.cloud_directory",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "cloud_directory",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy": {
                                        "references": [
                                            "var.cloud_directory_endpoint_policy"
                                        ]
                                    },
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.cloud_directory_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.cloud_directory_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.cloud_directory[0].service_name",
                                            "data.aws_vpc_endpoint_service.cloud_directory[0]",
                                            "data.aws_vpc_endpoint_service.cloud_directory"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.cloud_directory_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_cloud_directory_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.cloudformation",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "cloudformation",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.cloudformation_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.cloudformation_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.cloudformation[0].service_name",
                                            "data.aws_vpc_endpoint_service.cloudformation[0]",
                                            "data.aws_vpc_endpoint_service.cloudformation"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.cloudformation_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_cloudformation_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.cloudtrail",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "cloudtrail",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.cloudtrail_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.cloudtrail_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.cloudtrail[0].service_name",
                                            "data.aws_vpc_endpoint_service.cloudtrail[0]",
                                            "data.aws_vpc_endpoint_service.cloudtrail"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.cloudtrail_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_cloudtrail_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.codeartifact_api",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "codeartifact_api",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.codeartifact_api_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.codeartifact_api_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.codeartifact_api[0].service_name",
                                            "data.aws_vpc_endpoint_service.codeartifact_api[0]",
                                            "data.aws_vpc_endpoint_service.codeartifact_api"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.codeartifact_api_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_codeartifact_api_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.codeartifact_repositories",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "codeartifact_repositories",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.codeartifact_repositories_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.codeartifact_repositories_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.codeartifact_repositories[0].service_name",
                                            "data.aws_vpc_endpoint_service.codeartifact_repositories[0]",
                                            "data.aws_vpc_endpoint_service.codeartifact_repositories"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.codeartifact_repositories_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_codeartifact_repositories_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.codebuild",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "codebuild",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy": {
                                        "references": [
                                            "var.codebuild_endpoint_policy"
                                        ]
                                    },
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.codebuild_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.codebuild_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.codebuild[0].service_name",
                                            "data.aws_vpc_endpoint_service.codebuild[0]",
                                            "data.aws_vpc_endpoint_service.codebuild"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.codebuild_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_codebuild_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.codecommit",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "codecommit",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy": {
                                        "references": [
                                            "var.codecommit_endpoint_policy"
                                        ]
                                    },
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.codecommit_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.codecommit_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.codecommit[0].service_name",
                                            "data.aws_vpc_endpoint_service.codecommit[0]",
                                            "data.aws_vpc_endpoint_service.codecommit"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.codecommit_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_codecommit_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.codedeploy",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "codedeploy",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.codedeploy_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.codedeploy_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.codedeploy[0].service_name",
                                            "data.aws_vpc_endpoint_service.codedeploy[0]",
                                            "data.aws_vpc_endpoint_service.codedeploy"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.codedeploy_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_codedeploy_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.codedeploy_commands_secure",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "codedeploy_commands_secure",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.codedeploy_commands_secure_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.codedeploy_commands_secure_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.codedeploy_commands_secure[0].service_name",
                                            "data.aws_vpc_endpoint_service.codedeploy_commands_secure[0]",
                                            "data.aws_vpc_endpoint_service.codedeploy_commands_secure"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.codedeploy_commands_secure_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_codedeploy_commands_secure_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.codepipeline",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "codepipeline",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.codepipeline_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.codepipeline_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.codepipeline[0].service_name",
                                            "data.aws_vpc_endpoint_service.codepipeline[0]",
                                            "data.aws_vpc_endpoint_service.codepipeline"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.codepipeline_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_codepipeline_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.config",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "config",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.config_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.config_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.config[0].service_name",
                                            "data.aws_vpc_endpoint_service.config[0]",
                                            "data.aws_vpc_endpoint_service.config"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.config_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_config_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.datasync",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "datasync",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.datasync_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.datasync_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.datasync[0].service_name",
                                            "data.aws_vpc_endpoint_service.datasync[0]",
                                            "data.aws_vpc_endpoint_service.datasync"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.datasync_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_datasync_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.dms",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "dms",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.dms_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.dms_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.dms[0].service_name",
                                            "data.aws_vpc_endpoint_service.dms[0]",
                                            "data.aws_vpc_endpoint_service.dms"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.dms_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_dms_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.dynamodb",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "dynamodb",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy": {
                                        "references": [
                                            "var.dynamodb_endpoint_policy"
                                        ]
                                    },
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.dynamodb_endpoint_type",
                                            "var.dynamodb_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.dynamodb_endpoint_type",
                                            "var.dynamodb_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.dynamodb[0].service_name",
                                            "data.aws_vpc_endpoint_service.dynamodb[0]",
                                            "data.aws_vpc_endpoint_service.dynamodb"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.dynamodb_endpoint_type",
                                            "var.dynamodb_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "references": [
                                            "var.dynamodb_endpoint_type"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_dynamodb_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.ebs",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "ebs",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.ebs_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.ebs_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.ebs[0].service_name",
                                            "data.aws_vpc_endpoint_service.ebs[0]",
                                            "data.aws_vpc_endpoint_service.ebs"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.ebs_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_ebs_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.ec2",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "ec2",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy": {
                                        "references": [
                                            "var.ec2_endpoint_policy"
                                        ]
                                    },
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.ec2_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.ec2_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.ec2[0].service_name",
                                            "data.aws_vpc_endpoint_service.ec2[0]",
                                            "data.aws_vpc_endpoint_service.ec2"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.ec2_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_ec2_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.ec2_autoscaling",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "ec2_autoscaling",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy": {
                                        "references": [
                                            "var.ec2_autoscaling_endpoint_policy"
                                        ]
                                    },
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.ec2_autoscaling_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.ec2_autoscaling_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.ec2_autoscaling[0].service_name",
                                            "data.aws_vpc_endpoint_service.ec2_autoscaling[0]",
                                            "data.aws_vpc_endpoint_service.ec2_autoscaling"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.ec2_autoscaling_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_ec2_autoscaling_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.ec2messages",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "ec2messages",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.ec2messages_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.ec2messages_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.ec2messages[0].service_name",
                                            "data.aws_vpc_endpoint_service.ec2messages[0]",
                                            "data.aws_vpc_endpoint_service.ec2messages"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.ec2messages_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_ec2messages_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.ecr_api",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "ecr_api",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy": {
                                        "references": [
                                            "var.ecr_api_endpoint_policy"
                                        ]
                                    },
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.ecr_api_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.ecr_api_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.ecr_api[0].service_name",
                                            "data.aws_vpc_endpoint_service.ecr_api[0]",
                                            "data.aws_vpc_endpoint_service.ecr_api"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.ecr_api_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_ecr_api_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.ecr_dkr",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "ecr_dkr",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy": {
                                        "references": [
                                            "var.ecr_dkr_endpoint_policy"
                                        ]
                                    },
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.ecr_dkr_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.ecr_dkr_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.ecr_dkr[0].service_name",
                                            "data.aws_vpc_endpoint_service.ecr_dkr[0]",
                                            "data.aws_vpc_endpoint_service.ecr_dkr"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.ecr_dkr_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_ecr_dkr_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.ecs",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "ecs",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.ecs_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.ecs_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.ecs[0].service_name",
                                            "data.aws_vpc_endpoint_service.ecs[0]",
                                            "data.aws_vpc_endpoint_service.ecs"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.ecs_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_ecs_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.ecs_agent",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "ecs_agent",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.ecs_agent_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.ecs_agent_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.ecs_agent[0].service_name",
                                            "data.aws_vpc_endpoint_service.ecs_agent[0]",
                                            "data.aws_vpc_endpoint_service.ecs_agent"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.ecs_agent_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_ecs_agent_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.ecs_telemetry",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "ecs_telemetry",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.ecs_telemetry_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.ecs_telemetry_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.ecs_telemetry[0].service_name",
                                            "data.aws_vpc_endpoint_service.ecs_telemetry[0]",
                                            "data.aws_vpc_endpoint_service.ecs_telemetry"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.ecs_telemetry_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_ecs_telemetry_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.efs",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "efs",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy": {
                                        "references": [
                                            "var.efs_endpoint_policy"
                                        ]
                                    },
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.efs_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.efs_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.efs[0].service_name",
                                            "data.aws_vpc_endpoint_service.efs[0]",
                                            "data.aws_vpc_endpoint_service.efs"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.efs_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_efs_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.elastic_inference_runtime",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "elastic_inference_runtime",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.elastic_inference_runtime_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.elastic_inference_runtime_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.elastic_inference_runtime[0].service_name",
                                            "data.aws_vpc_endpoint_service.elastic_inference_runtime[0]",
                                            "data.aws_vpc_endpoint_service.elastic_inference_runtime"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.elastic_inference_runtime_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_elastic_inference_runtime_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.elasticbeanstalk",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "elasticbeanstalk",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy": {
                                        "references": [
                                            "var.elasticbeanstalk_endpoint_policy"
                                        ]
                                    },
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.elasticbeanstalk_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.elasticbeanstalk_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.elasticbeanstalk[0].service_name",
                                            "data.aws_vpc_endpoint_service.elasticbeanstalk[0]",
                                            "data.aws_vpc_endpoint_service.elasticbeanstalk"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.elasticbeanstalk_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_elasticbeanstalk_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.elasticbeanstalk_health",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "elasticbeanstalk_health",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.elasticbeanstalk_health_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.elasticbeanstalk_health_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.elasticbeanstalk_health[0].service_name",
                                            "data.aws_vpc_endpoint_service.elasticbeanstalk_health[0]",
                                            "data.aws_vpc_endpoint_service.elasticbeanstalk_health"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.elasticbeanstalk_health_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_elasticbeanstalk_health_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.elasticloadbalancing",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "elasticloadbalancing",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy": {
                                        "references": [
                                            "var.elasticloadbalancing_endpoint_policy"
                                        ]
                                    },
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.elasticloadbalancing_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.elasticloadbalancing_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.elasticloadbalancing[0].service_name",
                                            "data.aws_vpc_endpoint_service.elasticloadbalancing[0]",
                                            "data.aws_vpc_endpoint_service.elasticloadbalancing"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.elasticloadbalancing_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_elasticloadbalancing_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.emr",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "emr",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy": {
                                        "references": [
                                            "var.emr_endpoint_policy"
                                        ]
                                    },
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.emr_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.emr_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.emr[0].service_name",
                                            "data.aws_vpc_endpoint_service.emr[0]",
                                            "data.aws_vpc_endpoint_service.emr"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.emr_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_emr_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.events",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "events",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy": {
                                        "references": [
                                            "var.events_endpoint_policy"
                                        ]
                                    },
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.events_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.events_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.events[0].service_name",
                                            "data.aws_vpc_endpoint_service.events[0]",
                                            "data.aws_vpc_endpoint_service.events"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.events_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_events_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.git_codecommit",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "git_codecommit",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.git_codecommit_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.git_codecommit_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.git_codecommit[0].service_name",
                                            "data.aws_vpc_endpoint_service.git_codecommit[0]",
                                            "data.aws_vpc_endpoint_service.git_codecommit"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.git_codecommit_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_git_codecommit_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.glue",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "glue",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.glue_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.glue_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.glue[0].service_name",
                                            "data.aws_vpc_endpoint_service.glue[0]",
                                            "data.aws_vpc_endpoint_service.glue"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.glue_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_glue_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.kinesis_firehose",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "kinesis_firehose",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy": {
                                        "references": [
                                            "var.kinesis_firehose_endpoint_policy"
                                        ]
                                    },
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.kinesis_firehose_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.kinesis_firehose_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.kinesis_firehose[0].service_name",
                                            "data.aws_vpc_endpoint_service.kinesis_firehose[0]",
                                            "data.aws_vpc_endpoint_service.kinesis_firehose"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.kinesis_firehose_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_kinesis_firehose_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.kinesis_streams",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "kinesis_streams",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy": {
                                        "references": [
                                            "var.kinesis_streams_endpoint_policy"
                                        ]
                                    },
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.kinesis_streams_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.kinesis_streams_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.kinesis_streams[0].service_name",
                                            "data.aws_vpc_endpoint_service.kinesis_streams[0]",
                                            "data.aws_vpc_endpoint_service.kinesis_streams"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.kinesis_streams_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_kinesis_streams_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.kms",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "kms",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy": {
                                        "references": [
                                            "var.kms_endpoint_policy"
                                        ]
                                    },
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.kms_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.kms_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.kms[0].service_name",
                                            "data.aws_vpc_endpoint_service.kms[0]",
                                            "data.aws_vpc_endpoint_service.kms"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.kms_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_kms_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.lambda",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "lambda",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.lambda_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.lambda_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.lambda[0].service_name",
                                            "data.aws_vpc_endpoint_service.lambda[0]",
                                            "data.aws_vpc_endpoint_service.lambda"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.lambda_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_lambda_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.logs",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "logs",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy": {
                                        "references": [
                                            "var.logs_endpoint_policy"
                                        ]
                                    },
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.logs_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.logs_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.logs[0].service_name",
                                            "data.aws_vpc_endpoint_service.logs[0]",
                                            "data.aws_vpc_endpoint_service.logs"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.logs_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_logs_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.monitoring",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "monitoring",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy": {
                                        "references": [
                                            "var.monitoring_endpoint_policy"
                                        ]
                                    },
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.monitoring_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.monitoring_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.monitoring[0].service_name",
                                            "data.aws_vpc_endpoint_service.monitoring[0]",
                                            "data.aws_vpc_endpoint_service.monitoring"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.monitoring_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_monitoring_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.qldb_session",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "qldb_session",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.qldb_session_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.qldb_session_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.qldb_session[0].service_name",
                                            "data.aws_vpc_endpoint_service.qldb_session[0]",
                                            "data.aws_vpc_endpoint_service.qldb_session"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.qldb_session_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_qldb_session_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.rds",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "rds",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.rds_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.rds_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.rds[0].service_name",
                                            "data.aws_vpc_endpoint_service.rds[0]",
                                            "data.aws_vpc_endpoint_service.rds"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.rds_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_rds_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.rekognition",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "rekognition",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy": {
                                        "references": [
                                            "var.rekognition_endpoint_policy"
                                        ]
                                    },
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.rekognition_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.rekognition_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.rekognition[0].service_name",
                                            "data.aws_vpc_endpoint_service.rekognition[0]",
                                            "data.aws_vpc_endpoint_service.rekognition"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.rekognition_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_rekognition_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.s3",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "s3",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy": {
                                        "references": [
                                            "var.s3_endpoint_policy"
                                        ]
                                    },
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.s3_endpoint_type",
                                            "var.s3_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.s3_endpoint_type",
                                            "var.s3_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.s3[0].service_name",
                                            "data.aws_vpc_endpoint_service.s3[0]",
                                            "data.aws_vpc_endpoint_service.s3"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.s3_endpoint_type",
                                            "var.s3_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "references": [
                                            "var.s3_endpoint_type"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_s3_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.sagemaker_api",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "sagemaker_api",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy": {
                                        "references": [
                                            "var.sagemaker_api_endpoint_policy"
                                        ]
                                    },
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.sagemaker_api_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.sagemaker_api_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.sagemaker_api[0].service_name",
                                            "data.aws_vpc_endpoint_service.sagemaker_api[0]",
                                            "data.aws_vpc_endpoint_service.sagemaker_api"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.sagemaker_api_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_sagemaker_api_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.sagemaker_notebook",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "sagemaker_notebook",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy": {
                                        "references": [
                                            "var.sagemaker_notebook_endpoint_policy"
                                        ]
                                    },
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.sagemaker_notebook_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.sagemaker_notebook_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.sagemaker_notebook[0].service_name",
                                            "data.aws_vpc_endpoint_service.sagemaker_notebook[0]",
                                            "data.aws_vpc_endpoint_service.sagemaker_notebook"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.sagemaker_notebook_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_sagemaker_notebook_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.sagemaker_runtime",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "sagemaker_runtime",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy": {
                                        "references": [
                                            "var.sagemaker_runtime_endpoint_policy"
                                        ]
                                    },
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.sagemaker_runtime_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.sagemaker_runtime_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.sagemaker_runtime[0].service_name",
                                            "data.aws_vpc_endpoint_service.sagemaker_runtime[0]",
                                            "data.aws_vpc_endpoint_service.sagemaker_runtime"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.sagemaker_runtime_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_sagemaker_runtime_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.secretsmanager",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "secretsmanager",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy": {
                                        "references": [
                                            "var.secretsmanager_endpoint_policy"
                                        ]
                                    },
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.secretsmanager_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.secretsmanager_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.secretsmanager[0].service_name",
                                            "data.aws_vpc_endpoint_service.secretsmanager[0]",
                                            "data.aws_vpc_endpoint_service.secretsmanager"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.secretsmanager_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_secretsmanager_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.servicecatalog",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "servicecatalog",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.servicecatalog_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.servicecatalog_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.servicecatalog[0].service_name",
                                            "data.aws_vpc_endpoint_service.servicecatalog[0]",
                                            "data.aws_vpc_endpoint_service.servicecatalog"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.servicecatalog_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_servicecatalog_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.ses",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "ses",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.ses_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.ses_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.ses[0].service_name",
                                            "data.aws_vpc_endpoint_service.ses[0]",
                                            "data.aws_vpc_endpoint_service.ses"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.ses_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_ses_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.sms",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "sms",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.sms_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.sms_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.sms[0].service_name",
                                            "data.aws_vpc_endpoint_service.sms[0]",
                                            "data.aws_vpc_endpoint_service.sms"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.sms_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_sms_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.sns",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "sns",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy": {
                                        "references": [
                                            "var.sns_endpoint_policy"
                                        ]
                                    },
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.sns_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.sns_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.sns[0].service_name",
                                            "data.aws_vpc_endpoint_service.sns[0]",
                                            "data.aws_vpc_endpoint_service.sns"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.sns_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_sns_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.sqs",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "sqs",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy": {
                                        "references": [
                                            "var.sqs_endpoint_policy"
                                        ]
                                    },
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.sqs_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.sqs_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.sqs[0].service_name",
                                            "data.aws_vpc_endpoint_service.sqs[0]",
                                            "data.aws_vpc_endpoint_service.sqs"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.sqs_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_sqs_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.ssm",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "ssm",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.ssm_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.ssm_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.ssm[0].service_name",
                                            "data.aws_vpc_endpoint_service.ssm[0]",
                                            "data.aws_vpc_endpoint_service.ssm"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.ssm_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_ssm_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.ssmmessages",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "ssmmessages",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.ssmmessages_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.ssmmessages_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.ssmmessages[0].service_name",
                                            "data.aws_vpc_endpoint_service.ssmmessages[0]",
                                            "data.aws_vpc_endpoint_service.ssmmessages"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.ssmmessages_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_ssmmessages_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.states",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "states",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy": {
                                        "references": [
                                            "var.states_endpoint_policy"
                                        ]
                                    },
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.states_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.states_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.states[0].service_name",
                                            "data.aws_vpc_endpoint_service.states[0]",
                                            "data.aws_vpc_endpoint_service.states"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.states_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_states_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.storagegateway",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "storagegateway",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.storagegateway_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.storagegateway_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.storagegateway[0].service_name",
                                            "data.aws_vpc_endpoint_service.storagegateway[0]",
                                            "data.aws_vpc_endpoint_service.storagegateway"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.storagegateway_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_storagegateway_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.sts",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "sts",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy": {
                                        "references": [
                                            "var.sts_endpoint_policy"
                                        ]
                                    },
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.sts_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.sts_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.sts[0].service_name",
                                            "data.aws_vpc_endpoint_service.sts[0]",
                                            "data.aws_vpc_endpoint_service.sts"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.sts_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_sts_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.textract",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "textract",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.textract_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.textract_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.textract[0].service_name",
                                            "data.aws_vpc_endpoint_service.textract[0]",
                                            "data.aws_vpc_endpoint_service.textract"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.textract_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_textract_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.transfer",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "transfer",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.transfer_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.transfer_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.transfer[0].service_name",
                                            "data.aws_vpc_endpoint_service.transfer[0]",
                                            "data.aws_vpc_endpoint_service.transfer"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.transfer_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_transfer_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.transferserver",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "transferserver",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.transferserver_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.transferserver_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.transferserver[0].service_name",
                                            "data.aws_vpc_endpoint_service.transferserver[0]",
                                            "data.aws_vpc_endpoint_service.transferserver"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.transferserver_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_transferserver_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint.workspaces",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint",
                                "name": "workspaces",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy": {
                                        "references": [
                                            "var.workspaces_endpoint_policy"
                                        ]
                                    },
                                    "private_dns_enabled": {
                                        "references": [
                                            "var.workspaces_endpoint_private_dns_enabled"
                                        ]
                                    },
                                    "security_group_ids": {
                                        "references": [
                                            "var.workspaces_endpoint_security_group_ids"
                                        ]
                                    },
                                    "service_name": {
                                        "references": [
                                            "data.aws_vpc_endpoint_service.workspaces[0].service_name",
                                            "data.aws_vpc_endpoint_service.workspaces[0]",
                                            "data.aws_vpc_endpoint_service.workspaces"
                                        ]
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.workspaces_endpoint_subnet_ids",
                                            "aws_subnet.private"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "local.vpce_tags"
                                        ]
                                    },
                                    "vpc_endpoint_type": {
                                        "constant_value": "Interface"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_workspaces_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint_route_table_association.intra_dynamodb",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint_route_table_association",
                                "name": "intra_dynamodb",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.intra"
                                        ]
                                    },
                                    "vpc_endpoint_id": {
                                        "references": [
                                            "aws_vpc_endpoint.dynamodb[0].id",
                                            "aws_vpc_endpoint.dynamodb[0]",
                                            "aws_vpc_endpoint.dynamodb"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_dynamodb_endpoint",
                                        "var.intra_subnets",
                                        "var.dynamodb_endpoint_type"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint_route_table_association.intra_s3",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint_route_table_association",
                                "name": "intra_s3",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.intra"
                                        ]
                                    },
                                    "vpc_endpoint_id": {
                                        "references": [
                                            "aws_vpc_endpoint.s3[0].id",
                                            "aws_vpc_endpoint.s3[0]",
                                            "aws_vpc_endpoint.s3"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_s3_endpoint",
                                        "var.intra_subnets",
                                        "var.s3_endpoint_type"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint_route_table_association.private_dynamodb",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint_route_table_association",
                                "name": "private_dynamodb",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.private",
                                            "count.index"
                                        ]
                                    },
                                    "vpc_endpoint_id": {
                                        "references": [
                                            "aws_vpc_endpoint.dynamodb[0].id",
                                            "aws_vpc_endpoint.dynamodb[0]",
                                            "aws_vpc_endpoint.dynamodb"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_dynamodb_endpoint",
                                        "var.dynamodb_endpoint_type",
                                        "local.nat_gateway_count"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint_route_table_association.private_s3",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint_route_table_association",
                                "name": "private_s3",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.private",
                                            "count.index"
                                        ]
                                    },
                                    "vpc_endpoint_id": {
                                        "references": [
                                            "aws_vpc_endpoint.s3[0].id",
                                            "aws_vpc_endpoint.s3[0]",
                                            "aws_vpc_endpoint.s3"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_s3_endpoint",
                                        "var.s3_endpoint_type",
                                        "local.nat_gateway_count"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint_route_table_association.public_dynamodb",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint_route_table_association",
                                "name": "public_dynamodb",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.public[0].id",
                                            "aws_route_table.public[0]",
                                            "aws_route_table.public"
                                        ]
                                    },
                                    "vpc_endpoint_id": {
                                        "references": [
                                            "aws_vpc_endpoint.dynamodb[0].id",
                                            "aws_vpc_endpoint.dynamodb[0]",
                                            "aws_vpc_endpoint.dynamodb"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_dynamodb_endpoint",
                                        "var.public_subnets",
                                        "var.dynamodb_endpoint_type"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_endpoint_route_table_association.public_s3",
                                "mode": "managed",
                                "type": "aws_vpc_endpoint_route_table_association",
                                "name": "public_s3",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.public[0].id",
                                            "aws_route_table.public[0]",
                                            "aws_route_table.public"
                                        ]
                                    },
                                    "vpc_endpoint_id": {
                                        "references": [
                                            "aws_vpc_endpoint.s3[0].id",
                                            "aws_vpc_endpoint.s3[0]",
                                            "aws_vpc_endpoint.s3"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_s3_endpoint",
                                        "var.enable_public_s3_endpoint",
                                        "var.public_subnets",
                                        "var.s3_endpoint_type"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpc_ipv4_cidr_block_association.this",
                                "mode": "managed",
                                "type": "aws_vpc_ipv4_cidr_block_association",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cidr_block": {
                                        "references": [
                                            "var.secondary_cidr_blocks",
                                            "count.index"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "aws_vpc.this[0].id",
                                            "aws_vpc.this[0]",
                                            "aws_vpc.this"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.secondary_cidr_blocks",
                                        "var.secondary_cidr_blocks"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpn_gateway.this",
                                "mode": "managed",
                                "type": "aws_vpn_gateway",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "amazon_side_asn": {
                                        "references": [
                                            "var.amazon_side_asn"
                                        ]
                                    },
                                    "availability_zone": {
                                        "references": [
                                            "var.vpn_gateway_az"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.name",
                                            "var.tags",
                                            "var.vpn_gateway_tags"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_vpn_gateway"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpn_gateway_attachment.this",
                                "mode": "managed",
                                "type": "aws_vpn_gateway_attachment",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "vpc_id": {
                                        "references": [
                                            "local.vpc_id"
                                        ]
                                    },
                                    "vpn_gateway_id": {
                                        "references": [
                                            "var.vpn_gateway_id"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.vpn_gateway_id"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpn_gateway_route_propagation.intra",
                                "mode": "managed",
                                "type": "aws_vpn_gateway_route_propagation",
                                "name": "intra",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.intra",
                                            "count.index"
                                        ]
                                    },
                                    "vpn_gateway_id": {
                                        "references": [
                                            "aws_vpn_gateway.this",
                                            "aws_vpn_gateway_attachment.this",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.propagate_intra_route_tables_vgw",
                                        "var.enable_vpn_gateway",
                                        "var.vpn_gateway_id",
                                        "var.intra_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpn_gateway_route_propagation.private",
                                "mode": "managed",
                                "type": "aws_vpn_gateway_route_propagation",
                                "name": "private",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.private",
                                            "count.index"
                                        ]
                                    },
                                    "vpn_gateway_id": {
                                        "references": [
                                            "aws_vpn_gateway.this",
                                            "aws_vpn_gateway_attachment.this",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.propagate_private_route_tables_vgw",
                                        "var.enable_vpn_gateway",
                                        "var.vpn_gateway_id",
                                        "var.private_subnets"
                                    ]
                                }
                            },
                            {
                                "address": "aws_vpn_gateway_route_propagation.public",
                                "mode": "managed",
                                "type": "aws_vpn_gateway_route_propagation",
                                "name": "public",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "route_table_id": {
                                        "references": [
                                            "aws_route_table.public",
                                            "count.index"
                                        ]
                                    },
                                    "vpn_gateway_id": {
                                        "references": [
                                            "aws_vpn_gateway.this",
                                            "aws_vpn_gateway_attachment.this",
                                            "count.index"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.propagate_public_route_tables_vgw",
                                        "var.enable_vpn_gateway",
                                        "var.vpn_gateway_id"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role",
                                "mode": "data",
                                "type": "aws_iam_policy_document",
                                "name": "flow_log_cloudwatch_assume_role",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "statement": [
                                        {
                                            "actions": {
                                                "constant_value": [
                                                    "sts:AssumeRole"
                                                ]
                                            },
                                            "effect": {
                                                "constant_value": "Allow"
                                            },
                                            "principals": [
                                                {
                                                    "identifiers": {
                                                        "constant_value": [
                                                            "vpc-flow-logs.amazonaws.com"
                                                        ]
                                                    },
                                                    "type": {
                                                        "constant_value": "Service"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_flow_log_cloudwatch_iam_role"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_iam_policy_document.vpc_flow_log_cloudwatch",
                                "mode": "data",
                                "type": "aws_iam_policy_document",
                                "name": "vpc_flow_log_cloudwatch",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "statement": [
                                        {
                                            "actions": {
                                                "constant_value": [
                                                    "logs:CreateLogStream",
                                                    "logs:PutLogEvents",
                                                    "logs:DescribeLogGroups",
                                                    "logs:DescribeLogStreams"
                                                ]
                                            },
                                            "effect": {
                                                "constant_value": "Allow"
                                            },
                                            "resources": {
                                                "constant_value": [
                                                    "*"
                                                ]
                                            },
                                            "sid": {
                                                "constant_value": "AWSVPCFlowLogsPushToCloudWatch"
                                            }
                                        }
                                    ]
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_flow_log_cloudwatch_iam_role"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.access_analyzer",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "access_analyzer",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "access-analyzer"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_access_analyzer_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.acm_pca",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "acm_pca",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "acm-pca"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_acm_pca_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.apigw",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "apigw",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "execute-api"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_apigw_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.appmesh_envoy_management",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "appmesh_envoy_management",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "appmesh-envoy-management"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_appmesh_envoy_management_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.appstream_api",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "appstream_api",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "appstream.api"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_appstream_streaming_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.appstream_streaming",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "appstream_streaming",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "appstream.streaming"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_appstream_streaming_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.athena",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "athena",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "athena"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_athena_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.auto_scaling_plans",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "auto_scaling_plans",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "autoscaling-plans"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_auto_scaling_plans_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.cloud_directory",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "cloud_directory",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "clouddirectory"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_cloud_directory_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.cloudformation",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "cloudformation",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "cloudformation"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_cloudformation_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.cloudtrail",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "cloudtrail",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "cloudtrail"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_cloudtrail_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.codeartifact_api",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "codeartifact_api",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "codeartifact.api"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_codeartifact_api_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.codeartifact_repositories",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "codeartifact_repositories",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "codeartifact.repositories"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_codeartifact_repositories_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.codebuild",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "codebuild",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "codebuild"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_codebuild_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.codecommit",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "codecommit",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "codecommit"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_codecommit_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.codedeploy",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "codedeploy",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "codedeploy"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_codedeploy_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.codedeploy_commands_secure",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "codedeploy_commands_secure",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "codedeploy-commands-secure"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_codedeploy_commands_secure_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.codepipeline",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "codepipeline",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "codepipeline"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_codepipeline_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.config",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "config",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "config"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_config_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.datasync",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "datasync",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "datasync"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_datasync_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.dms",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "dms",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "dms"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_dms_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.dynamodb",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "dynamodb",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "filter": [
                                        {
                                            "name": {
                                                "constant_value": "service-type"
                                            },
                                            "values": {
                                                "references": [
                                                    "var.dynamodb_endpoint_type"
                                                ]
                                            }
                                        }
                                    ],
                                    "service": {
                                        "constant_value": "dynamodb"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_dynamodb_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.ebs",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "ebs",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "ebs"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_ebs_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.ec2",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "ec2",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "ec2"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_ec2_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.ec2_autoscaling",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "ec2_autoscaling",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "autoscaling"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_ec2_autoscaling_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.ec2messages",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "ec2messages",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "ec2messages"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_ec2messages_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.ecr_api",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "ecr_api",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "ecr.api"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_ecr_api_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.ecr_dkr",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "ecr_dkr",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "ecr.dkr"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_ecr_dkr_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.ecs",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "ecs",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "ecs"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_ecs_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.ecs_agent",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "ecs_agent",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "ecs-agent"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_ecs_agent_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.ecs_telemetry",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "ecs_telemetry",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "ecs-telemetry"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_ecs_telemetry_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.efs",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "efs",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "elasticfilesystem"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_efs_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.elastic_inference_runtime",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "elastic_inference_runtime",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "elastic-inference.runtime"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_elastic_inference_runtime_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.elasticbeanstalk",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "elasticbeanstalk",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "elasticbeanstalk"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_elasticbeanstalk_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.elasticbeanstalk_health",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "elasticbeanstalk_health",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "elasticbeanstalk-health"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_elasticbeanstalk_health_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.elasticloadbalancing",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "elasticloadbalancing",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "elasticloadbalancing"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_elasticloadbalancing_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.emr",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "emr",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "elasticmapreduce"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_emr_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.events",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "events",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "events"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_events_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.git_codecommit",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "git_codecommit",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "git-codecommit"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_git_codecommit_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.glue",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "glue",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "glue"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_glue_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.kinesis_firehose",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "kinesis_firehose",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "kinesis-firehose"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_kinesis_firehose_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.kinesis_streams",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "kinesis_streams",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "kinesis-streams"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_kinesis_streams_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.kms",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "kms",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "kms"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_kms_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.lambda",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "lambda",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "lambda"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_lambda_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.logs",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "logs",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "logs"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_logs_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.monitoring",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "monitoring",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "monitoring"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_monitoring_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.qldb_session",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "qldb_session",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "qldb.session"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_qldb_session_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.rds",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "rds",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "rds"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_rds_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.rekognition",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "rekognition",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "rekognition"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_rekognition_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.s3",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "s3",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "filter": [
                                        {
                                            "name": {
                                                "constant_value": "service-type"
                                            },
                                            "values": {
                                                "references": [
                                                    "var.s3_endpoint_type"
                                                ]
                                            }
                                        }
                                    ],
                                    "service": {
                                        "constant_value": "s3"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_s3_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.sagemaker_api",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "sagemaker_api",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "sagemaker.api"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_sagemaker_api_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.sagemaker_notebook",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "sagemaker_notebook",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service_name": {
                                        "references": [
                                            "var.sagemaker_notebook_endpoint_region"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_sagemaker_notebook_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.sagemaker_runtime",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "sagemaker_runtime",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "sagemaker.runtime"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_sagemaker_runtime_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.secretsmanager",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "secretsmanager",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "secretsmanager"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_secretsmanager_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.servicecatalog",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "servicecatalog",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "servicecatalog"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_servicecatalog_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.ses",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "ses",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "email-smtp"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_ses_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.sms",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "sms",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "sms"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_sms_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.sns",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "sns",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "sns"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_sns_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.sqs",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "sqs",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "sqs"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_sqs_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.ssm",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "ssm",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "ssm"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_ssm_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.ssmmessages",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "ssmmessages",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "ssmmessages"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_ssmmessages_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.states",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "states",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "states"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_states_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.storagegateway",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "storagegateway",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "storagegateway"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_storagegateway_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.sts",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "sts",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "sts"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_sts_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.textract",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "textract",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "textract"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_textract_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.transfer",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "transfer",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "transfer"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_transfer_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.transferserver",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "transferserver",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "transfer.server"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_transferserver_endpoint"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_vpc_endpoint_service.workspaces",
                                "mode": "data",
                                "type": "aws_vpc_endpoint_service",
                                "name": "workspaces",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "service": {
                                        "constant_value": "workspaces"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_vpc",
                                        "var.enable_workspaces_endpoint"
                                    ]
                                }
                            }
                        ],
                        "variables": {
                            "access_analyzer_endpoint_policy": {
                                "default": null,
                                "description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access"
                            },
                            "access_analyzer_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for Access Analyzer endpoint"
                            },
                            "access_analyzer_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for Access Analyzer endpoint"
                            },
                            "access_analyzer_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for Access Analyzer endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used."
                            },
                            "acm_pca_endpoint_policy": {
                                "default": null,
                                "description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access"
                            },
                            "acm_pca_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for ACM PCA endpoint"
                            },
                            "acm_pca_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for ACM PCA endpoint"
                            },
                            "acm_pca_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for ACM PCA endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "amazon_side_asn": {
                                "default": "64512",
                                "description": "The Autonomous System Number (ASN) for the Amazon side of the gateway. By default the virtual private gateway is created with the current default Amazon ASN."
                            },
                            "apigw_endpoint_policy": {
                                "default": null,
                                "description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access"
                            },
                            "apigw_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for API GW endpoint"
                            },
                            "apigw_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for API GW  endpoint"
                            },
                            "apigw_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for API GW endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "appmesh_envoy_management_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for AppMesh endpoint"
                            },
                            "appmesh_envoy_management_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for AppMesh endpoint"
                            },
                            "appmesh_envoy_management_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for AppMesh endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "appstream_api_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for AppStream API endpoint"
                            },
                            "appstream_api_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for AppStream API endpoint"
                            },
                            "appstream_api_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for AppStream API endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "appstream_streaming_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for AppStream Streaming endpoint"
                            },
                            "appstream_streaming_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for AppStream Streaming endpoint"
                            },
                            "appstream_streaming_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for AppStream Streaming endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "assign_ipv6_address_on_creation": {
                                "default": false,
                                "description": "Assign IPv6 address on subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
                            },
                            "athena_endpoint_policy": {
                                "default": null,
                                "description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access"
                            },
                            "athena_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for Athena endpoint"
                            },
                            "athena_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for Athena endpoint"
                            },
                            "athena_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for Athena endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "auto_scaling_plans_endpoint_policy": {
                                "default": null,
                                "description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access"
                            },
                            "auto_scaling_plans_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for Auto Scaling Plans endpoint"
                            },
                            "auto_scaling_plans_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for Auto Scaling Plans endpoint"
                            },
                            "auto_scaling_plans_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for Auto Scaling Plans endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used."
                            },
                            "azs": {
                                "default": [],
                                "description": "A list of availability zones names or ids in the region"
                            },
                            "cidr": {
                                "default": "0.0.0.0/0",
                                "description": "The CIDR block for the VPC. Default value is a valid CIDR, but not acceptable by AWS and should be overridden"
                            },
                            "cloud_directory_endpoint_policy": {
                                "default": null,
                                "description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access"
                            },
                            "cloud_directory_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for Cloud Directory endpoint"
                            },
                            "cloud_directory_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for Cloud Directory endpoint"
                            },
                            "cloud_directory_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for Cloud Directory endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used."
                            },
                            "cloudformation_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for Cloudformation endpoint"
                            },
                            "cloudformation_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for Cloudformation endpoint"
                            },
                            "cloudformation_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for Cloudformation endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "cloudtrail_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for CloudTrail endpoint"
                            },
                            "cloudtrail_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for CloudTrail endpoint"
                            },
                            "cloudtrail_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for CloudTrail endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "codeartifact_api_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for Codeartifact API endpoint"
                            },
                            "codeartifact_api_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for Codeartifact API endpoint"
                            },
                            "codeartifact_api_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for Codeartifact API endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "codeartifact_repositories_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for Codeartifact repositories endpoint"
                            },
                            "codeartifact_repositories_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for Codeartifact repositories endpoint"
                            },
                            "codeartifact_repositories_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for Codeartifact repositories endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "codebuild_endpoint_policy": {
                                "default": null,
                                "description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access"
                            },
                            "codebuild_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for Codebuild endpoint"
                            },
                            "codebuild_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for Codebuild endpoint"
                            },
                            "codebuild_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for Codebuilt endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "codecommit_endpoint_policy": {
                                "default": null,
                                "description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access"
                            },
                            "codecommit_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for Codecommit endpoint"
                            },
                            "codecommit_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for Codecommit endpoint"
                            },
                            "codecommit_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for Codecommit endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "codedeploy_commands_secure_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for CodeDeploy Commands Secure endpoint"
                            },
                            "codedeploy_commands_secure_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for CodeDeploy Commands Secure endpoint"
                            },
                            "codedeploy_commands_secure_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for CodeDeploy Commands Secure endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "codedeploy_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for CodeDeploy endpoint"
                            },
                            "codedeploy_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for CodeDeploy endpoint"
                            },
                            "codedeploy_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for CodeDeploy endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "codepipeline_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for CodePipeline endpoint"
                            },
                            "codepipeline_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for CodePipeline endpoint"
                            },
                            "codepipeline_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for CodePipeline endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "config_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for config endpoint"
                            },
                            "config_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for config endpoint"
                            },
                            "config_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for config endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "create_database_internet_gateway_route": {
                                "default": false,
                                "description": "Controls if an internet gateway route for public database access should be created"
                            },
                            "create_database_nat_gateway_route": {
                                "default": false,
                                "description": "Controls if a nat gateway route should be created to give internet access to the database subnets"
                            },
                            "create_database_subnet_group": {
                                "default": true,
                                "description": "Controls if database subnet group should be created (n.b. database_subnets must also be set)"
                            },
                            "create_database_subnet_route_table": {
                                "default": false,
                                "description": "Controls if separate route table for database should be created"
                            },
                            "create_egress_only_igw": {
                                "default": true,
                                "description": "Controls if an Egress Only Internet Gateway is created and its related routes."
                            },
                            "create_elasticache_subnet_group": {
                                "default": true,
                                "description": "Controls if elasticache subnet group should be created"
                            },
                            "create_elasticache_subnet_route_table": {
                                "default": false,
                                "description": "Controls if separate route table for elasticache should be created"
                            },
                            "create_flow_log_cloudwatch_iam_role": {
                                "default": false,
                                "description": "Whether to create IAM role for VPC Flow Logs"
                            },
                            "create_flow_log_cloudwatch_log_group": {
                                "default": false,
                                "description": "Whether to create CloudWatch log group for VPC Flow Logs"
                            },
                            "create_igw": {
                                "default": true,
                                "description": "Controls if an Internet Gateway is created for public subnets and the related routes that connect them."
                            },
                            "create_redshift_subnet_group": {
                                "default": true,
                                "description": "Controls if redshift subnet group should be created"
                            },
                            "create_redshift_subnet_route_table": {
                                "default": false,
                                "description": "Controls if separate route table for redshift should be created"
                            },
                            "create_vpc": {
                                "default": true,
                                "description": "Controls if VPC should be created (it affects almost all resources)"
                            },
                            "customer_gateway_tags": {
                                "default": {},
                                "description": "Additional tags for the Customer Gateway"
                            },
                            "customer_gateways": {
                                "default": {},
                                "description": "Maps of Customer Gateway's attributes (BGP ASN and Gateway's Internet-routable external IP address)"
                            },
                            "database_acl_tags": {
                                "default": {},
                                "description": "Additional tags for the database subnets network ACL"
                            },
                            "database_dedicated_network_acl": {
                                "default": false,
                                "description": "Whether to use dedicated network ACL (not default) and custom rules for database subnets"
                            },
                            "database_inbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Database subnets inbound network ACL rules"
                            },
                            "database_outbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Database subnets outbound network ACL rules"
                            },
                            "database_route_table_tags": {
                                "default": {},
                                "description": "Additional tags for the database route tables"
                            },
                            "database_subnet_assign_ipv6_address_on_creation": {
                                "default": null,
                                "description": "Assign IPv6 address on database subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
                            },
                            "database_subnet_group_tags": {
                                "default": {},
                                "description": "Additional tags for the database subnet group"
                            },
                            "database_subnet_ipv6_prefixes": {
                                "default": [],
                                "description": "Assigns IPv6 database subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                            },
                            "database_subnet_suffix": {
                                "default": "db",
                                "description": "Suffix to append to database subnets name"
                            },
                            "database_subnet_tags": {
                                "default": {},
                                "description": "Additional tags for the database subnets"
                            },
                            "database_subnets": {
                                "default": [],
                                "description": "A list of database subnets"
                            },
                            "datasync_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for Data Sync endpoint"
                            },
                            "datasync_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for Data Sync endpoint"
                            },
                            "datasync_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for Data Sync endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used."
                            },
                            "default_network_acl_egress": {
                                "default": [
                                    {
                                        "action": "allow",
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_no": "100",
                                        "to_port": "0"
                                    },
                                    {
                                        "action": "allow",
                                        "from_port": "0",
                                        "ipv6_cidr_block": "::/0",
                                        "protocol": "-1",
                                        "rule_no": "101",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "List of maps of egress rules to set on the Default Network ACL"
                            },
                            "default_network_acl_ingress": {
                                "default": [
                                    {
                                        "action": "allow",
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_no": "100",
                                        "to_port": "0"
                                    },
                                    {
                                        "action": "allow",
                                        "from_port": "0",
                                        "ipv6_cidr_block": "::/0",
                                        "protocol": "-1",
                                        "rule_no": "101",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "List of maps of ingress rules to set on the Default Network ACL"
                            },
                            "default_network_acl_name": {
                                "default": "",
                                "description": "Name to be used on the Default Network ACL"
                            },
                            "default_network_acl_tags": {
                                "default": {},
                                "description": "Additional tags for the Default Network ACL"
                            },
                            "default_route_table_propagating_vgws": {
                                "default": [],
                                "description": "List of virtual gateways for propagation"
                            },
                            "default_route_table_routes": {
                                "default": [],
                                "description": "Configuration block of routes. See https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_route_table#route"
                            },
                            "default_route_table_tags": {
                                "default": {},
                                "description": "Additional tags for the default route table"
                            },
                            "default_security_group_egress": {
                                "default": null,
                                "description": "List of maps of egress rules to set on the default security group"
                            },
                            "default_security_group_ingress": {
                                "default": null,
                                "description": "List of maps of ingress rules to set on the default security group"
                            },
                            "default_security_group_name": {
                                "default": "default",
                                "description": "Name to be used on the default security group"
                            },
                            "default_security_group_tags": {
                                "default": {},
                                "description": "Additional tags for the default security group"
                            },
                            "default_vpc_enable_classiclink": {
                                "default": false,
                                "description": "Should be true to enable ClassicLink in the Default VPC"
                            },
                            "default_vpc_enable_dns_hostnames": {
                                "default": false,
                                "description": "Should be true to enable DNS hostnames in the Default VPC"
                            },
                            "default_vpc_enable_dns_support": {
                                "default": true,
                                "description": "Should be true to enable DNS support in the Default VPC"
                            },
                            "default_vpc_name": {
                                "default": "",
                                "description": "Name to be used on the Default VPC"
                            },
                            "default_vpc_tags": {
                                "default": {},
                                "description": "Additional tags for the Default VPC"
                            },
                            "dhcp_options_domain_name": {
                                "default": "",
                                "description": "Specifies DNS name for DHCP options set (requires enable_dhcp_options set to true)"
                            },
                            "dhcp_options_domain_name_servers": {
                                "default": [
                                    "AmazonProvidedDNS"
                                ],
                                "description": "Specify a list of DNS server addresses for DHCP options set, default to AWS provided (requires enable_dhcp_options set to true)"
                            },
                            "dhcp_options_netbios_name_servers": {
                                "default": [],
                                "description": "Specify a list of netbios servers for DHCP options set (requires enable_dhcp_options set to true)"
                            },
                            "dhcp_options_netbios_node_type": {
                                "default": "",
                                "description": "Specify netbios node_type for DHCP options set (requires enable_dhcp_options set to true)"
                            },
                            "dhcp_options_ntp_servers": {
                                "default": [],
                                "description": "Specify a list of NTP servers for DHCP options set (requires enable_dhcp_options set to true)"
                            },
                            "dhcp_options_tags": {
                                "default": {},
                                "description": "Additional tags for the DHCP option set (requires enable_dhcp_options set to true)"
                            },
                            "dms_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for DMS endpoint"
                            },
                            "dms_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for DMS endpoint"
                            },
                            "dms_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for DMS endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "dynamodb_endpoint_policy": {
                                "default": null,
                                "description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access"
                            },
                            "dynamodb_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for DynamoDB interface endpoint"
                            },
                            "dynamodb_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for DynamoDB interface endpoint"
                            },
                            "dynamodb_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for DynamoDB interface endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "dynamodb_endpoint_type": {
                                "default": "Gateway",
                                "description": "DynamoDB VPC endpoint type. Note - DynamoDB Interface type support is not yet available"
                            },
                            "ebs_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for EBS endpoint"
                            },
                            "ebs_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for EBS endpoint"
                            },
                            "ebs_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for EBS endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used."
                            },
                            "ec2_autoscaling_endpoint_policy": {
                                "default": null,
                                "description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access"
                            },
                            "ec2_autoscaling_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for EC2 Autoscaling endpoint"
                            },
                            "ec2_autoscaling_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for EC2 Autoscaling endpoint"
                            },
                            "ec2_autoscaling_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for EC2 Autoscaling endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "ec2_endpoint_policy": {
                                "default": null,
                                "description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access"
                            },
                            "ec2_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for EC2 endpoint"
                            },
                            "ec2_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for EC2 endpoint"
                            },
                            "ec2_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for EC2 endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "ec2messages_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for EC2MESSAGES endpoint"
                            },
                            "ec2messages_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for EC2MESSAGES endpoint"
                            },
                            "ec2messages_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for EC2MESSAGES endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "ecr_api_endpoint_policy": {
                                "default": null,
                                "description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access"
                            },
                            "ecr_api_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for ECR API endpoint"
                            },
                            "ecr_api_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for ECR API endpoint"
                            },
                            "ecr_api_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for ECR api endpoint. If omitted, private subnets will be used."
                            },
                            "ecr_dkr_endpoint_policy": {
                                "default": null,
                                "description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access"
                            },
                            "ecr_dkr_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for ECR DKR endpoint"
                            },
                            "ecr_dkr_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for ECR DKR endpoint"
                            },
                            "ecr_dkr_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for ECR dkr endpoint. If omitted, private subnets will be used."
                            },
                            "ecs_agent_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for ECS Agent endpoint"
                            },
                            "ecs_agent_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for ECS Agent endpoint"
                            },
                            "ecs_agent_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for ECS Agent endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "ecs_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for ECS endpoint"
                            },
                            "ecs_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for ECS endpoint"
                            },
                            "ecs_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for ECS endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "ecs_telemetry_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for ECS Telemetry endpoint"
                            },
                            "ecs_telemetry_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for ECS Telemetry endpoint"
                            },
                            "ecs_telemetry_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for ECS Telemetry endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "efs_endpoint_policy": {
                                "default": null,
                                "description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access"
                            },
                            "efs_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for EFS endpoint"
                            },
                            "efs_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for EFS endpoint"
                            },
                            "efs_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for EFS endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used."
                            },
                            "elastic_inference_runtime_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for Elastic Inference Runtime endpoint"
                            },
                            "elastic_inference_runtime_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for Elastic Inference Runtime endpoint"
                            },
                            "elastic_inference_runtime_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for Elastic Inference Runtime endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used."
                            },
                            "elasticache_acl_tags": {
                                "default": {},
                                "description": "Additional tags for the elasticache subnets network ACL"
                            },
                            "elasticache_dedicated_network_acl": {
                                "default": false,
                                "description": "Whether to use dedicated network ACL (not default) and custom rules for elasticache subnets"
                            },
                            "elasticache_inbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Elasticache subnets inbound network ACL rules"
                            },
                            "elasticache_outbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Elasticache subnets outbound network ACL rules"
                            },
                            "elasticache_route_table_tags": {
                                "default": {},
                                "description": "Additional tags for the elasticache route tables"
                            },
                            "elasticache_subnet_assign_ipv6_address_on_creation": {
                                "default": null,
                                "description": "Assign IPv6 address on elasticache subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
                            },
                            "elasticache_subnet_ipv6_prefixes": {
                                "default": [],
                                "description": "Assigns IPv6 elasticache subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                            },
                            "elasticache_subnet_suffix": {
                                "default": "elasticache",
                                "description": "Suffix to append to elasticache subnets name"
                            },
                            "elasticache_subnet_tags": {
                                "default": {},
                                "description": "Additional tags for the elasticache subnets"
                            },
                            "elasticache_subnets": {
                                "default": [],
                                "description": "A list of elasticache subnets"
                            },
                            "elasticbeanstalk_endpoint_policy": {
                                "default": null,
                                "description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access"
                            },
                            "elasticbeanstalk_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for Elastic Beanstalk endpoint"
                            },
                            "elasticbeanstalk_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for Elastic Beanstalk endpoint"
                            },
                            "elasticbeanstalk_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for Elastic Beanstalk endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "elasticbeanstalk_health_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for Elastic Beanstalk Health endpoint"
                            },
                            "elasticbeanstalk_health_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for Elastic Beanstalk Health endpoint"
                            },
                            "elasticbeanstalk_health_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for Elastic Beanstalk Health endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "elasticloadbalancing_endpoint_policy": {
                                "default": null,
                                "description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access"
                            },
                            "elasticloadbalancing_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for Elastic Load Balancing endpoint"
                            },
                            "elasticloadbalancing_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for Elastic Load Balancing endpoint"
                            },
                            "elasticloadbalancing_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for Elastic Load Balancing endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "emr_endpoint_policy": {
                                "default": null,
                                "description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access"
                            },
                            "emr_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for EMR endpoint"
                            },
                            "emr_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for EMR endpoint"
                            },
                            "emr_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for EMR endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used."
                            },
                            "enable_access_analyzer_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision an Access Analyzer endpoint to the VPC"
                            },
                            "enable_acm_pca_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision an ACM PCA endpoint to the VPC"
                            },
                            "enable_apigw_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision an api gateway endpoint to the VPC"
                            },
                            "enable_appmesh_envoy_management_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision a AppMesh endpoint to the VPC"
                            },
                            "enable_appstream_api_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision a AppStream API endpoint to the VPC"
                            },
                            "enable_appstream_streaming_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision a AppStream Streaming endpoint to the VPC"
                            },
                            "enable_athena_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision a Athena endpoint to the VPC"
                            },
                            "enable_auto_scaling_plans_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision an Auto Scaling Plans endpoint to the VPC"
                            },
                            "enable_classiclink": {
                                "default": null,
                                "description": "Should be true to enable ClassicLink for the VPC. Only valid in regions and accounts that support EC2 Classic."
                            },
                            "enable_classiclink_dns_support": {
                                "default": null,
                                "description": "Should be true to enable ClassicLink DNS Support for the VPC. Only valid in regions and accounts that support EC2 Classic."
                            },
                            "enable_cloud_directory_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision an Cloud Directory endpoint to the VPC"
                            },
                            "enable_cloudformation_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision a Cloudformation endpoint to the VPC"
                            },
                            "enable_cloudtrail_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision a CloudTrail endpoint to the VPC"
                            },
                            "enable_codeartifact_api_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision an Codeartifact API endpoint to the VPC"
                            },
                            "enable_codeartifact_repositories_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision an Codeartifact repositories endpoint to the VPC"
                            },
                            "enable_codebuild_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision an Codebuild endpoint to the VPC"
                            },
                            "enable_codecommit_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision an Codecommit endpoint to the VPC"
                            },
                            "enable_codedeploy_commands_secure_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision an CodeDeploy Commands Secure endpoint to the VPC"
                            },
                            "enable_codedeploy_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision an CodeDeploy endpoint to the VPC"
                            },
                            "enable_codepipeline_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision a CodePipeline endpoint to the VPC"
                            },
                            "enable_config_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision an config endpoint to the VPC"
                            },
                            "enable_datasync_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision an Data Sync endpoint to the VPC"
                            },
                            "enable_dhcp_options": {
                                "default": false,
                                "description": "Should be true if you want to specify a DHCP options set with a custom domain name, DNS servers, NTP servers, netbios servers, and/or netbios server type"
                            },
                            "enable_dms_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision a DMS endpoint to the VPC"
                            },
                            "enable_dns_hostnames": {
                                "default": false,
                                "description": "Should be true to enable DNS hostnames in the VPC"
                            },
                            "enable_dns_support": {
                                "default": true,
                                "description": "Should be true to enable DNS support in the VPC"
                            },
                            "enable_dynamodb_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision a DynamoDB endpoint to the VPC"
                            },
                            "enable_ebs_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision an EBS endpoint to the VPC"
                            },
                            "enable_ec2_autoscaling_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision an EC2 Autoscaling endpoint to the VPC"
                            },
                            "enable_ec2_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision an EC2 endpoint to the VPC"
                            },
                            "enable_ec2messages_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision an EC2MESSAGES endpoint to the VPC"
                            },
                            "enable_ecr_api_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision an ecr api endpoint to the VPC"
                            },
                            "enable_ecr_dkr_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision an ecr dkr endpoint to the VPC"
                            },
                            "enable_ecs_agent_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision a ECS Agent endpoint to the VPC"
                            },
                            "enable_ecs_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision a ECS endpoint to the VPC"
                            },
                            "enable_ecs_telemetry_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision a ECS Telemetry endpoint to the VPC"
                            },
                            "enable_efs_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision an EFS endpoint to the VPC"
                            },
                            "enable_elastic_inference_runtime_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision an Elastic Inference Runtime endpoint to the VPC"
                            },
                            "enable_elasticbeanstalk_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision a Elastic Beanstalk endpoint to the VPC"
                            },
                            "enable_elasticbeanstalk_health_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision a Elastic Beanstalk Health endpoint to the VPC"
                            },
                            "enable_elasticloadbalancing_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision a Elastic Load Balancing endpoint to the VPC"
                            },
                            "enable_emr_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision an EMR endpoint to the VPC"
                            },
                            "enable_events_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision a CloudWatch Events endpoint to the VPC"
                            },
                            "enable_flow_log": {
                                "default": false,
                                "description": "Whether or not to enable VPC Flow Logs"
                            },
                            "enable_git_codecommit_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision an Git Codecommit endpoint to the VPC"
                            },
                            "enable_glue_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision a Glue endpoint to the VPC"
                            },
                            "enable_ipv6": {
                                "default": false,
                                "description": "Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block."
                            },
                            "enable_kinesis_firehose_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision a Kinesis Firehose endpoint to the VPC"
                            },
                            "enable_kinesis_streams_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision a Kinesis Streams endpoint to the VPC"
                            },
                            "enable_kms_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision a KMS endpoint to the VPC"
                            },
                            "enable_lambda_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision a Lambda endpoint to the VPC"
                            },
                            "enable_logs_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision a CloudWatch Logs endpoint to the VPC"
                            },
                            "enable_monitoring_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision a CloudWatch Monitoring endpoint to the VPC"
                            },
                            "enable_nat_gateway": {
                                "default": false,
                                "description": "Should be true if you want to provision NAT Gateways for each of your private networks"
                            },
                            "enable_public_redshift": {
                                "default": false,
                                "description": "Controls if redshift should have public routing table"
                            },
                            "enable_public_s3_endpoint": {
                                "default": true,
                                "description": "Whether to enable S3 VPC Endpoint for public subnets"
                            },
                            "enable_qldb_session_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision an QLDB Session endpoint to the VPC"
                            },
                            "enable_rds_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision an RDS endpoint to the VPC"
                            },
                            "enable_rekognition_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision a Rekognition endpoint to the VPC"
                            },
                            "enable_s3_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision an S3 endpoint to the VPC"
                            },
                            "enable_sagemaker_api_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision a SageMaker API endpoint to the VPC"
                            },
                            "enable_sagemaker_notebook_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision a Sagemaker Notebook endpoint to the VPC"
                            },
                            "enable_sagemaker_runtime_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision a SageMaker Runtime endpoint to the VPC"
                            },
                            "enable_secretsmanager_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision an Secrets Manager endpoint to the VPC"
                            },
                            "enable_servicecatalog_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision a Service Catalog endpoint to the VPC"
                            },
                            "enable_ses_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision an SES endpoint to the VPC"
                            },
                            "enable_sms_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision an SMS endpoint to the VPC"
                            },
                            "enable_sns_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision a SNS endpoint to the VPC"
                            },
                            "enable_sqs_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision an SQS endpoint to the VPC"
                            },
                            "enable_ssm_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision an SSM endpoint to the VPC"
                            },
                            "enable_ssmmessages_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision a SSMMESSAGES endpoint to the VPC"
                            },
                            "enable_states_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision a Step Function endpoint to the VPC"
                            },
                            "enable_storagegateway_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision a Storage Gateway endpoint to the VPC"
                            },
                            "enable_sts_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision a STS endpoint to the VPC"
                            },
                            "enable_textract_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision an Textract endpoint to the VPC"
                            },
                            "enable_transfer_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision a Transfer endpoint to the VPC"
                            },
                            "enable_transferserver_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision a Transfer Server endpoint to the VPC"
                            },
                            "enable_vpn_gateway": {
                                "default": false,
                                "description": "Should be true if you want to create a new VPN Gateway resource and attach it to the VPC"
                            },
                            "enable_workspaces_endpoint": {
                                "default": false,
                                "description": "Should be true if you want to provision an Workspaces endpoint to the VPC"
                            },
                            "events_endpoint_policy": {
                                "default": null,
                                "description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access"
                            },
                            "events_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for CloudWatch Events endpoint"
                            },
                            "events_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for CloudWatch Events endpoint"
                            },
                            "events_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for CloudWatch Events endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "external_nat_ip_ids": {
                                "default": [],
                                "description": "List of EIP IDs to be assigned to the NAT Gateways (used in combination with reuse_nat_ips)"
                            },
                            "external_nat_ips": {
                                "default": [],
                                "description": "List of EIPs to be used for `nat_public_ips` output (used in combination with reuse_nat_ips and external_nat_ip_ids)"
                            },
                            "flow_log_cloudwatch_iam_role_arn": {
                                "default": "",
                                "description": "The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group. When flow_log_destination_arn is set to ARN of Cloudwatch Logs, this argument needs to be provided."
                            },
                            "flow_log_cloudwatch_log_group_kms_key_id": {
                                "default": null,
                                "description": "The ARN of the KMS Key to use when encrypting log data for VPC flow logs."
                            },
                            "flow_log_cloudwatch_log_group_name_prefix": {
                                "default": "/aws/vpc-flow-log/",
                                "description": "Specifies the name prefix of CloudWatch Log Group for VPC flow logs."
                            },
                            "flow_log_cloudwatch_log_group_retention_in_days": {
                                "default": null,
                                "description": "Specifies the number of days you want to retain log events in the specified log group for VPC flow logs."
                            },
                            "flow_log_destination_arn": {
                                "default": "",
                                "description": "The ARN of the CloudWatch log group or S3 bucket where VPC Flow Logs will be pushed. If this ARN is a S3 bucket the appropriate permissions need to be set on that bucket's policy. When create_flow_log_cloudwatch_log_group is set to false this argument must be provided."
                            },
                            "flow_log_destination_type": {
                                "default": "cloud-watch-logs",
                                "description": "Type of flow log destination. Can be s3 or cloud-watch-logs."
                            },
                            "flow_log_log_format": {
                                "default": null,
                                "description": "The fields to include in the flow log record, in the order in which they should appear."
                            },
                            "flow_log_max_aggregation_interval": {
                                "default": 600,
                                "description": "The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. Valid Values: `60` seconds or `600` seconds."
                            },
                            "flow_log_traffic_type": {
                                "default": "ALL",
                                "description": "The type of traffic to capture. Valid values: ACCEPT, REJECT, ALL."
                            },
                            "git_codecommit_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for Git Codecommit endpoint"
                            },
                            "git_codecommit_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for Git Codecommit endpoint"
                            },
                            "git_codecommit_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for Git Codecommit endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "glue_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for Glue endpoint"
                            },
                            "glue_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for Glue endpoint"
                            },
                            "glue_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for Glue endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "igw_tags": {
                                "default": {},
                                "description": "Additional tags for the internet gateway"
                            },
                            "instance_tenancy": {
                                "default": "default",
                                "description": "A tenancy option for instances launched into the VPC"
                            },
                            "intra_acl_tags": {
                                "default": {},
                                "description": "Additional tags for the intra subnets network ACL"
                            },
                            "intra_dedicated_network_acl": {
                                "default": false,
                                "description": "Whether to use dedicated network ACL (not default) and custom rules for intra subnets"
                            },
                            "intra_inbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Intra subnets inbound network ACLs"
                            },
                            "intra_outbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Intra subnets outbound network ACLs"
                            },
                            "intra_route_table_tags": {
                                "default": {},
                                "description": "Additional tags for the intra route tables"
                            },
                            "intra_subnet_assign_ipv6_address_on_creation": {
                                "default": null,
                                "description": "Assign IPv6 address on intra subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
                            },
                            "intra_subnet_ipv6_prefixes": {
                                "default": [],
                                "description": "Assigns IPv6 intra subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                            },
                            "intra_subnet_suffix": {
                                "default": "intra",
                                "description": "Suffix to append to intra subnets name"
                            },
                            "intra_subnet_tags": {
                                "default": {},
                                "description": "Additional tags for the intra subnets"
                            },
                            "intra_subnets": {
                                "default": [],
                                "description": "A list of intra subnets"
                            },
                            "kinesis_firehose_endpoint_policy": {
                                "default": null,
                                "description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access"
                            },
                            "kinesis_firehose_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for Kinesis Firehose endpoint"
                            },
                            "kinesis_firehose_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for Kinesis Firehose endpoint"
                            },
                            "kinesis_firehose_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for Kinesis Firehose endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "kinesis_streams_endpoint_policy": {
                                "default": null,
                                "description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access"
                            },
                            "kinesis_streams_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for Kinesis Streams endpoint"
                            },
                            "kinesis_streams_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for Kinesis Streams endpoint"
                            },
                            "kinesis_streams_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for Kinesis Streams endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "kms_endpoint_policy": {
                                "default": null,
                                "description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access"
                            },
                            "kms_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for KMS endpoint"
                            },
                            "kms_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for KMS endpoint"
                            },
                            "kms_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for KMS endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "lambda_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for Lambda endpoint"
                            },
                            "lambda_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for Lambda endpoint"
                            },
                            "lambda_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for Lambda endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "logs_endpoint_policy": {
                                "default": null,
                                "description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access"
                            },
                            "logs_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for CloudWatch Logs endpoint"
                            },
                            "logs_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for CloudWatch Logs endpoint"
                            },
                            "logs_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for CloudWatch Logs endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "manage_default_network_acl": {
                                "default": false,
                                "description": "Should be true to adopt and manage Default Network ACL"
                            },
                            "manage_default_route_table": {
                                "default": false,
                                "description": "Should be true to manage default route table"
                            },
                            "manage_default_security_group": {
                                "default": false,
                                "description": "Should be true to adopt and manage default security group"
                            },
                            "manage_default_vpc": {
                                "default": false,
                                "description": "Should be true to adopt and manage Default VPC"
                            },
                            "map_public_ip_on_launch": {
                                "default": true,
                                "description": "Should be false if you do not want to auto-assign public IP on launch"
                            },
                            "monitoring_endpoint_policy": {
                                "default": null,
                                "description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access"
                            },
                            "monitoring_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for CloudWatch Monitoring endpoint"
                            },
                            "monitoring_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for CloudWatch Monitoring endpoint"
                            },
                            "monitoring_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for CloudWatch Monitoring endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "name": {
                                "default": "",
                                "description": "Name to be used on all the resources as identifier"
                            },
                            "nat_eip_tags": {
                                "default": {},
                                "description": "Additional tags for the NAT EIP"
                            },
                            "nat_gateway_tags": {
                                "default": {},
                                "description": "Additional tags for the NAT gateways"
                            },
                            "one_nat_gateway_per_az": {
                                "default": false,
                                "description": "Should be true if you want only one NAT Gateway per availability zone. Requires `var.azs` to be set, and the number of `public_subnets` created to be greater than or equal to the number of availability zones specified in `var.azs`."
                            },
                            "outpost_acl_tags": {
                                "default": {},
                                "description": "Additional tags for the outpost subnets network ACL"
                            },
                            "outpost_arn": {
                                "default": null,
                                "description": "ARN of Outpost you want to create a subnet in."
                            },
                            "outpost_az": {
                                "default": null,
                                "description": "AZ where Outpost is anchored."
                            },
                            "outpost_dedicated_network_acl": {
                                "default": false,
                                "description": "Whether to use dedicated network ACL (not default) and custom rules for outpost subnets"
                            },
                            "outpost_inbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Outpost subnets inbound network ACLs"
                            },
                            "outpost_outbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Outpost subnets outbound network ACLs"
                            },
                            "outpost_subnet_assign_ipv6_address_on_creation": {
                                "default": null,
                                "description": "Assign IPv6 address on outpost subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
                            },
                            "outpost_subnet_ipv6_prefixes": {
                                "default": [],
                                "description": "Assigns IPv6 outpost subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                            },
                            "outpost_subnet_suffix": {
                                "default": "outpost",
                                "description": "Suffix to append to outpost subnets name"
                            },
                            "outpost_subnet_tags": {
                                "default": {},
                                "description": "Additional tags for the outpost subnets"
                            },
                            "outpost_subnets": {
                                "default": [],
                                "description": "A list of outpost subnets inside the VPC"
                            },
                            "private_acl_tags": {
                                "default": {},
                                "description": "Additional tags for the private subnets network ACL"
                            },
                            "private_dedicated_network_acl": {
                                "default": false,
                                "description": "Whether to use dedicated network ACL (not default) and custom rules for private subnets"
                            },
                            "private_inbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Private subnets inbound network ACLs"
                            },
                            "private_outbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Private subnets outbound network ACLs"
                            },
                            "private_route_table_tags": {
                                "default": {},
                                "description": "Additional tags for the private route tables"
                            },
                            "private_subnet_assign_ipv6_address_on_creation": {
                                "default": null,
                                "description": "Assign IPv6 address on private subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
                            },
                            "private_subnet_ipv6_prefixes": {
                                "default": [],
                                "description": "Assigns IPv6 private subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                            },
                            "private_subnet_suffix": {
                                "default": "private",
                                "description": "Suffix to append to private subnets name"
                            },
                            "private_subnet_tags": {
                                "default": {},
                                "description": "Additional tags for the private subnets"
                            },
                            "private_subnets": {
                                "default": [],
                                "description": "A list of private subnets inside the VPC"
                            },
                            "propagate_intra_route_tables_vgw": {
                                "default": false,
                                "description": "Should be true if you want route table propagation"
                            },
                            "propagate_private_route_tables_vgw": {
                                "default": false,
                                "description": "Should be true if you want route table propagation"
                            },
                            "propagate_public_route_tables_vgw": {
                                "default": false,
                                "description": "Should be true if you want route table propagation"
                            },
                            "public_acl_tags": {
                                "default": {},
                                "description": "Additional tags for the public subnets network ACL"
                            },
                            "public_dedicated_network_acl": {
                                "default": false,
                                "description": "Whether to use dedicated network ACL (not default) and custom rules for public subnets"
                            },
                            "public_inbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Public subnets inbound network ACLs"
                            },
                            "public_outbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Public subnets outbound network ACLs"
                            },
                            "public_route_table_tags": {
                                "default": {},
                                "description": "Additional tags for the public route tables"
                            },
                            "public_subnet_assign_ipv6_address_on_creation": {
                                "default": null,
                                "description": "Assign IPv6 address on public subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
                            },
                            "public_subnet_ipv6_prefixes": {
                                "default": [],
                                "description": "Assigns IPv6 public subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                            },
                            "public_subnet_suffix": {
                                "default": "public",
                                "description": "Suffix to append to public subnets name"
                            },
                            "public_subnet_tags": {
                                "default": {},
                                "description": "Additional tags for the public subnets"
                            },
                            "public_subnets": {
                                "default": [],
                                "description": "A list of public subnets inside the VPC"
                            },
                            "qldb_session_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for QLDB Session endpoint"
                            },
                            "qldb_session_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for QLDB Session endpoint"
                            },
                            "qldb_session_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for QLDB Session endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used."
                            },
                            "rds_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for RDS endpoint"
                            },
                            "rds_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for RDS endpoint"
                            },
                            "rds_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for RDS endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "redshift_acl_tags": {
                                "default": {},
                                "description": "Additional tags for the redshift subnets network ACL"
                            },
                            "redshift_dedicated_network_acl": {
                                "default": false,
                                "description": "Whether to use dedicated network ACL (not default) and custom rules for redshift subnets"
                            },
                            "redshift_inbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Redshift subnets inbound network ACL rules"
                            },
                            "redshift_outbound_acl_rules": {
                                "default": [
                                    {
                                        "cidr_block": "0.0.0.0/0",
                                        "from_port": "0",
                                        "protocol": "-1",
                                        "rule_action": "allow",
                                        "rule_number": "100",
                                        "to_port": "0"
                                    }
                                ],
                                "description": "Redshift subnets outbound network ACL rules"
                            },
                            "redshift_route_table_tags": {
                                "default": {},
                                "description": "Additional tags for the redshift route tables"
                            },
                            "redshift_subnet_assign_ipv6_address_on_creation": {
                                "default": null,
                                "description": "Assign IPv6 address on redshift subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
                            },
                            "redshift_subnet_group_tags": {
                                "default": {},
                                "description": "Additional tags for the redshift subnet group"
                            },
                            "redshift_subnet_ipv6_prefixes": {
                                "default": [],
                                "description": "Assigns IPv6 redshift subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                            },
                            "redshift_subnet_suffix": {
                                "default": "redshift",
                                "description": "Suffix to append to redshift subnets name"
                            },
                            "redshift_subnet_tags": {
                                "default": {},
                                "description": "Additional tags for the redshift subnets"
                            },
                            "redshift_subnets": {
                                "default": [],
                                "description": "A list of redshift subnets"
                            },
                            "rekognition_endpoint_policy": {
                                "default": null,
                                "description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access"
                            },
                            "rekognition_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for Rekognition endpoint"
                            },
                            "rekognition_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for Rekognition endpoint"
                            },
                            "rekognition_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for Rekognition endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "reuse_nat_ips": {
                                "default": false,
                                "description": "Should be true if you don't want EIPs to be created for your NAT Gateways and will instead pass them in via the 'external_nat_ip_ids' variable"
                            },
                            "s3_endpoint_policy": {
                                "default": null,
                                "description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access"
                            },
                            "s3_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for S3 interface endpoint"
                            },
                            "s3_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for S3 interface endpoint"
                            },
                            "s3_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for S3 interface endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "s3_endpoint_type": {
                                "default": "Gateway",
                                "description": "S3 VPC endpoint type. Note - S3 Interface type support is only available on AWS provider 3.10 and later"
                            },
                            "sagemaker_api_endpoint_policy": {
                                "default": null,
                                "description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access"
                            },
                            "sagemaker_api_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for SageMaker API endpoint"
                            },
                            "sagemaker_api_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for SageMaker API endpoint"
                            },
                            "sagemaker_api_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for SageMaker API endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "sagemaker_notebook_endpoint_policy": {
                                "default": null,
                                "description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access"
                            },
                            "sagemaker_notebook_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for Sagemaker Notebook endpoint"
                            },
                            "sagemaker_notebook_endpoint_region": {
                                "default": "",
                                "description": "Region to use for Sagemaker Notebook endpoint"
                            },
                            "sagemaker_notebook_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for Sagemaker Notebook endpoint"
                            },
                            "sagemaker_notebook_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for Sagemaker Notebook endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "sagemaker_runtime_endpoint_policy": {
                                "default": null,
                                "description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access"
                            },
                            "sagemaker_runtime_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for SageMaker Runtime endpoint"
                            },
                            "sagemaker_runtime_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for SageMaker Runtime endpoint"
                            },
                            "sagemaker_runtime_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for SageMaker Runtime endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "secondary_cidr_blocks": {
                                "default": [],
                                "description": "List of secondary CIDR blocks to associate with the VPC to extend the IP Address pool"
                            },
                            "secretsmanager_endpoint_policy": {
                                "default": null,
                                "description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access"
                            },
                            "secretsmanager_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for Secrets Manager endpoint"
                            },
                            "secretsmanager_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for Secrets Manager endpoint"
                            },
                            "secretsmanager_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for Secrets Manager endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "servicecatalog_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for Service Catalog endpoint"
                            },
                            "servicecatalog_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for Service Catalog endpoint"
                            },
                            "servicecatalog_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for Service Catalog endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "ses_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for SES endpoint"
                            },
                            "ses_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for SES endpoint"
                            },
                            "ses_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for SES endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "single_nat_gateway": {
                                "default": false,
                                "description": "Should be true if you want to provision a single shared NAT Gateway across all of your private networks"
                            },
                            "sms_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for SMS endpoint"
                            },
                            "sms_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for SMS endpoint"
                            },
                            "sms_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for SMS endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used."
                            },
                            "sns_endpoint_policy": {
                                "default": null,
                                "description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access"
                            },
                            "sns_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for SNS endpoint"
                            },
                            "sns_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for SNS endpoint"
                            },
                            "sns_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for SNS endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "sqs_endpoint_policy": {
                                "default": null,
                                "description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access"
                            },
                            "sqs_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for SQS endpoint"
                            },
                            "sqs_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for SQS endpoint"
                            },
                            "sqs_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for SQS endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "ssm_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for SSM endpoint"
                            },
                            "ssm_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for SSM endpoint"
                            },
                            "ssm_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for SSM endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "ssmmessages_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for SSMMESSAGES endpoint"
                            },
                            "ssmmessages_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for SSMMESSAGES endpoint"
                            },
                            "ssmmessages_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for SSMMESSAGES endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "states_endpoint_policy": {
                                "default": null,
                                "description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access"
                            },
                            "states_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for Step Function endpoint"
                            },
                            "states_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for Step Function endpoint"
                            },
                            "states_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for Step Function endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "storagegateway_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for Storage Gateway endpoint"
                            },
                            "storagegateway_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for Storage Gateway endpoint"
                            },
                            "storagegateway_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for Storage Gateway endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "sts_endpoint_policy": {
                                "default": null,
                                "description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access"
                            },
                            "sts_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for STS endpoint"
                            },
                            "sts_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for STS endpoint"
                            },
                            "sts_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for STS endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "tags": {
                                "default": {},
                                "description": "A map of tags to add to all resources"
                            },
                            "textract_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for Textract endpoint"
                            },
                            "textract_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for Textract endpoint"
                            },
                            "textract_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for Textract endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "transfer_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for Transfer endpoint"
                            },
                            "transfer_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for Transfer endpoint"
                            },
                            "transfer_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for Transfer endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "transferserver_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for Transfer Server endpoint"
                            },
                            "transferserver_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for Transfer Server endpoint"
                            },
                            "transferserver_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for Transfer Server endpoint. Only a single subnet within an AZ is supported. If omitted, private subnets will be used."
                            },
                            "vpc_endpoint_tags": {
                                "default": {},
                                "description": "Additional tags for the VPC Endpoints"
                            },
                            "vpc_flow_log_permissions_boundary": {
                                "default": null,
                                "description": "The ARN of the Permissions Boundary for the VPC Flow Log IAM Role"
                            },
                            "vpc_flow_log_tags": {
                                "default": {},
                                "description": "Additional tags for the VPC Flow Logs"
                            },
                            "vpc_tags": {
                                "default": {},
                                "description": "Additional tags for the VPC"
                            },
                            "vpn_gateway_az": {
                                "default": null,
                                "description": "The Availability Zone for the VPN Gateway"
                            },
                            "vpn_gateway_id": {
                                "default": "",
                                "description": "ID of VPN Gateway to attach to the VPC"
                            },
                            "vpn_gateway_tags": {
                                "default": {},
                                "description": "Additional tags for the VPN gateway"
                            },
                            "workspaces_endpoint_policy": {
                                "default": null,
                                "description": "A policy to attach to the endpoint that controls access to the service. Defaults to full access"
                            },
                            "workspaces_endpoint_private_dns_enabled": {
                                "default": false,
                                "description": "Whether or not to associate a private hosted zone with the specified VPC for Workspaces endpoint"
                            },
                            "workspaces_endpoint_security_group_ids": {
                                "default": [],
                                "description": "The ID of one or more security groups to associate with the network interface for Workspaces endpoint"
                            },
                            "workspaces_endpoint_subnet_ids": {
                                "default": [],
                                "description": "The ID of one or more subnets in which to create a network interface for Workspaces endpoint. Only a single subnet within an AZ is supported. Ifomitted, private subnets will be used."
                            }
                        }
                    },
                    "version_constraint": "~\u003e2.0"
                }
            },
            "variables": {
                "cf_price_class": {
                    "default": "PriceClass_100",
                    "description": "The price class for this distribution. One of PriceClass_All, PriceClass_200, PriceClass_100"
                },
                "db_auto_pause": {
                    "default": true,
                    "description": "Whether to enable auto pause"
                },
                "db_backup_retention_days": {
                    "default": "1",
                    "description": "Number of days to retain db backups"
                },
                "db_backup_window": {
                    "default": "07:00-09:00",
                    "description": "The daily time range during which automated backups for rds are created if automated backups are enabled using the BackupRetentionPeriod parameter. Time in UTC."
                },
                "db_engine_version": {
                    "default": "5.6.10a",
                    "description": "The database engine version"
                },
                "db_master_password": {
                    "description": "Master password of the db"
                },
                "db_master_username": {
                    "description": "Master username of the db"
                },
                "db_max_capacity": {
                    "default": "1",
                    "description": "The maximum Aurora capacity unit of the db. Ref - https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.how-it-works.html"
                },
                "db_min_capacity": {
                    "default": "1",
                    "description": "The minimum Aurora capacity unit of the db. Ref - https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.how-it-works.html"
                },
                "db_seconds_until_auto_pause": {
                    "default": 300,
                    "description": "The time in seconds before Aurora DB is paused"
                },
                "desired_count": {
                    "default": "1",
                    "description": "The number of instances of fargate tasks to keep running"
                },
                "environment": {
                    "default": "dev",
                    "description": "Name of the application environment. e.g. dev, prod, test, staging"
                },
                "error_ttl": {
                    "default": "30",
                    "description": "The minimum amount of time (in secs) that cloudfront caches an HTTP error code."
                },
                "log_retention_in_days": {
                    "default": "1",
                    "description": "The number of days to retain cloudwatch log"
                },
                "max_task": {
                    "default": "2",
                    "description": "Maximum number of tasks should the service scale to"
                },
                "min_task": {
                    "default": "1",
                    "description": "Minimum number of tasks should the service always maintain"
                },
                "prefix": {
                    "default": "wordpress",
                    "description": "Prefix for all the resources to be created. Please note thst 2 allows only lowercase alphanumeric characters and hyphen"
                },
                "private_subnet_cidrs": {
                    "default": [
                        "10.0.100.0/24",
                        "10.0.101.0/24",
                        "10.0.102.0/24"
                    ],
                    "description": "List of CIDR blocks for private subnets"
                },
                "public_alb_domain": {
                    "description": "The public domian name of the ALB"
                },
                "public_subnet_cidrs": {
                    "default": [
                        "10.0.0.0/24",
                        "10.0.1.0/24",
                        "10.0.2.0/24"
                    ],
                    "description": "List of CIDR blocks for public subnets"
                },
                "scaling_down_adjustment": {
                    "default": "-1",
                    "description": " The number of tasks by which to scale (negative for downscaling), when the downscaling parameters are breached"
                },
                "scaling_down_cooldown": {
                    "default": "300",
                    "description": "The amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start (downscaling)"
                },
                "scaling_up_adjustment": {
                    "default": "1",
                    "description": " The number of tasks by which to scale, when the upscaling parameters are breached"
                },
                "scaling_up_cooldown": {
                    "default": "60",
                    "description": "The amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start (upscaling)"
                },
                "site_domain": {
                    "description": "The primary domain name of the website"
                },
                "tags": {
                    "default": {},
                    "description": "AWS Tags to add to all resources created (where possible); see https://aws.amazon.com/answers/account-management/aws-tagging-strategies/"
                },
                "task_cpu": {
                    "default": 1024,
                    "description": "The number of cpu units used by the task"
                },
                "task_cpu_high_threshold": {
                    "default": "75",
                    "description": "The CPU value above which downscaling kicks in"
                },
                "task_cpu_low_threshold": {
                    "default": "30",
                    "description": "The CPU value below which downscaling kicks in"
                },
                "task_memory": {
                    "default": 2048,
                    "description": "The amount (in MiB) of memory used by the task"
                },
                "vpc_cidr": {
                    "default": "10.0.0.0/16",
                    "description": "The CIDR block for the VPC"
                }
            }
        }
    },
    "relevant_attributes": [
        {
            "resource": "module.vpc.aws_vpc_endpoint.kms",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc.this[0]",
            "attribute": [
                "ipv6_cidr_block"
            ]
        },
        {
            "resource": "aws_ssm_parameter.db_master_user",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.servicecatalog",
            "attribute": []
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.rds[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.aws_network_acl.public",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.codepipeline",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.ses",
            "attribute": []
        },
        {
            "resource": "aws_ecs_service.this",
            "attribute": [
                "name"
            ]
        },
        {
            "resource": "module.vpc.aws_network_acl.outpost",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_subnet.outpost",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.auto_scaling_plans",
            "attribute": []
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.qldb_session[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.aws_db_subnet_group.database",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_route_table.redshift",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_route_table_association.elasticache",
            "attribute": []
        },
        {
            "resource": "random_string.snapshot_suffix",
            "attribute": [
                "result"
            ]
        },
        {
            "resource": "data.aws_region.current",
            "attribute": [
                "name"
            ]
        },
        {
            "resource": "module.vpc.aws_default_vpc.this",
            "attribute": []
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.codeartifact_api[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.aws_route_table.intra",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_subnet.elasticache",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.kinesis_streams",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc.this",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_elasticache_subnet_group.elasticache",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.apigw",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.storagegateway",
            "attribute": []
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.s3[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.aws_subnet.public",
            "attribute": []
        },
        {
            "resource": "aws_ecs_cluster.this",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "aws_appautoscaling_policy.scale_down",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.kinesis_streams[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.acm_alb.aws_acm_certificate.this",
            "attribute": []
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.transferserver[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.aws_route.public_internet_gateway",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_route_table_association.redshift_public",
            "attribute": []
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.codebuild[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.glue",
            "attribute": []
        },
        {
            "resource": "module.acm.aws_acm_certificate.this",
            "attribute": []
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.ecs_agent[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.codecommit[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "aws_security_group.efs",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.sts",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.efs",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_route_table.database[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.datasync[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.ssm[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.sns[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.aws_customer_gateway.this",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.kinesis_firehose",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.cloud_directory",
            "attribute": []
        },
        {
            "resource": "module.alb.aws_lb_target_group_attachment.this",
            "attribute": []
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.emr[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.sms[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.access_analyzer[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "aws_appautoscaling_target.this",
            "attribute": [
                "resource_id"
            ]
        },
        {
            "resource": "module.vpc.aws_route.private_ipv6_egress",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.cloudformation",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_nat_gateway.this",
            "attribute": []
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.athena[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.ebs[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "aws_iam_role.task_execution_role",
            "attribute": [
                "name"
            ]
        },
        {
            "resource": "aws_security_group.db",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.sagemaker_api",
            "attribute": []
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.codeartifact_repositories[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.datasync",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.ecr_dkr",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.appstream_streaming",
            "attribute": []
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.ssmmessages[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "aws_cloudwatch_log_group.wordpress",
            "attribute": [
                "name"
            ]
        },
        {
            "resource": "module.vpc.aws_network_acl.database",
            "attribute": []
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.elasticbeanstalk[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.aws_redshift_subnet_group.redshift",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.codecommit",
            "attribute": []
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.ec2[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "aws_iam_role.task_role",
            "attribute": [
                "name"
            ]
        },
        {
            "resource": "module.vpc.aws_egress_only_internet_gateway.this",
            "attribute": []
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.appmesh_envoy_management[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.sagemaker_api[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.aws_cloudwatch_log_group.flow_log[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.s3",
            "attribute": []
        },
        {
            "resource": "module.alb.aws_lb.this",
            "attribute": []
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.sagemaker_runtime[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.rekognition",
            "attribute": []
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.elastic_inference_runtime[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.ebs",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.appmesh_envoy_management",
            "attribute": []
        },
        {
            "resource": "module.alb.aws_lb_target_group.main",
            "attribute": []
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.kinesis_firehose[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "aws_ssm_parameter.db_master_password",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.vpc.aws_flow_log.this",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.codebuild",
            "attribute": []
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.events[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.sts[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.aws_network_acl.intra",
            "attribute": []
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.servicecatalog[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.logs[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.athena",
            "attribute": []
        },
        {
            "resource": "aws_rds_cluster.this",
            "attribute": [
                "endpoint"
            ]
        },
        {
            "resource": "aws_iam_role.task_role",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.cloudtrail",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_subnet.private",
            "attribute": []
        },
        {
            "resource": "module.alb.aws_lb_listener.frontend_http_tcp",
            "attribute": []
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.cloud_directory[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.aws_subnet.redshift",
            "attribute": []
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.lambda[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "aws_appautoscaling_policy.scale_up",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.ecr_dkr[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.git_codecommit[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.states",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_route.database_nat_gateway",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_route.private_nat_gateway",
            "attribute": []
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.workspaces[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.ec2messages[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.aws_internet_gateway.this",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_subnet.database",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_eip.nat",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.sns",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_network_acl.elasticache",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.textract",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.appstream_api",
            "attribute": []
        },
        {
            "resource": "aws_appautoscaling_target.this",
            "attribute": [
                "service_namespace"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.elasticbeanstalk_health",
            "attribute": []
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.efs[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.acm_pca[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.rekognition[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.aws_route_table.public[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "aws_efs_file_system.this",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "aws_iam_role.task_execution_role",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.ecs_telemetry",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_route_table_association.intra",
            "attribute": []
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.textract[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.monitoring[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "aws_lb_target_group.this",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.acm_pca",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.ec2messages",
            "attribute": []
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.ec2_autoscaling[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.ec2_autoscaling",
            "attribute": []
        },
        {
            "resource": "module.alb.aws_lb.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.cloudtrail[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.elasticloadbalancing[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.elasticbeanstalk_health[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.aws_route_table.elasticache",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.logs",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.ec2",
            "attribute": []
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.secretsmanager[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.config[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.cloudformation[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.ses[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.workspaces",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.sms",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.git_codecommit",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.monitoring",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.sagemaker_runtime",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.transferserver",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.emr",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_internet_gateway.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "aws_security_group.alb",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.vpc.aws_vpn_gateway.this",
            "attribute": []
        },
        {
            "resource": "aws_iam_policy.task_policy",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.transfer",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.rds",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.acm_alb.aws_acm_certificate.this[0]",
            "attribute": [
                "domain_validation_options"
            ]
        },
        {
            "resource": "module.vpc.aws_route.database_internet_gateway",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_network_acl.redshift",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.codeartifact_api",
            "attribute": []
        },
        {
            "resource": "module.acm.aws_acm_certificate.this[0]",
            "attribute": [
                "domain_validation_options"
            ]
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.appstream_api[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "aws_appautoscaling_target.this",
            "attribute": [
                "scalable_dimension"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.elasticbeanstalk",
            "attribute": []
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.glue[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "aws_ecs_cluster.this",
            "attribute": [
                "name"
            ]
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.states[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "aws_db_subnet_group.this",
            "attribute": [
                "name"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.events",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.secretsmanager",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.codeartifact_repositories",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.ecr_api",
            "attribute": []
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.ecs_telemetry[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.sqs[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.aws_iam_role.vpc_flow_log_cloudwatch[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "data.aws_availability_zones.this",
            "attribute": [
                "names"
            ]
        },
        {
            "resource": "module.vpc.aws_network_acl.private",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.ssm",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpn_gateway_attachment.this",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.access_analyzer",
            "attribute": []
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.kms[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "aws_iam_policy.task_execution_policy",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.vpc.aws_route.public_internet_gateway_ipv6",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_route_table_association.database",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_route.database_ipv6_egress",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_egress_only_internet_gateway.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.elasticloadbalancing",
            "attribute": []
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.appstream_streaming[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.aws_subnet.intra",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.config",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.elastic_inference_runtime",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_route_table.private",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.ecs",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.ecs_agent",
            "attribute": []
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.codepipeline[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.apigw[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.aws_route_table_association.public",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.ssmmessages",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.qldb_session",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_route_table.database",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.dynamodb",
            "attribute": []
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.storagegateway[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.aws_route_table.public",
            "attribute": []
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.auto_scaling_plans[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.aws_route_table_association.private",
            "attribute": []
        },
        {
            "resource": "module.vpc.aws_route_table_association.redshift",
            "attribute": []
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.ecr_api[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.transfer[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.sqs",
            "attribute": []
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.ecs[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "module.vpc.data.aws_vpc_endpoint_service.dynamodb[0]",
            "attribute": [
                "service_name"
            ]
        },
        {
            "resource": "aws_ecs_task_definition.this",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.vpc.aws_vpc_endpoint.lambda",
            "attribute": []
        }
    ],
    "timestamp": "2023-08-28T13:01:05Z"
}